table Disk
	lineageTag: 34ac7141-26c3-4881-b7f7-5d0a6e9871bc

	column Disk
		dataType: string
		lineageTag: 8396497a-9b47-4fab-ad41-b76492cab8aa
		summarizeBy: none
		sourceColumn: Disk

		annotation SummarizationSetBy = Automatic

	column DiskKey
		dataType: int64
		isHidden
		formatString: 0
		lineageTag: 57b745cd-7889-4613-9f75-66002d133508
		summarizeBy: none
		sourceColumn: DiskKey

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	partition Disk = m
		mode: import
		queryGroup: Dimensions
		source = ```
				let
				  loadConfigFirstMatch = Table.First(
				    Table.SelectRows(
				      #"Data load", 
				      each List.Contains(
				        {"Capacity"}, 
				        [Service]
				      )
				        and List.Contains({"Yes"}, [DataLoad])
				    )
				  ), 
				  loadConfig = 
				    if (loadConfigFirstMatch = null) then
				      "No"
				    else
				      Record.Field(loadConfigFirstMatch, "DataLoad"), 
				  dbList = Sql.Databases(#"Server name"), 
				  db     = dbList{[Name = #"Database name"]}[Data], 
				  table  = db{[Schema = #"Schema name", Item = "Disk"]}[Data], 
				  emptyDataset = Table.FirstN(table, 0), 
				  datasetToUse = if (loadConfig = "Yes") then table else emptyDataset
				in
				  datasetToUse
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

