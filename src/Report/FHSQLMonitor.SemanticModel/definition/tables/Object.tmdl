table Object
	lineageTag: 0967b613-1669-445a-b063-2ed7d2c8f212

	column Database
		dataType: string
		lineageTag: c790ac85-8ba8-430a-b04a-8648153fe5f1
		summarizeBy: none
		sourceColumn: Database

		annotation SummarizationSetBy = Automatic

	column Schema
		dataType: string
		lineageTag: cb5316fa-c2e4-455d-9cfa-ec4e8426f33f
		summarizeBy: none
		sourceColumn: Schema

		annotation SummarizationSetBy = Automatic

	column Object
		dataType: string
		lineageTag: b09c37dd-ee3c-4f3f-906f-69942d0a6eb5
		summarizeBy: none
		sourceColumn: Object

		annotation SummarizationSetBy = Automatic

	column ObjectKey
		dataType: int64
		isHidden
		formatString: 0
		lineageTag: fdf8ca11-f78d-47d3-aa23-45904a600564
		summarizeBy: none
		sourceColumn: ObjectKey

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	partition Object = m
		mode: import
		queryGroup: Dimensions
		source = ```
				let
				  loadConfigFirstMatch = Table.First(
				    Table.SelectRows(
				      #"Data load", 
				      each List.Contains({"Index usage", "Missing indexes", "Statistics", "Table size"}, [Service])
				        and List.Contains({"Yes"}, [DataLoad])
				    )
				  ), 
				  loadConfig = 
				    if (loadConfigFirstMatch = null) then
				      "No"
				    else
				      Record.Field(loadConfigFirstMatch, "DataLoad"), 
				  serverName = Record.Field(
				    Table.First(Table.SelectRows(#"Connection parameters", each [Key] = "ServerName")), 
				    "Value"
				  ), 
				  databaseName = Record.Field(
				    Table.First(Table.SelectRows(#"Connection parameters", each [Key] = "DatabaseName")), 
				    "Value"
				  ), 
				  schemaName = Record.Field(
				    Table.First(Table.SelectRows(#"Connection parameters", each [Key] = "SchemaName")), 
				    "Value"
				  ), 
				  dbList = Sql.Databases(serverName), 
				  db     = dbList{[Name = databaseName]}[Data], 
				  table  = db{[Schema = schemaName, Item = "Object"]}[Data], 
				  emptyDataset = Table.FirstN(table, 0), 
				  datasetToUse = if (loadConfig = "Yes") then table else emptyDataset
				in
				  datasetToUse
				```

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

