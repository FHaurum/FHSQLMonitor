table Object
	lineageTag: 0967b613-1669-445a-b063-2ed7d2c8f212

	column Database
		dataType: string
		lineageTag: c790ac85-8ba8-430a-b04a-8648153fe5f1
		summarizeBy: none
		sourceColumn: Database

		annotation SummarizationSetBy = Automatic

	column Schema
		dataType: string
		lineageTag: cb5316fa-c2e4-455d-9cfa-ec4e8426f33f
		summarizeBy: none
		sourceColumn: Schema

		annotation SummarizationSetBy = Automatic

	column Object
		dataType: string
		lineageTag: b09c37dd-ee3c-4f3f-906f-69942d0a6eb5
		summarizeBy: none
		sourceColumn: Object

		annotation SummarizationSetBy = Automatic

	column ObjectKey
		dataType: int64
		isHidden
		formatString: 0
		lineageTag: fdf8ca11-f78d-47d3-aa23-45904a600564
		summarizeBy: none
		sourceColumn: ObjectKey

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column 'Database - Drill-through for Index details'
		dataType: string
		lineageTag: f1c227e3-055f-44c3-bd86-75a9e4597f31
		summarizeBy: none
		sourceColumn: Database - Drill-through for Index details

		annotation SummarizationSetBy = Automatic

	column 'Schema - Drill-through for Index details'
		dataType: string
		lineageTag: ed7c3728-dee6-431d-a6d3-e693d0783ea4
		summarizeBy: none
		sourceColumn: Schema - Drill-through for Index details

		annotation SummarizationSetBy = Automatic

	column 'Object - Drill-through for Index details'
		dataType: string
		lineageTag: 5fdc566a-19d5-4147-bab1-d53c60c8cfdf
		summarizeBy: none
		sourceColumn: Object - Drill-through for Index details

		annotation SummarizationSetBy = Automatic

	partition Object = m
		mode: import
		queryGroup: Dimensions
		source = ```
				let
				  loadConfigFirstMatch = Table.First(
				    Table.SelectRows(
				      #"Data load", 
				      each List.Contains({"Capacity", "Index usage", "Missing indexes", "Statistics"}, [Service])
				        and List.Contains({"Yes"}, [DataLoad])
				    )
				  ), 
				  loadConfig = 
				    if (loadConfigFirstMatch = null) then
				      "No"
				    else
				      Record.Field(loadConfigFirstMatch, "DataLoad"), 
				  dbList = Sql.Databases(#"Server name"), 
				  db     = dbList{[Name = #"Database name"]}[Data], 
				  table  = db{[Schema = #"Schema name", Item = "Object"]}[Data], 
				  emptyDataset = Table.FirstN(table, 0), 
				  datasetToUse = if (loadConfig = "Yes") then table else emptyDataset, 
				  addDuplicateColumns = Table.AddColumn(
				    datasetToUse,
				    "DuplicatedColumns", 
				    each [
				      Dup.Database = [Database], 
				      Dup.Schema = [Schema], 
				      Dup.Object = [Object]
				    ]
				  ),
				  expandDuplicateColumns = Table.ExpandRecordColumn(
				    addDuplicateColumns,
				    "DuplicatedColumns", 
				    {
				      "Dup.Database", 
				      "Dup.Schema", 
				      "Dup.Object"
				    }, 
				    {
				      "Database - Drill-through for Index details", 
				      "Schema - Drill-through for Index details", 
				      "Object - Drill-through for Index details"
				    }
				  )
				in
				  expandDuplicateColumns
				```

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

