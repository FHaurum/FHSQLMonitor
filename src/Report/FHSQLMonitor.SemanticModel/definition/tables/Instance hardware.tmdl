table 'Instance hardware'
	lineageTag: 152a4cdb-1bb4-4195-973c-94d8c19f0c01

	column Key
		dataType: string
		lineageTag: bbfe38bd-a3b0-4968-8a07-453019c5aa9d
		summarizeBy: none
		sourceColumn: Key

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column Value
		dataType: string
		lineageTag: 7729e83f-0331-4e45-bb6e-a8c584c3fda6
		summarizeBy: none
		sourceColumn: Value

		annotation SummarizationSetBy = Automatic

	column Timestamp
		dataType: dateTime
		formatString: dd-mmm-yyyy hh:nn:ss
		lineageTag: 716154bf-7a93-4faf-b992-709d48906b61
		summarizeBy: none
		sourceColumn: Timestamp

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isCustom":true}

	partition 'Instance hardware' = m
		mode: import
		queryGroup: Facts
		source = ```
				let
				  loadConfig = Record.Field(
				    Table.First(Table.SelectRows(#"Data load", each [Service] = "Instance configuration")), 
				    "DataLoad"
				  ), 
				  serverName = Record.Field(
				    Table.First(Table.SelectRows(#"Connection parameters", each [Key] = "ServerName")), 
				    "Value"
				  ), 
				  databaseName = Record.Field(
				    Table.First(Table.SelectRows(#"Connection parameters", each [Key] = "DatabaseName")), 
				    "Value"
				  ), 
				  schemaName = Record.Field(
				    Table.First(Table.SelectRows(#"Connection parameters", each [Key] = "SchemaName")), 
				    "Value"
				  ), 
				  dbList = Sql.Databases(serverName), 
				  db     = dbList{[Name = databaseName]}[Data], 
				  table  = db{[Schema = schemaName, Item = "Instance hardware"]}[Data], 
				  emptyDataset = Table.FirstN(table, 0), 
				  datasetToUse = if (loadConfig = "Yes") then table else emptyDataset
				in
				  datasetToUse
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

