table Server
	lineageTag: 48f3b945-54a6-4706-a797-36553e61c206

	column Server
		dataType: string
		lineageTag: 50ff0c33-c0af-477d-8ea9-f41238fac9f7
		summarizeBy: none
		sourceColumn: Server

		annotation SummarizationSetBy = Automatic

	column ServerKey
		dataType: int64
		isHidden
		formatString: 0
		lineageTag: 059ccb06-099e-4f9f-846f-a2309cdd4a76
		summarizeBy: none
		sourceColumn: ServerKey

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	partition Server = m
		mode: import
		queryGroup: Dimensions
		source = ```
				let
				  loadConfigFirstMatch = Table.First(
				    Table.SelectRows(
				      #"Data load", 
				      each List.Contains(
				        {"Log shipping"}, 
				        [Service]
				      )
				        and List.Contains({"Yes"}, [DataLoad])
				    )
				  ), 
				  loadConfig = 
				    if (loadConfigFirstMatch = null) then
				      "No"
				    else
				      Record.Field(loadConfigFirstMatch, "DataLoad"), 
				  dbList = Sql.Databases(#"Server name"), 
				  db     = dbList{[Name = #"Database name"]}[Data], 
				  table  = db{[Schema = #"Schema name", Item = "Server"]}[Data], 
				  emptyDataset = Table.FirstN(table, 0), 
				  datasetToUse = if (loadConfig = "Yes") then table else emptyDataset
				in
				  datasetToUse
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

