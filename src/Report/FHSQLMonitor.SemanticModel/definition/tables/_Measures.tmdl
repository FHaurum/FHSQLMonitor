table _Measures
	lineageTag: e13509a8-32ea-4355-9c93-883ee32b11bf

	measure 'Current size MB' =
			
			SUM ( 'Database size'[CurrentSize] )
		formatString: #,0
		isHidden
		displayFolder: Database size
		lineageTag: 81c8e082-475d-44d6-b30b-43af4278ff60

		changedProperty = IsHidden

	measure 'Data size MB - Database size' =
			
			CALCULATE ( [Current size MB], 'Database file'[Type] = "Data" )
		formatString: #,0
		displayFolder: Database size
		lineageTag: 9d2702c6-805f-4e62-97c4-fc890c9f6f98

	measure 'Log size MB - Database size' =
			
			CALCULATE ( [Current size MB], 'Database file'[Type] = "Log" )
		formatString: #,0
		displayFolder: Database size
		lineageTag: d868f121-bcb5-48b5-b3bf-071558f14611

	measure 'Data used MB - Database size' =
			
			CALCULATE ( [Used size MB], 'Database file'[Type] = "Data" )
		formatString: #,0
		displayFolder: Database size
		lineageTag: b2437ea3-d29c-48f8-ba3a-f9f102c09ad0

	measure 'Log used MB - Database size' =
			
			CALCULATE ( [Used size MB], 'Database file'[Type] = "Log" )
		formatString: #,0
		displayFolder: Database size
		lineageTag: 9f859abe-ff12-4b50-a1d2-083e50c50ee7

	measure 'Used size MB' =
			
			SUM ( 'Database size'[UsedSize] )
		formatString: #,0
		isHidden
		displayFolder: Database size
		lineageTag: 65e4c442-a062-4d43-8b74-b3e79d715a07

		changedProperty = IsHidden

	measure 'Info text' =
			
			"FHSQLMonitor ver. " & [Version number] & " @ haurumit.dk"
		displayFolder: Common
		lineageTag: 39cc1740-f253-44c6-8bf8-08d4ae413378

	measure 'Data range - Database size' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Database size'[Date] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Database size'[Date] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Database size
		lineageTag: 70e0ef5a-9f44-460d-b329-d2a981537400

	measure 'Info last refresh' =
			
			VAR _lastRefreshed = [Last refreshed]
			VAR _lastRefreshedTxt =
			    FORMAT ( _lastRefreshed, [Date-min format string] )
			VAR _text = "Last refreshed (UTC): " & _lastRefreshedTxt
			VAR _result = _text
			RETURN
			    _result
		displayFolder: Common
		lineageTag: 8781468b-bbd1-44a2-baff-f315909cd52a

	measure 'Info URL' =
			
			"https://haurumit.dk"
		displayFolder: Common
		lineageTag: 5ffef77e-9662-4772-8568-c79f295e8061

	measure 'Latest data size MB - Database size' =
			
			VAR _maxDate =
			    CALCULATE ( MAX ( 'Database size'[Date] ), REMOVEFILTERS ( 'Database file' ) )
			VAR _latestValue =
			    CALCULATE ( [Data size MB - Database size], 'Database size'[Date] = _maxDate )
			VAR _result = _latestValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Database size
		lineageTag: 7d1f8a0c-f98b-4273-be2b-5d2ad48a14dd

	measure 'Latest log size MB - Database size' =
			
			VAR _maxDate =
			    CALCULATE ( MAX ( 'Database size'[Date] ), REMOVEFILTERS ( 'Database file' ) )
			VAR _latestValue =
			    CALCULATE ( [Log size MB - Database size], 'Database size'[Date] = _maxDate )
			VAR _result = _latestValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Database size
		lineageTag: a5cd75d5-0a38-4790-9cab-6857a51d7525

	measure 'Latest data used MB - Database size' =
			
			VAR _maxDate =
			    CALCULATE ( MAX ( 'Database size'[Date] ), REMOVEFILTERS ( 'Database file' ) )
			VAR _latestValue =
			    CALCULATE ( [Data used MB - Database size], 'Database size'[Date] = _maxDate )
			VAR _result = _latestValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Database size
		lineageTag: 3fa26f3e-794e-4890-b780-4d6064608d9a

	measure 'Latest log used MB - Database size' =
			
			VAR _maxDate =
			    CALCULATE ( MAX ( 'Database size'[Date] ), REMOVEFILTERS ( 'Database file' ) )
			VAR _latestValue =
			    CALCULATE ( [Log used MB - Database size], 'Database size'[Date] = _maxDate )
			VAR _result = _latestValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Database size
		lineageTag: a9f48b34-98ba-407d-a8b8-bb24254ee79e

	measure 'Latest date - Database size' =
			
			VAR _maxDate =
			    MAX ( 'Database size'[Date] )
			VAR _result = _maxDate
			RETURN
			    _result
		formatString: General Date
		displayFolder: Database size
		lineageTag: ed34deb3-d3a8-4b9a-961f-d9bb01c3c5b5

	measure 'Details title - Database size' =
			
			VAR _latestDate = [Latest date - Database size]
			VAR _pastDate = [Past date - Database size]
			VAR _realDatesBackInTime =
			    DATEDIFF ( _pastDate, _latestDate, DAY )
			VAR _realDatesBackInTimeTxt =
			    FORMAT ( _realDatesBackInTime, "#,##0" )
			VAR _latestDateTxt =
			    FORMAT ( _latestDate, [Date format string] ) & " ("
			        & FORMAT ( _latestDate, [Dayname format string] ) & ")"
			VAR _pastDateTxt =
			    FORMAT ( _pastDate, [Date format string] ) & " ("
			        & FORMAT ( _pastDate, [Dayname format string] ) & ")"
			VAR _txt =
			    "Size per database"
			        & IF (
			            _latestDate <> BLANK (),
			            " for " & _latestDateTxt & " compared to " & _pastDateTxt & " " & _realDatesBackInTimeTxt & " days ago"
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Database size
		lineageTag: 322c3a66-c8e7-4757-9987-0d484d7bddd9

	measure 'Data size ratio of total - Database size' =
			
			VAR _size = [Latest data size MB - Database size]
			VAR _totalSize =
			    CALCULATE (
			        [Latest data size MB - Database size],
			        REMOVEFILTERS ( 'Database file'[Database], 'Database file'[Logical file] )
			    )
			VAR _ratio =
			    DIVIDE ( _size, _totalSize )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Database size
		lineageTag: 09e03c63-56af-440e-8280-587df0cbeb82

	measure 'Data used ratio of size - Database size' =
			
			VAR _used = [Latest data used MB - Database size]
			VAR _size = [Latest data size MB - Database size]
			VAR _ratio =
			    DIVIDE ( _used, _size )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Database size
		lineageTag: 25367a7f-7182-4bf0-bd4a-9c1778fef2a2

	measure 'Log size ratio of total - Database size' =
			
			VAR _size = [Latest log size MB - Database size]
			VAR _totalSize =
			    CALCULATE (
			        [Latest log size MB - Database size],
			        REMOVEFILTERS ( 'Database file'[Database], 'Database file'[Logical file] )
			    )
			VAR _ratio =
			    DIVIDE ( _size, _totalSize )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Database size
		lineageTag: c5c93ca1-5898-4de8-b68a-33ad6a61c62d

	measure 'Log used ratio of size - Database size' =
			
			VAR _used = [Latest log used MB - Database size]
			VAR _size = [Latest log size MB - Database size]
			VAR _ratio =
			    DIVIDE ( _used, _size )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Database size
		lineageTag: 4d53cea9-52ef-42cd-bfba-ef92ac4002b3

	measure 'Data size ratio since past - Database size' =
			
			VAR _currentValue = [Latest data size MB - Database size]
			VAR _pastValue = [Past data size MB - Database size]
			VAR _ratio =
			    IF (
			        _pastValue = BLANK ()
			            || _currentValue = BLANK (),
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Database size
		lineageTag: 0d4ba135-5386-4061-ae62-1bcdfb513352

	measure 'Past data size MB - Database size' =
			
			VAR _pastDate = [Past date - Database size]
			VAR _pastValue =
			    CALCULATE (
			        [Data size MB - Database size],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Database size'[Date] = _pastDate
			    )
			VAR _result = _pastValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Database size
		lineageTag: 1c56bce3-32b8-44fd-867c-2cf0a83d9083

	measure 'Past data used MB - Database size' =
			
			VAR _pastDate = [Past date - Database size]
			VAR _pastValue =
			    CALCULATE (
			        [Data used MB - Database size],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Database size'[Date] = _pastDate
			    )
			VAR _result = _pastValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Database size
		lineageTag: e485ae78-902a-4d80-a2f7-da1e01f76fc6

	measure 'Data used ratio since past - Database size' =
			
			VAR _currentValue = [Latest data used MB - Database size]
			VAR _pastValue = [Past data used MB - Database size]
			VAR _ratio =
			    IF (
			        _pastValue = 0
			            || _currentValue = 0,
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Database size
		lineageTag: 4f59e8b0-9155-492f-890a-8c47116721cc

	measure 'Log size ratio since past - Database size' =
			
			VAR _currentValue = [Latest log size MB - Database size]
			VAR _pastValue = [Past log size MB - Database size]
			VAR _ratio =
			    IF (
			        _pastValue = BLANK ()
			            || _currentValue = BLANK (),
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Database size
		lineageTag: 16782d96-fd92-4ad8-909e-865a02dde1b9

	measure 'Past log size MB - Database size' =
			
			VAR _pastDate = [Past date - Database size]
			VAR _pastValue =
			    CALCULATE (
			        [Log size MB - Database size],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Database size'[Date] = _pastDate
			    )
			VAR _result = _pastValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Database size
		lineageTag: fc527c29-daff-48e5-9728-90c018d3d8e3

	measure 'Log used ratio since past - Database size' =
			
			VAR _currentValue = [Latest log used MB - Database size]
			VAR _pastValue = [Past log used MB - Database size]
			VAR _ratio =
			    IF (
			        _pastValue = 0
			            || _currentValue = 0,
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Database size
		lineageTag: eee4317b-938d-4a11-8895-3992cc6eae15

	measure 'Past log used MB - Database size' =
			
			VAR _pastDate = [Past date - Database size]
			VAR _pastValue =
			    CALCULATE (
			        [Log used MB - Database size],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Database size'[Date] = _pastDate
			    )
			VAR _result = _pastValue
			RETURN
			    _result
		formatString: 0
		displayFolder: Database size
		lineageTag: dcedaa17-2665-42c5-a211-6e47f74a169a

	measure 'Past date - Database size' =
			
			VAR _daysBackInTime =
			    SELECTEDVALUE ( Tally1[Value] )
			VAR _latestDate = [Latest date - Database size]
			VAR _compareDate = _latestDate - _daysBackInTime
			VAR _compareDateWithDataFoundBelow =
			    CALCULATE (
			        MAX ( 'Database size'[Date] ),
			        REMOVEFILTERS ( 'Date'[Date] ),
			        REMOVEFILTERS ( 'Database file' ),
			        'Database size'[Date] <= _compareDate
			    )
			VAR _compareDateWithDataFoundOver =
			    CALCULATE (
			        MIN ( 'Database size'[Date] ),
			        REMOVEFILTERS ( 'Date'[Date] ),
			        REMOVEFILTERS ( 'Database file' ),
			        'Database size'[Date] > _compareDate
			    )
			VAR _compareDateWithData =
			    IF (
			        _compareDateWithDataFoundBelow = BLANK (),
			        _compareDateWithDataFoundOver,
			        _compareDateWithDataFoundBelow
			    )
			VAR _result = _compareDateWithData
			RETURN
			    _result
		formatString: General Date
		displayFolder: Database size
		lineageTag: c0031960-f359-4810-ae5a-0f0724097cbe

	measure 'Open filter button tooltip - Database size' =
			
			IF (
			    [Is filters applied - Database size] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Database size
		lineageTag: 0d099bd5-10cd-4e9e-9bca-65ec6f1c3266

	measure 'Show filters Headers - Database size' =
			
			IF (
			    ISFILTERED ( 'Database file'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Database file'[Database] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        "Year:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
		displayFolder: Database size
		lineageTag: a5e1f6e1-58c8-4d0d-ab3a-6be894f25dbc

	measure 'Show filters - Database size' =
			
			IF (
			    ISFILTERED ( 'Database file'[Database] ),
			    VAR _items =
			        VALUES ( 'Database file'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Database file'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        VAR _items =
			            VALUES ( 'Date'[Year] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Database size
		lineageTag: 72e94344-93c4-4881-b7c0-cad9855a02f3

	measure 'Data range - Table size' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Table size'[Date] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Table size'[Date] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Table size
		lineageTag: c65ec068-a262-4ee4-b1cc-3baf7677e2f2

	measure 'Rows # - Table size' = ```
			
			CALCULATE (
			    SUM ( 'Table size'[Rows] ),
			    'Index configuration'[IndexTypeDesc] IN { "CL", "HEAP" },
			    USERELATIONSHIP ( 'Index configuration'[IndexKey], 'Table size'[IndexKey] )
			)
			
			```
		formatString: #,0
		displayFolder: Table size
		lineageTag: 99648901-4e44-4756-88c8-8f0ae10012fa

	measure 'Data KB - Table size' =
			
			SUM ( 'Table size'[Data] )
		formatString: #,0
		displayFolder: Table size
		lineageTag: f2322de4-1166-4fc5-b531-fae9aa5f6234

	measure 'Index KB - Table size' =
			
			SUM ( 'Table size'[IndexSize] )
		formatString: #,0
		displayFolder: Table size
		lineageTag: cdd6030d-5616-4e8a-893b-cf3df6efaf33

	measure 'Reserved KB - Table size' =
			
			SUM ( 'Table size'[Reserved] )
		formatString: #,0
		displayFolder: Table size
		lineageTag: 7d8b5162-831e-446b-83fb-27e56c655903

	measure 'Unused KB - Table size' =
			
			SUM ( 'Table size'[Unused] )
		formatString: #,0
		displayFolder: Table size
		lineageTag: 5512c121-fd8e-457a-91b2-76ff6ffab410

	measure 'Latest date - Table size' =
			
			VAR _maxDate =
			    MAX ( 'Table size'[Date] )
			VAR _result = _maxDate
			RETURN
			    _result
		formatString: General Date
		displayFolder: Table size
		lineageTag: a0e8c7d8-13fd-46cc-bd32-bf5e1a191d5a

	measure 'Past date - Table size' =
			
			VAR _daysBackInTime =
			    SELECTEDVALUE ( Tally1[Value] )
			VAR _latestDate = [Latest date - Table size]
			VAR _compareDate = _latestDate - _daysBackInTime
			VAR _compareDateWithDataFoundBelow =
			    CALCULATE (
			        MAX ( 'Table size'[Date] ),
			        REMOVEFILTERS ( 'Date'[Date] ),
			        REMOVEFILTERS ( 'Object' ),
			        'Table size'[Date] <= _compareDate
			    )
			VAR _compareDateWithDataFoundOver =
			    CALCULATE (
			        MIN ( 'Table size'[Date] ),
			        REMOVEFILTERS ( 'Date'[Date] ),
			        REMOVEFILTERS ( 'Object' ),
			        'Table size'[Date] > _compareDate
			    )
			VAR _compareDateWithData =
			    IF (
			        _compareDateWithDataFoundBelow = BLANK (),
			        _compareDateWithDataFoundOver,
			        _compareDateWithDataFoundBelow
			    )
			VAR _result = _compareDateWithData
			RETURN
			    _result
		formatString: General Date
		displayFolder: Table size
		lineageTag: 1a2fe965-ae82-44f6-ae45-030600b6758e

	measure 'Details title - Table size' =
			
			VAR _latestDate = [Latest date - Table size]
			VAR _pastDate = [Past date - Table size]
			VAR _realDatesBackInTime =
			    DATEDIFF ( _pastDate, _latestDate, DAY )
			VAR _realDatesBackInTimeTxt =
			    FORMAT ( _realDatesBackInTime, "#,##0" )
			VAR _latestDateTxt =
			    FORMAT ( _latestDate, [Date format string] ) & " ("
			        & FORMAT ( _latestDate, [Dayname format string] ) & ")"
			VAR _pastDateTxt =
			    FORMAT ( _pastDate, [Date format string] ) & " ("
			        & FORMAT ( _pastDate, [Dayname format string] ) & ")"
			VAR _txt =
			    "Table size per database"
			        & IF (
			            _latestDate <> BLANK (),
			            " for " & _latestDateTxt & " compared to " & _pastDateTxt & " " & _realDatesBackInTimeTxt & " days ago"
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Table size
		lineageTag: fa8251b0-e8ce-4932-9e57-5fad4c7e6e67

	measure 'Latest rows # - Table size' =
			
			VAR _maxDate =
			    CALCULATE ( MAX ( 'Table size'[Date] ), REMOVEFILTERS ( 'Object' ) )
			VAR _latestValue =
			    CALCULATE ( [Rows # - Table size], 'Table size'[Date] = _maxDate )
			VAR _result = _latestValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Table size
		lineageTag: 9f66c7cc-2c0f-4a7d-8d2a-31c6a2ad769f

	measure 'Latest reserved KB - Table size' =
			
			VAR _maxDate =
			    CALCULATE ( MAX ( 'Table size'[Date] ), REMOVEFILTERS ( 'Object' ) )
			VAR _latestValue =
			    CALCULATE ( [Reserved KB - Table size], 'Table size'[Date] = _maxDate )
			VAR _result = _latestValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Table size
		lineageTag: 3d223793-8499-4786-bf6a-85e33cb3b57b

	measure 'Latest data KB - Table size' =
			
			VAR _maxDate =
			    CALCULATE ( MAX ( 'Table size'[Date] ), REMOVEFILTERS ( 'Object' ) )
			VAR _latestValue =
			    CALCULATE ( [Data KB - Table size], 'Table size'[Date] = _maxDate )
			VAR _result = _latestValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Table size
		lineageTag: 3d2b809b-78bb-439a-9fec-fe97187cdff5

	measure 'Latest index KB - Table size' =
			
			VAR _maxDate =
			    CALCULATE ( MAX ( 'Table size'[Date] ), REMOVEFILTERS ( 'Object' ) )
			VAR _latestValue =
			    CALCULATE ( [Index KB - Table size], 'Table size'[Date] = _maxDate )
			VAR _result = _latestValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Table size
		lineageTag: cada8e7d-f692-4332-a064-f6e634cae7ed

	measure 'Latest unused KB - Table size' =
			
			VAR _maxDate =
			    CALCULATE ( MAX ( 'Table size'[Date] ), REMOVEFILTERS ( 'Object' ) )
			VAR _latestValue =
			    CALCULATE ( [Unused KB - Table size], 'Table size'[Date] = _maxDate )
			VAR _result = _latestValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Table size
		lineageTag: d08bf379-abb9-4bec-9256-56e1b3e6e3ba

	measure 'Used ratio of total reserved - Total size' =
			
			VAR _data = [Latest data KB - Table size]
			VAR _index = [Latest index KB - Table size]
			VAR _totalReserved =
			    CALCULATE ( [Latest reserved KB - Table size], REMOVEFILTERS ( 'Object' ) )
			VAR _ratio =
			    DIVIDE ( _data + _index, _totalReserved )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Table size
		lineageTag: a8871aa7-0f58-4b2c-a3ad-a603657b77cc

	measure 'Data ratio of reserved - Table size' =
			
			VAR _data = [Latest data KB - Table size]
			VAR _reserved = [Latest reserved KB - Table size]
			VAR _ratio =
			    DIVIDE ( _data, _reserved )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Table size
		lineageTag: 923b71dc-93be-4a25-8624-736b2fb72ee1

	measure 'Index ratio of data - Table size' =
			
			VAR _data = [Latest data KB - Table size]
			VAR _Index = [Latest index KB - Table size]
			VAR _ratio =
			    DIVIDE ( _index, _data )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Table size
		lineageTag: 3432139c-a04a-4340-9f0a-3e328bbbf4cd

	measure 'Past reserved KB - Table size' =
			
			VAR _pastDate = [Past date - Table size]
			VAR _pastValue =
			    CALCULATE (
			        [Reserved KB - Table size],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Table size'[Date] = _pastDate
			    )
			VAR _result = _pastValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Table size
		lineageTag: d172b1e1-9b09-4886-8ad1-39118b075782

	measure 'Reserved ratio since past - Table size' =
			
			VAR _currentValue = [Latest reserved KB - Table size]
			VAR _pastValue = [Past reserved KB - Table size]
			VAR _ratio =
			    IF (
			        _pastValue = BLANK ()
			            || _currentValue = BLANK (),
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Table size
		lineageTag: 6603b54c-9408-4eb9-b469-fb0f71358bc5

	measure 'Past data KB - Table size' =
			
			VAR _pastDate = [Past date - Table size]
			VAR _pastValue =
			    CALCULATE (
			        [Data KB - Table size],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Table size'[Date] = _pastDate
			    )
			VAR _result = _pastValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Table size
		lineageTag: 319a8abf-edaa-4241-9782-13fc51681119

	measure 'Past index KB - Table size' =
			
			VAR _pastDate = [Past date - Table size]
			VAR _pastValue =
			    CALCULATE (
			        [Index KB - Table size],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Table size'[Date] = _pastDate
			    )
			VAR _result = _pastValue
			RETURN
			    _result
		formatString: 0
		displayFolder: Table size
		lineageTag: bdb7418d-95a1-40a7-8a6f-e795f6cdb40c

	measure 'Data ratio since past - Table size' =
			
			VAR _currentValue = [Latest data KB - Table size]
			VAR _pastValue = [Past data KB - Table size]
			VAR _ratio =
			    IF (
			        _pastValue = BLANK ()
			            || _currentValue = BLANK (),
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Table size
		lineageTag: 3dcd00f1-add2-4dee-9745-50d5c58fda40

	measure 'Index ratio since past - Table size' =
			
			VAR _currentValue = [Latest index KB - Table size]
			VAR _pastValue = [Past index KB - Table size]
			VAR _ratio =
			    IF (
			        _pastValue = BLANK ()
			            || _currentValue = BLANK (),
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Table size
		lineageTag: 7d3705ef-64c5-4dce-93a5-93d673c2c94e

	measure 'Show filters Headers - Table size' =
			
			IF (
			    ISFILTERED ( 'Object'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Object'[Database] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Object'[Schema] ),
			        "Schema:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Object'[Schema] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Object'[Object] ),
			        "Object:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Object'[Object] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        "Year:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
		displayFolder: Table size
		lineageTag: 398e5835-a74c-42cb-b967-79afa5ad1dd5

	measure 'Show filters - Table size' =
			
			IF (
			    ISFILTERED ( 'Object'[Database] ),
			    VAR _items =
			        VALUES ( 'Object'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Object'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Object'[Schema] ),
			        VAR _items =
			            VALUES ( 'Object'[Schema] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Object'[Schema], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Object'[Object] ),
			        VAR _items =
			            VALUES ( 'Object'[Object] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Object'[Object], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        VAR _items =
			            VALUES ( 'Date'[Year] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Table size
		lineageTag: 544d33d0-d6fb-40dc-a274-e47be99bf182

	measure 'Open filter button tooltip - Table size' =
			
			IF (
			    [Is filters applied - Table size] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Table size
		lineageTag: d1336b8f-be57-4fb6-b505-2da821e4534d

	measure 'Is filters applied - Database size' =
			
			IF (
			    ISFILTERED ( 'Database file'[Database] ) || ISFILTERED ( 'Date'[Year] )
			        || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Database size
		lineageTag: 0f5db300-88b0-4e4d-8587-e3d47294c6d2

	measure 'Is filters applied - Table size' =
			
			IF (
			    ISFILTERED ( 'Object'[Database] ) || ISFILTERED ( 'Object'[Schema] )
			        || ISFILTERED ( 'Object'[Object] )
			        || ISFILTERED ( 'Date'[Year] )
			        || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Table size
		lineageTag: 852caeed-d47a-4780-87ea-bc55417c7236

	measure 'Past rows # - Table size' =
			
			VAR _pastDate = [Past date - Table size]
			VAR _pastValue =
			    CALCULATE (
			        [Rows # - Table size],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Table size'[Date] = _pastDate
			    )
			VAR _result = _pastValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Table size
		lineageTag: fd2e8686-ee43-4efe-b36a-5c14d4887084

	measure 'Rows # ratio since past - Table size' =
			
			VAR _currentValue = [Latest rows # - Table size]
			VAR _pastValue = [Past rows # - Table size]
			VAR _ratio =
			    IF (
			        _pastValue = BLANK ()
			            || _currentValue = BLANK (),
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Table size
		lineageTag: d9dedd71-a6b5-4958-9dbf-3c8517c63228

	measure 'Front page last refresh' =
			
			VAR _lastData =
			    MAX ( 'Log'[Timestamp] )
			VAR _lastDataTxt =
			    FORMAT ( _lastData, [Date-min format string] )
			VAR _lastRefreshed = [Last refreshed]
			VAR _lastRefreshedTxt =
			    FORMAT ( _lastRefreshed, [Date-min format string] )
			VAR _text =
			    "Last data (local): " & _lastDataTxt
			        & UNICHAR ( 10 ) & "Last refreshed (UTC): " & _lastRefreshedTxt
			VAR _result = _text
			RETURN
			    _result
		displayFolder: Common
		lineageTag: 38240036-921d-4db2-9d03-c9877557f5a0

	measure 'Front page parameters text' =
			
			VAR _serverName =
			    MAX ( 'Server name'[Server name] )
			VAR _databaseName =
			    MAX ( 'Database name'[Database name] )
			VAR _schemaName =
			    MAX ( 'Schema name'[Schema name] )
			VAR _text =
			    "Server: " & _serverName
			        & UNICHAR ( 10 ) & "Database: " & _databaseName
			        & UNICHAR ( 10 ) & "Schema: " & _schemaName
			VAR _result = _text
			RETURN
			    _result
		displayFolder: Common
		lineageTag: 0233978e-6713-4987-a2a8-ed9b34aa32ee

	measure 'Front page version text' =
			
			[Info text] & UNICHAR ( 10 ) & " "
			    & UNICHAR ( 10 ) & "Developed using Power BI Desktop version: 2.143.878.0 64-bit (May 2025)"
		displayFolder: Common
		lineageTag: e74236c7-2bcf-4409-b8d2-ddb49a83e10b

	measure 'Data range - Connections' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Connections'[Date] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Connections'[Date] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Connections
		lineageTag: 4ba786fe-a05b-4abe-9f4b-9863637c2394

	measure 'Connection count - Connections' =
			
			SUM ( Connections[ConnectionCount] )
		formatString: #,0
		isHidden
		displayFolder: Connections
		lineageTag: 4495099b-1ebb-4e61-b964-b1499b316a0c

		changedProperty = IsHidden

	measure 'Max sessions - Connections' =
			
			VAR _timekeys =
			    VALUES ( Connections[TimeKey] )
			VAR _value =
			    MAXX ( _timekeys, [Connection count - Connections] )
			VAR _result = _value
			RETURN
			    _result
		formatString: #,0
		displayFolder: Connections
		lineageTag: 03c7ff2c-fe7d-4059-acf3-169db29e330c

	measure 'Min sessions - Connections' =
			
			VAR _timekeys =
			    VALUES ( Connections[TimeKey] )
			VAR _value =
			    MINX ( _timekeys, [Connection count - Connections] )
			VAR _result = _value
			RETURN
			    _result
		formatString: #,0
		displayFolder: Connections
		lineageTag: 27c408f2-2357-45d0-962d-6e6b112600bf

	measure 'Avg sessions - Connections' =
			
			VAR _timekeys =
			    VALUES ( Connections[TimeKey] )
			VAR _value =
			    AVERAGEX ( _timekeys, [Connection count - Connections] )
			VAR _result = _value
			RETURN
			    _result
		formatString: #,0
		displayFolder: Connections
		lineageTag: a2a787d4-be78-49bd-ac09-e0afb59f4a9e

	measure 'Latest user sessions - Connections' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Connections],
			        REMOVEFILTERS ( 'Connection info' )
			    )
			VAR _timekeys =
			    CALCULATETABLE ( VALUES ( Connections[TimeKey] ), Connections[Date] = _date )
			VAR _value =
			    CALCULATE (
			        SUMX ( _timekeys, [Connection count - Connections] ),
			        'Connections'[Date] = _date
			            && Connections[IsUserProcess] = TRUE ()
			    )
			VAR _result = _value
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Connections
		lineageTag: 1f949099-81fc-42f4-9c41-f00e60aeaa53

	measure 'Latest system sessions - Connections' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Connections],
			        REMOVEFILTERS ( 'Connection info' )
			    )
			VAR _timekeys =
			    CALCULATETABLE ( VALUES ( Connections[TimeKey] ), Connections[Date] = _date )
			VAR _value =
			    CALCULATE (
			        SUMX ( _timekeys, [Connection count - Connections] ),
			        'Connections'[Date] = _date
			            && Connections[IsUserProcess] = FALSE ()
			    )
			VAR _result = _value
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Connections
		lineageTag: 5c31e00e-596d-4bdd-a4ef-6cb0e313b107

	measure 'Latest date - Connections' =
			
			VAR _minDate =
			    CALCULATE ( MIN ( 'Connections'[Date] ) )
			VAR _nextMinDate =
			    CALCULATE (
			        MIN ( 'Connections'[Date] ),
			        ALL ( Connections ),
			        'Connections'[Date] > _minDate
			    )
			VAR _maxDate =
			    CALCULATE ( MAX ( 'Connections'[Date] ) )
			VAR _prevMaxDate =
			    CALCULATE (
			        MAX ( 'Connections'[Date] ),
			        ALL ( Connections ),
			        'Connections'[Date] < _maxDate
			    )
			VAR _minSelectedDate =
			    IF (
			        ISFILTERED ( 'Connections - date boundaries'[Date] ),
			        MINX (
			            ALLSELECTED ( 'Connections - date boundaries'[Date] ),
			            'Connections - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _maxSelectedDate =
			    IF (
			        ISFILTERED ( 'Connections - date boundaries'[Date] ),
			        MAXX (
			            ALLSELECTED ( 'Connections - date boundaries'[Date] ),
			            'Connections - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _minBoundaryDate =
			    CALCULATE (
			        MIN ( 'Connections - date boundaries'[Date] ),
			        ALL ( 'Connections - date boundaries'[Date] )
			    )
			VAR _maxBoundaryDate =
			    CALCULATE (
			        MAX ( 'Connections - date boundaries'[Date] ),
			        ALL ( 'Connections - date boundaries'[Date] )
			    )
			VAR _minDateToUse =
			    IF (
			        _minBoundaryDate < _minDate,
			        _minDate,
			        IF ( _minBoundaryDate = _minSelectedDate, _minDate, _nextMinDate )
			    )
			VAR _maxDateToUse =
			    IF (
			        _maxBoundaryDate > _maxDate,
			        _maxDate,
			        IF ( _maxBoundaryDate = _maxSelectedDate, _maxDate, _prevMaxDate )
			    )
			VAR _dateToUse =
			    IF ( _maxDateToUse < _minDateToUse, BLANK (), _maxDateToUse )
			VAR _result = _dateToUse
			RETURN
			    _result
		formatString: General Date
		displayFolder: Connections
		lineageTag: a50aa812-265b-40be-a73b-62d421e6a6b7

	measure 'Past date - Connections' =
			
			VAR _daysBackInTime =
			    SELECTEDVALUE ( Tally1[Value] )
			VAR _latestDate = [Latest date - Connections]
			VAR _minSelectedDate =
			    IF (
			        ISFILTERED ( 'Connections - date boundaries'[Date] ),
			        MINX (
			            ALLSELECTED ( 'Connections - date boundaries'[Date] ),
			            'Connections - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _minBoundaryDate =
			    CALCULATE (
			        MIN ( 'Connections - date boundaries'[Date] ),
			        ALL ( 'Connections - date boundaries'[Date] )
			    )
			VAR _minDateToUse =
			    IF (
			        _minBoundaryDate = _minSelectedDate,
			        _minBoundaryDate,
			        _minBoundaryDate + 1
			    )
			VAR _compareDate = _latestDate - _daysBackInTime
			VAR _compareDateWithDataFound =
			    CALCULATE (
			        MIN ( 'Connections'[Date] ),
			        REMOVEFILTERS ( 'Date'[Date] ),
			        REMOVEFILTERS ( 'Connection info' ),
			        'Connections'[Date] >= _compareDate
			            && 'Connections'[Date] >= _minDateToUse
			    )
			VAR _compareDateChecked =
			    IF (
			        _compareDateWithDataFound > _latestDate,
			        _latestDate,
			        _compareDateWithDataFound
			    )
			VAR _result = _compareDateChecked
			RETURN
			    _result
		formatString: General Date
		displayFolder: Connections
		lineageTag: bd483884-02a5-4af8-a4d8-035318d7e850

	measure 'Details title - Connections' =
			
			VAR _latestDate = [Latest date - Connections]
			VAR _pastDate = [Past date - Connections]
			VAR _realDatesBackInTime =
			    DATEDIFF ( _pastDate, _latestDate, DAY )
			VAR _realDatesBackInTimeTxt =
			    FORMAT ( _realDatesBackInTime, "#,##0" )
			VAR _latestDateTxt =
			    FORMAT ( _latestDate, [Date format string] ) & " ("
			        & FORMAT ( _latestDate, [Dayname format string] ) & ")"
			VAR _pastDateTxt =
			    FORMAT ( _pastDate, [Date format string] ) & " ("
			        & FORMAT ( _pastDate, [Dayname format string] ) & ")"
			VAR _txt =
			    "Connection data per database"
			        & IF (
			            _latestDate <> BLANK (),
			            " for " & _latestDateTxt & " compared to " & _pastDateTxt & " " & _realDatesBackInTimeTxt & " days ago"
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Connections
		lineageTag: 4e62eb77-b49d-440a-b745-c3ecb4e59a09

	measure 'User sessions ratio of total - Connections' =
			
			VAR _size = [Latest user sessions - Connections]
			VAR _totalSize =
			    CALCULATE (
			        [Latest user sessions - Connections] + [Latest system sessions - Connections],
			        REMOVEFILTERS ( 'Connection info' )
			    )
			VAR _ratio =
			    DIVIDE ( _size, _totalSize )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Connections
		lineageTag: fe303c40-47ff-466d-84cc-42caafac3abd

	measure 'System sessions ratio of total - Connections' =
			
			VAR _size = [Latest system sessions - Connections]
			VAR _totalSize =
			    CALCULATE (
			        [Latest user sessions - Connections] + [Latest system sessions - Connections],
			        REMOVEFILTERS ( 'Connection info' )
			    )
			VAR _ratio =
			    DIVIDE ( _size, _totalSize )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Connections
		lineageTag: 9d5ebfea-025d-4de2-9f04-3694f0242927

	measure 'Avg user sessions latest day - Connections' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Connections],
			        REMOVEFILTERS ( 'Connection info' )
			    )
			VAR _timekeys =
			    CALCULATETABLE ( VALUES ( Connections[TimeKey] ), Connections[Date] = _date )
			VAR _value =
			    CALCULATE (
			        AVERAGEX ( _timekeys, [Connection count - Connections] ),
			        'Connections'[Date] = _date
			            && Connections[IsUserProcess] = TRUE ()
			    )
			VAR _result = _value
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Connections
		lineageTag: 15648cc0-a8f4-4f0c-9c77-7c056d325afd

	measure 'Past avg user sessions - Connections' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Past date - Connections],
			        REMOVEFILTERS ( 'Connection info' )
			    )
			VAR _timekeys =
			    CALCULATETABLE ( VALUES ( Connections[TimeKey] ), Connections[Date] = _date )
			VAR _value =
			    CALCULATE (
			        AVERAGEX ( _timekeys, [Connection count - Connections] ),
			        'Connections'[Date] = _date
			            && Connections[IsUserProcess] = TRUE ()
			    )
			VAR _result = _value
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Connections
		lineageTag: 8e5c9c7b-46b0-4718-8bab-eda7b5bfdc21

	measure 'Avg user sessions ratio since past - Connections' =
			
			VAR _currentValue = [Avg user sessions latest day - Connections]
			VAR _pastValue = [Past avg user sessions - Connections]
			VAR _ratio =
			    IF (
			        _pastValue = BLANK ()
			            || _currentValue = BLANK (),
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Connections
		lineageTag: 28970756-6d60-42bc-b1d9-f7adca0e5850

	measure 'Avg system sessions latest day - Connections' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Connections],
			        REMOVEFILTERS ( 'Connection info' )
			    )
			VAR _timekeys =
			    CALCULATETABLE ( VALUES ( Connections[TimeKey] ), Connections[Date] = _date )
			VAR _value =
			    CALCULATE (
			        AVERAGEX ( _timekeys, [Connection count - Connections] ),
			        'Connections'[Date] = _date
			            && Connections[IsUserProcess] = FALSE ()
			    )
			VAR _result = _value
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Connections
		lineageTag: 5af88e66-f9fd-4150-9371-afcb1de3add2

	measure 'Past avg system sessions - Connections' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Past date - Connections],
			        REMOVEFILTERS ( 'Connection info' )
			    )
			VAR _timekeys =
			    CALCULATETABLE ( VALUES ( Connections[TimeKey] ), Connections[Date] = _date )
			VAR _value =
			    CALCULATE (
			        AVERAGEX ( _timekeys, [Connection count - Connections] ),
			        'Connections'[Date] = _date
			            && Connections[IsUserProcess] = FALSE ()
			    )
			VAR _result = _value
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Connections
		lineageTag: 3daf2c5e-71dd-4acb-81ec-0b0ec5948e36

	measure 'Avg system sessions ratio since past - Connections' =
			
			VAR _currentValue = [Avg system sessions latest day - Connections]
			VAR _pastValue = [Past avg system sessions - Connections]
			VAR _ratio =
			    IF (
			        _pastValue = BLANK ()
			            || _currentValue = BLANK (),
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Connections
		lineageTag: 7210d17b-dee0-4635-9d85-7785ba1ae14c

	measure 'Is filters applied - Connections' =
			
			IF (
			    ISFILTERED ( 'Connection info'[Database] )
			        || ISFILTERED ( 'Connection info'[Host] )
			        || ISFILTERED ( 'Connection info'[Program] )
			        || ISFILTERED ( 'Date'[Year] )
			        || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] )
			        || ISFILTERED ( 'Time'[Hour] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Connections
		lineageTag: 5d0b9a89-a8ab-4261-a3b1-577300691726

	measure 'Open filter button tooltip - Connections' =
			
			IF (
			    [Is filters applied - Connections] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Connections
		lineageTag: bbe802ba-e847-4dda-b8bc-42bf983903fa

	measure 'Show filters Headers - Connections' =
			
			IF (
			    ISFILTERED ( 'Connection info'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Connection info'[Database] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Connection info'[Program] ),
			        "Program:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Connection info'[Program] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Connection info'[Host] ),
			        "Host:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Connection info'[Host] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        "Year:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Time'[Hour] ),
			        "Hour:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Time'[Hour] ) ) )
			    )
		displayFolder: Connections
		lineageTag: 361536ac-1bcd-49aa-92db-373463d2b795

	measure 'Show filters - Connections' =
			
			IF (
			    ISFILTERED ( 'Connection info'[Database] ),
			    VAR _items =
			        VALUES ( 'Connection info'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Connection info'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Connection info'[Program] ),
			        VAR _items =
			            VALUES ( 'Connection info'[Program] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Connection info'[Program], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Connection info'[Host] ),
			        VAR _items =
			            VALUES ( 'Connection info'[Host] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Connection info'[Host], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        VAR _items =
			            VALUES ( 'Date'[Year] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Time'[Hour] ),
			        VAR _items =
			            VALUES ( 'Time'[Hour] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Time'[Hour], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Connections
		lineageTag: c8f71f39-7750-4808-aa1c-dd434c033efb

	measure 'Latest sessions - Connections' =
			
			VAR _date =
			    CALCULATE ( MAX ( 'Connections'[Date] ), REMOVEFILTERS ( 'Connection info' ) )
			VAR _maxTimeKey =
			    CALCULATE (
			        MAX ( 'Connections'[TimeKey] ),
			        REMOVEFILTERS ( 'Connection info' ),
			        Connections[Date] = _date
			    )
			VAR _latestValue =
			    CALCULATE (
			        SUM ( Connections[ConnectionCount] ),
			        'Connections'[Date] = _date
			            && Connections[TimeKey] = _maxTimeKey
			    )
			VAR _result = _latestValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Connections
		lineageTag: 4c3acad0-339e-4e47-89e2-fd83bae72965

	measure 'Filters are applied text' =
			
			"Filters are applied!!!"
		isHidden
		displayFolder: Common
		lineageTag: 4f7941c8-b5ff-45fc-8340-60f02a7f6ac1

		changedProperty = IsHidden

	measure 'Filters are not applied' =
			
			"No filters are applied"
		isHidden
		displayFolder: Common
		lineageTag: e046c6e3-6287-4349-beb3-9f4f5967ff64

		changedProperty = IsHidden

	measure 'Data range - CPU' =
			
			VAR _minDataDate =
			    MIN (
			        CALCULATE ( MIN ( 'CPU per database'[Date] ), ALL () ),
			        CALCULATE ( MIN ( 'CPU utilization'[Date] ), ALL () )
			    )
			VAR _maxDataDate =
			    MAX (
			        CALCULATE ( MAX ( 'CPU per database'[Date] ), ALL () ),
			        CALCULATE ( MAX ( 'CPU utilization'[Date] ), ALL () )
			    )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: CPU
		lineageTag: 9d5b0395-623c-4898-b2c9-3ec87eefb779

	measure 'Max SQL - CPU' =
			
			VAR _timekeys =
			    VALUES ( 'CPU utilization'[TimeKey] )
			VAR _value =
			    MAXX (
			        _timekeys,
			        CALCULATE ( MAX ( 'CPU utilization'[SQLProcessUtilization] ) )
			    )
			VAR _result = _value
			RETURN
			    _result
		formatString: 0
		displayFolder: CPU
		lineageTag: 549d15a2-ba68-4e6f-ac62-51df23042f29

	measure 'Avg SQL - CPU' =
			
			VAR _timekeys =
			    VALUES ( 'CPU utilization'[TimeKey] )
			VAR _value =
			    AVERAGEX (
			        _timekeys,
			        CALCULATE ( AVERAGE ( 'CPU utilization'[SQLProcessUtilization] ) )
			    )
			VAR _result = _value
			RETURN
			    _result
		formatString: 0
		displayFolder: CPU
		lineageTag: de4d000f-8fa0-4482-8081-96c7066e34df

	measure 'Min SQL - CPU' =
			
			VAR _timekeys =
			    VALUES ( 'CPU utilization'[TimeKey] )
			VAR _value =
			    MINX (
			        _timekeys,
			        CALCULATE ( MIN ( 'CPU utilization'[SQLProcessUtilization] ) )
			    )
			VAR _result = _value
			RETURN
			    _result
		formatString: 0
		displayFolder: CPU
		lineageTag: 1888a5ce-3774-493e-a017-1ec574eaa5c7

	measure 'Max Other - CPU' =
			
			VAR _timekeys =
			    VALUES ( 'CPU utilization'[TimeKey] )
			VAR _value =
			    MAXX (
			        _timekeys,
			        CALCULATE ( MAX ( 'CPU utilization'[OtherProcessUtilization] ) )
			    )
			VAR _result = _value
			RETURN
			    _result
		formatString: 0
		displayFolder: CPU
		lineageTag: 51c6638d-69f9-4978-aa42-d87d10753c5d

	measure 'Avg Other - CPU' =
			
			VAR _timekeys =
			    VALUES ( 'CPU utilization'[TimeKey] )
			VAR _value =
			    AVERAGEX (
			        _timekeys,
			        CALCULATE ( AVERAGE ( 'CPU utilization'[OtherProcessUtilization] ) )
			    )
			VAR _result = _value
			RETURN
			    _result
		formatString: 0
		displayFolder: CPU
		lineageTag: b55b6f05-e2c1-406d-9fc4-b4490ee6a28b

	measure 'Min Other - CPU' =
			
			VAR _timekeys =
			    VALUES ( 'CPU utilization'[TimeKey] )
			VAR _value =
			    MINX (
			        _timekeys,
			        CALCULATE ( MIN ( 'CPU utilization'[OtherProcessUtilization] ) )
			    )
			VAR _result = _value
			RETURN
			    _result
		formatString: 0
		displayFolder: CPU
		lineageTag: add0ffd4-d7fc-43e0-b96f-f46437f8780a

	measure 'CPU minutes - CPU per database' =
			
			SUM ( 'CPU per database'[CPUTimeMs] ) / 1000 / 60
		formatString: #,0
		displayFolder: CPU
		lineageTag: 8f66336f-2f00-4a8b-bb5b-2084b1c8021c

	measure 'Latest CPU minutes - CPU per database' =
			
			VAR _date =
			    CALCULATE (
			        [Latest date - CPU per database],
			        REMOVEFILTERS ( Database )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [CPU minutes - CPU per database],
			        'CPU per database'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: CPU
		lineageTag: f23f677f-f25d-4f04-adbe-5b0ecd384fc3

	measure 'CPU minutes ratio of total - CPU per database' =
			
			VAR _size = [Latest CPU minutes - CPU per database]
			VAR _totalSize =
			    CALCULATE (
			        [Latest CPU minutes - CPU per database],
			        REMOVEFILTERS ( 'Database' )
			    )
			VAR _ratio =
			    DIVIDE ( _size, _totalSize )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: 0.00\ %;-0.00\ %;0.00\ %
		displayFolder: CPU
		lineageTag: 499d6bb0-c58f-41c8-aede-0192da3ee6b8

	measure 'Details title - CPU per database' =
			
			VAR _latestDate = [Latest date - CPU per database]
			VAR _pastDate = [Past date - CPU per database]
			VAR _realDatesBackInTime =
			    DATEDIFF ( _pastDate, _latestDate, DAY )
			VAR _realDatesBackInTimeTxt =
			    FORMAT ( _realDatesBackInTime, "#,##0" )
			VAR _latestDateTxt =
			    FORMAT ( _latestDate, [Date format string] ) & " ("
			        & FORMAT ( _latestDate, [Dayname format string] ) & ")"
			VAR _pastDateTxt =
			    FORMAT ( _pastDate, [Date format string] ) & " ("
			        & FORMAT ( _pastDate, [Dayname format string] ) & ")"
			VAR _txt =
			    "CPU minutes per database"
			        & IF (
			            _latestDate <> BLANK (),
			            " for " & _latestDateTxt & " compared to " & _pastDateTxt & " " & _realDatesBackInTimeTxt & " days ago"
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: CPU
		lineageTag: 3370ac0f-f9fd-41e1-82e5-39fb6c91052a

	measure 'Latest date - CPU per database' =
			
			VAR _minDate =
			    CALCULATE ( MIN ( 'CPU per database'[Date] ) )
			VAR _nextMinDate =
			    CALCULATE (
			        MIN ( 'CPU per database'[Date] ),
			        ALL ( 'CPU per database' ),
			        'CPU per database'[Date] > _minDate
			    )
			VAR _maxDate =
			    CALCULATE ( MAX ( 'CPU per database'[Date] ) )
			VAR _prevMaxDate =
			    CALCULATE (
			        MAX ( 'CPU per database'[Date] ),
			        ALL ( 'CPU per database' ),
			        'CPU per database'[Date] < _maxDate
			    )
			VAR _minSelectedDate =
			    IF (
			        ISFILTERED ( 'CPU per database - date boundaries'[Date] ),
			        MINX (
			            ALLSELECTED ( 'CPU per database - date boundaries'[Date] ),
			            'CPU per database - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _maxSelectedDate =
			    IF (
			        ISFILTERED ( 'CPU per database - date boundaries'[Date] ),
			        MAXX (
			            ALLSELECTED ( 'CPU per database - date boundaries'[Date] ),
			            'CPU per database - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _minBoundaryDate =
			    CALCULATE (
			        MIN ( 'CPU per database - date boundaries'[Date] ),
			        ALL ( 'CPU per database - date boundaries'[Date] )
			    )
			VAR _maxBoundaryDate =
			    CALCULATE (
			        MAX ( 'CPU per database - date boundaries'[Date] ),
			        ALL ( 'CPU per database - date boundaries'[Date] )
			    )
			VAR _minDateToUse =
			    IF (
			        _minBoundaryDate < _minDate,
			        _minDate,
			        IF ( _minBoundaryDate = _minSelectedDate, _minDate, _nextMinDate )
			    )
			VAR _maxDateToUse =
			    IF (
			        _maxBoundaryDate > _maxDate,
			        _maxDate,
			        IF ( _maxBoundaryDate = _maxSelectedDate, _maxDate, _prevMaxDate )
			    )
			VAR _dateToUse =
			    IF ( _maxDateToUse < _minDateToUse, BLANK (), _maxDateToUse )
			VAR _result = _dateToUse
			RETURN
			    _result
		formatString: General Date
		displayFolder: CPU
		lineageTag: e35350cd-9d0e-4ec9-b751-25f3cf62316d

	measure 'Past date - CPU per database' =
			
			VAR _daysBackInTime =
			    SELECTEDVALUE ( Tally1[Value] )
			VAR _latestDate = [Latest date - CPU per database]
			VAR _minSelectedDate =
			    IF (
			        ISFILTERED ( 'CPU per database - date boundaries'[Date] ),
			        MINX (
			            ALLSELECTED ( 'CPU per database - date boundaries'[Date] ),
			            'CPU per database - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _minBoundaryDate =
			    CALCULATE (
			        MIN ( 'CPU per database - date boundaries'[Date] ),
			        ALL ( 'CPU per database - date boundaries'[Date] )
			    )
			VAR _minDateToUse =
			    IF (
			        _minBoundaryDate = _minSelectedDate,
			        _minBoundaryDate,
			        _minBoundaryDate + 1
			    )
			VAR _compareDate = _latestDate - _daysBackInTime
			VAR _compareDateWithDataFound =
			    CALCULATE (
			        MIN ( 'CPU per database'[Date] ),
			        REMOVEFILTERS ( 'Date'[Date] ),
			        REMOVEFILTERS ( 'Database' ),
			        'CPU per database'[Date] >= _compareDate
			            && 'CPU per database'[Date] >= _minDateToUse
			    )
			VAR _compareDateChecked =
			    IF (
			        _compareDateWithDataFound > _latestDate,
			        _latestDate,
			        _compareDateWithDataFound
			    )
			VAR _result = _compareDateChecked
			RETURN
			    _result
		formatString: General Date
		displayFolder: CPU
		lineageTag: 51d9de41-bbec-47f6-8a5e-fbd663af61af

	measure 'Past CPU minutes - CPU per database' =
			
			VAR _pastDate = [Past date - CPU per database]
			VAR _pastValue =
			    CALCULATE (
			        [CPU minutes - CPU per database],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'CPU per database'[Date] = _pastDate
			    )
			VAR _result = _pastValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: CPU
		lineageTag: e4768d0a-73a1-4f6e-8442-c7b0d8bbe6bc

	measure 'CPU minutes ratio since past - CPU per database' =
			
			VAR _currentValue = [Latest CPU minutes - CPU per database]
			VAR _pastValue = [Past CPU minutes - CPU per database]
			VAR _ratio =
			    IF (
			        _pastValue = BLANK ()
			            || _currentValue = BLANK (),
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: CPU
		lineageTag: 42bd3699-ac22-466f-bfa2-1c0a2c34a3d5

	measure 'Show filters Headers - CPU' =
			
			IF (
			    ISFILTERED ( 'Database'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Database'[Database] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        "Year:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Time'[Hour] ),
			        "Hour:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Time'[Hour] ) ) )
			    )
		displayFolder: CPU
		lineageTag: d434c5c4-342a-4f29-a178-4a4ca590d7c3

	measure 'Show filters - CPU' =
			
			IF (
			    ISFILTERED ( 'Database'[Database] ),
			    VAR _items =
			        VALUES ( 'Database'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Database'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        VAR _items =
			            VALUES ( 'Date'[Year] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Time'[Hour] ),
			        VAR _items =
			            VALUES ( 'Time'[Hour] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Time'[Hour], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: CPU
		lineageTag: 9670af23-3063-489c-a88c-1fe67d9ff389

	measure 'Is filters applied - CPU' =
			
			IF (
			    ISFILTERED ( 'Database'[Database] ) || ISFILTERED ( 'Date'[Year] )
			        || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] )
			        || ISFILTERED ( 'Time'[Hour] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: CPU
		lineageTag: af23f7f9-f689-4ee5-ae94-01f6f76a58da

	measure 'Open filter button tooltip - CPU' =
			
			IF (
			    [Is filters applied - CPU] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: CPU
		lineageTag: 0f59b28f-b0bd-45c7-a839-19b33a8e7eb5

	measure 'Version number' =
			
			"2.6.1"
		isHidden
		displayFolder: Common
		lineageTag: 39428edf-bb47-48d0-a60e-f025984fd1ba

		changedProperty = IsHidden

	measure 'Is filters applied - Database IO' =
			
			IF (
			    ISFILTERED ( 'Database file'[Database] ) || ISFILTERED ( 'Date'[Year] )
			        || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] )
			        || ISFILTERED ( 'Time'[Hour] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Database IO
		lineageTag: 0b0bd31f-35bc-45b2-ad6b-b1153140f483

	measure 'Open filter button tooltip - Database IO' =
			
			IF (
			    [Is filters applied - Database IO] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Database IO
		lineageTag: e27c9a40-d4fc-45ff-b77b-972f3765d8d3

	measure 'Show filters - Database IO' =
			
			IF (
			    ISFILTERED ( 'Database file'[Database] ),
			    VAR _items =
			        VALUES ( 'Database file'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Database file'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        VAR _items =
			            VALUES ( 'Date'[Year] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Time'[Hour] ),
			        VAR _items =
			            VALUES ( 'Time'[Hour] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Time'[Hour], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Database IO
		lineageTag: 74b80b85-dd5e-4c9d-b869-4fc327975aaa

	measure 'Show filters Headers - Database IO' =
			
			IF (
			    ISFILTERED ( 'Database file'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Database file'[Database] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        "Year:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Time'[Hour] ),
			        "Hour:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Time'[Hour] ) ) )
			    )
		displayFolder: Database IO
		lineageTag: d80c2666-4ba3-43b0-8c96-607b7f6ea64d

	measure 'Number of bytes read MB - Database IO' =
			
			SUM ( 'Database IO'[NumOfBytesRead] ) / 1024 / 1024
		formatString: #,0
		displayFolder: Database IO
		lineageTag: c3c993ed-48d5-46ec-928e-01bba08a5c6c

	measure 'Number of bytes written MB - Database IO' =
			
			SUM ( 'Database IO'[NumOfBytesWritten] ) / 1024 / 1024
		formatString: #,0
		displayFolder: Database IO
		lineageTag: c45c9fa4-3428-4feb-9184-cd3f091733f5

	measure 'Max read latency mS - Database IO' =
			
			MAX ( 'Database IO'[ReadLatencyMS] )
		formatString: #,0.00
		displayFolder: Database IO
		lineageTag: 361ca777-dbdd-401c-b075-e52307e2a719

	measure 'Avg. read latency mS - Database IO' =
			
			AVERAGE ( 'Database IO'[ReadLatencyMS] )
		formatString: #,0.00
		displayFolder: Database IO
		lineageTag: 7a5dbaff-fc8b-4d10-968c-6e802fed4764

	measure 'Min read latency mS - Database IO' =
			
			MIN ( 'Database IO'[ReadLatencyMS] )
		formatString: #,0.00
		displayFolder: Database IO
		lineageTag: 74b4af9b-8541-499a-b889-12ef101afa9d

	measure 'Max write latency mS - Database IO' =
			
			MAX ( 'Database IO'[WriteLatencyMS] )
		formatString: 0.00
		displayFolder: Database IO
		lineageTag: 0027901e-e1c4-4880-9619-810b27bc6981

	measure 'Avg. write latency mS - Database IO' =
			
			AVERAGE ( 'Database IO'[WriteLatencyMS] )
		formatString: #,0.00
		displayFolder: Database IO
		lineageTag: 2421db82-d824-46a0-951a-f906ead82a73

	measure 'Min write latency mS - Database IO' =
			
			MIN ( 'Database IO'[WriteLatencyMS] )
		formatString: #,0.00
		displayFolder: Database IO
		lineageTag: 05806885-a137-4f6e-ac32-c0f1fb57cceb

	measure 'Data range - Database IO' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Database IO'[Date] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Database IO'[Date] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Database IO
		lineageTag: 887fb979-6564-49e3-9c58-fd558a253253

	measure 'Latest day number of bytes read MB - Database IO' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Database IO],
			        REMOVEFILTERS ( 'Database file' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Number of bytes read MB - Database IO],
			        REMOVEFILTERS ( 'Time' ),
			        'Database IO'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Database IO
		lineageTag: 961b01dc-ec9a-4ae3-9a3e-405cae30819c

	measure 'Latest day number of bytes written MB - Database IO' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Database IO],
			        REMOVEFILTERS ( 'Database file' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Number of bytes written MB - Database IO],
			        REMOVEFILTERS ( 'Time' ),
			        'Database IO'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Database IO
		lineageTag: f3d60150-ea4c-49fd-ba7f-891f20243006

	measure 'Number of bytes read ratio of total - Database IO' =
			
			VAR _size = [Latest day number of bytes read MB - Database IO]
			VAR _totalSize =
			    CALCULATE (
			        [Latest day number of bytes read MB - Database IO],
			        REMOVEFILTERS ( 'Database file'[Database], 'Database file'[Logical file] )
			    )
			VAR _ratio =
			    DIVIDE ( _size, _totalSize )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Database IO
		lineageTag: 5f24d17f-293e-4b28-b9aa-46e297a18db8

	measure 'Number of bytes written ratio of total - Database IO' =
			
			VAR _size = [Latest day number of bytes written MB - Database IO]
			VAR _totalSize =
			    CALCULATE (
			        [Latest day number of bytes written MB - Database IO],
			        REMOVEFILTERS ( 'Database file'[Database], 'Database file'[Logical file] )
			    )
			VAR _ratio =
			    DIVIDE ( _size, _totalSize )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Database IO
		lineageTag: 3c2840ba-5f69-4dc3-8ac5-ea7cf0e6e4ab

	measure 'Past date - Database IO' =
			
			VAR _daysBackInTime =
			    SELECTEDVALUE ( Tally1[Value] )
			VAR _latestDate = [Latest date - Database IO]
			VAR _minSelectedDate =
			    IF (
			        ISFILTERED ( 'Database IO - date boundaries'[Date] ),
			        MINX (
			            ALLSELECTED ( 'Database IO - date boundaries'[Date] ),
			            'Database IO - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _minBoundaryDate =
			    CALCULATE (
			        MIN ( 'Database IO - date boundaries'[Date] ),
			        ALL ( 'Database IO - date boundaries'[Date] )
			    )
			VAR _minDateToUse =
			    IF (
			        _minBoundaryDate = _minSelectedDate,
			        _minBoundaryDate,
			        _minBoundaryDate + 1
			    )
			VAR _compareDate = _latestDate - _daysBackInTime
			VAR _compareDateWithDataFound =
			    CALCULATE (
			        MIN ( 'Database IO'[Date] ),
			        REMOVEFILTERS ( 'Date'[Date] ),
			        REMOVEFILTERS ( 'Database' ),
			        'Database IO'[Date] >= _compareDate
			            && 'Database IO'[Date] >= _minDateToUse
			    )
			VAR _compareDateChecked =
			    IF (
			        _compareDateWithDataFound > _latestDate,
			        _latestDate,
			        _compareDateWithDataFound
			    )
			VAR _result = _compareDateChecked
			RETURN
			    _result
		formatString: General Date
		displayFolder: Database IO
		lineageTag: 0ffe4a48-57da-423f-ae3f-84e05cece6b9

	measure 'Latest date - Database IO' =
			
			VAR _minDate =
			    CALCULATE ( MIN ( 'Database IO'[Date] ) )
			VAR _nextMinDate =
			    CALCULATE (
			        MIN ( 'Database IO'[Date] ),
			        ALL ( 'Database IO' ),
			        'Database IO'[Date] > _minDate
			    )
			VAR _maxDate =
			    CALCULATE ( MAX ( 'Database IO'[Date] ) )
			VAR _prevMaxDate =
			    CALCULATE (
			        MAX ( 'Database IO'[Date] ),
			        ALL ( 'Database IO' ),
			        'Database IO'[Date] < _maxDate
			    )
			VAR _minSelectedDate =
			    IF (
			        ISFILTERED ( 'Database IO - date boundaries'[Date] ),
			        MINX (
			            ALLSELECTED ( 'Database IO - date boundaries'[Date] ),
			            'Database IO - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _maxSelectedDate =
			    IF (
			        ISFILTERED ( 'Database IO - date boundaries'[Date] ),
			        MAXX (
			            ALLSELECTED ( 'Database IO - date boundaries'[Date] ),
			            'Database IO - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _minBoundaryDate =
			    CALCULATE (
			        MIN ( 'Database IO - date boundaries'[Date] ),
			        ALL ( 'Database IO - date boundaries'[Date] )
			    )
			VAR _maxBoundaryDate =
			    CALCULATE (
			        MAX ( 'Database IO - date boundaries'[Date] ),
			        ALL ( 'Database IO - date boundaries'[Date] )
			    )
			VAR _minDateToUse =
			    IF (
			        _minBoundaryDate < _minDate,
			        _minDate,
			        IF ( _minBoundaryDate = _minSelectedDate, _minDate, _nextMinDate )
			    )
			VAR _maxDateToUse =
			    IF (
			        _maxBoundaryDate > _maxDate,
			        _maxDate,
			        IF ( _maxBoundaryDate = _maxSelectedDate, _maxDate, _prevMaxDate )
			    )
			VAR _dateToUse =
			    IF ( _maxDateToUse < _minDateToUse, BLANK (), _maxDateToUse )
			VAR _result = _dateToUse
			RETURN
			    _result
		formatString: General Date
		displayFolder: Database IO
		lineageTag: 4647f853-b0a4-4e3d-9c6f-b1949d874c54

	measure 'Past day number of bytes read MB - Database IO' =
			
			VAR _pastDate = [Past date - Database IO]
			VAR _pastValue =
			    CALCULATE (
			        [Number of bytes read MB - Database IO],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Database IO'[Date] = _pastDate
			    )
			VAR _result = _pastValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Database IO
		lineageTag: 37be573a-fa44-4b46-aed9-92305838d005

	measure 'Past day number of bytes written MB - Database IO' =
			
			VAR _pastDate = [Past date - Database IO]
			VAR _pastValue =
			    CALCULATE (
			        [Number of bytes written MB - Database IO],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Database IO'[Date] = _pastDate
			    )
			VAR _result = _pastValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Database IO
		lineageTag: 3c55e4d7-fe2f-47bc-b318-7b00e244d9aa

	measure 'Number of bytes read ratio since past - Database IO' =
			
			VAR _currentValue = [Latest day number of bytes read MB - Database IO]
			VAR _pastValue = [Past day number of bytes read MB - Database IO]
			VAR _ratio =
			    IF (
			        _pastValue = BLANK ()
			            || _currentValue = BLANK (),
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Database IO
		lineageTag: 71a0c89e-30b7-49f2-8379-560a493104e2

	measure 'Number of bytes written ratio since past - Database IO' =
			
			VAR _currentValue = [Latest day number of bytes written MB - Database IO]
			VAR _pastValue = [Past day number of bytes written MB - Database IO]
			VAR _ratio =
			    IF (
			        _pastValue = BLANK ()
			            || _currentValue = BLANK (),
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Database IO
		lineageTag: a08831d9-583f-4491-b6cc-5327bfbc0ac7

	measure 'Avg perf. value - Performance statistics' =
			
			AVERAGE ( 'Performance statistics'[CounterValue] )
		formatString: #,0.00
		isHidden
		displayFolder: Performance statistics
		lineageTag: fccb230a-a869-4fab-b900-10358e727abc

		changedProperty = IsHidden

	measure 'Workload group CPU usage - Resource Governor' =
			
			CALCULATE (
			    [Avg perf. value - Performance statistics],
			    CONTAINSSTRING ( 'Performance counter'[Object], ":Workload Group Stats" ),
			    'Performance counter'[Counter] = "CPU usage %"
			)
		formatString: 0.00\ %;-0.00\ %;0.00\ %
		displayFolder: Resource Governor (using ps)
		lineageTag: b2da7796-3ff0-4b85-bc19-7a459e13186a

	measure 'Resource pool CPU usage - Resource Governor' =
			
			CALCULATE (
			    [Avg perf. value - Performance statistics],
			    CONTAINSSTRING ( 'Performance counter'[Object], ":Resource Pool Stats" ),
			    'Performance counter'[Counter] = "CPU usage %"
			)
		formatString: 0.00\ %;-0.00\ %;0.00\ %
		displayFolder: Resource Governor (using ps)
		lineageTag: f032c57f-31cd-4f71-a8cc-fac51c9a7d34

	measure 'Data range - Performance statistics' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Performance statistics'[Date] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Performance statistics'[Date] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Performance statistics (ps)
		lineageTag: f79a480c-e99b-44da-9b1d-53fc6a488638

	measure 'Show filters Headers - Resource Governor' =
			
			IF (
			    ISFILTERED ( 'Date'[Year] ),
			    "Year:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Time'[Hour] ),
			        "Hour:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Time'[Hour] ) ) )
			    )
		displayFolder: Resource Governor (using ps)
		lineageTag: 9abff7ca-eb0f-46d1-b015-f598558ee934

	measure 'Show filters - Resource Governor' =
			
			IF (
			    ISFILTERED ( 'Date'[Year] ),
			    VAR _items =
			        VALUES ( 'Date'[Year] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Time'[Hour] ),
			        VAR _items =
			            VALUES ( 'Time'[Hour] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Time'[Hour], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Resource Governor (using ps)
		lineageTag: e2815e60-0d46-47b8-9375-5c5db7542d0d

	measure 'Is filters applied - Resource Governor' =
			
			IF (
			    ISFILTERED ( 'Date'[Year] ) || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] )
			        || ISFILTERED ( 'Time'[Hour] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Resource Governor (using ps)
		lineageTag: 91721eaf-de9b-4487-8bd6-fba3ef15416d

	measure 'Open filter button tooltip - Resource Governor' =
			
			IF (
			    [Is filters applied - Resource Governor] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Resource Governor (using ps)
		lineageTag: 52086a71-11d5-481d-8526-f59816b1ef54

	measure 'Data range - Index optimize' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Index optimize'[Date] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Index optimize'[Date] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Index optimize
		lineageTag: 3da6e239-9216-4e8c-ae4d-e67afb7cfba7

	measure 'Is filters applied - Index optimize' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ) || ISFILTERED ( 'Index'[Schema] )
			        || ISFILTERED ( 'Index'[Object] )
			        || ISFILTERED ( 'Index'[Index] )
			        || ISFILTERED ( 'Date'[Year] )
			        || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Index optimize
		lineageTag: 5c70181d-a458-4370-af6c-ad2fb669507d

	measure 'Open filter button tooltip - Index optimize' =
			
			IF (
			    [Is filters applied - Index optimize] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Index optimize
		lineageTag: d26d5e72-b1ae-49a4-af3f-a5e0a628ba0c

	measure 'Show filters Headers - Index optimize' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Database] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Index'[Schema] ),
			        "Schema:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Schema] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Object] ),
			        "Object:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Object] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Index] ),
			        "Index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Index] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        "Year:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
		displayFolder: Index optimize
		lineageTag: 4a6e2e1b-11f6-4de5-8d7b-0b64630be014

	measure 'Show filters - Index optimize' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ),
			    VAR _items =
			        VALUES ( 'Index'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Index'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Index'[Schema] ),
			        VAR _items =
			            VALUES ( 'Index'[Schema] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Schema], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Object] ),
			        VAR _items =
			            VALUES ( 'Index'[Object] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Object], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Index] ),
			        VAR _items =
			            VALUES ( 'Index'[Index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        VAR _items =
			            VALUES ( 'Date'[Year] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Index optimize
		lineageTag: 0c15076b-d027-4716-9dda-1be039546066

	measure 'Number of index rebuild - Index optimize' =
			
			CALCULATE (
			    [Number of index optimize - Index optimize],
			    'Index optimize'[Type] = 1
			)
		formatString: #,0
		displayFolder: Index optimize
		lineageTag: bc535e47-7d93-48dd-b530-aebdea9395d9

	measure 'Number of index optimize - Index optimize' =
			
			COUNT ( 'Index optimize'[Duration] )
		formatString: #,0
		isHidden
		displayFolder: Index optimize
		lineageTag: 63ed05bd-0666-46fe-8fd1-be03e9add3c0

		changedProperty = IsHidden

	measure 'Number of index reorganize - Index optimize' =
			
			CALCULATE (
			    [Number of index optimize - Index optimize],
			    'Index optimize'[Type] = 2
			)
		formatString: #,0
		displayFolder: Index optimize
		lineageTag: d980ddb7-00de-4b46-8085-b6bda47879bd

	measure 'Number of statistics update - Index optimize' =
			
			CALCULATE (
			    [Number of index optimize - Index optimize],
			    'Index optimize'[Type] = 3
			)
		formatString: #,0
		displayFolder: Index optimize
		lineageTag: 1ef6fc6e-87df-483f-8d25-a54811c21c76

	measure 'Duration of index optimize - Index optimize' =
			
			SUM ( 'Index optimize'[Duration] )
		formatString: #,0
		isHidden
		displayFolder: Index optimize
		lineageTag: a65b509c-50bc-4d0f-821c-4bd3d208a716

		changedProperty = IsHidden

	measure 'Duration of index rebuild - Index optimize' =
			
			CALCULATE (
			    [Duration of index optimize - Index optimize],
			    'Index optimize'[Type] = 1
			)
		formatString: #,0
		displayFolder: Index optimize
		lineageTag: f744b932-b309-4e6a-8422-501eef8e57da

	measure 'Duration of index reorganize - Index optimize' =
			
			CALCULATE (
			    [Duration of index optimize - Index optimize],
			    'Index optimize'[Type] = 2
			)
		formatString: 0
		displayFolder: Index optimize
		lineageTag: 1be646b2-e8a6-42c4-a96d-195b51a0ec08

	measure 'Duration of statistics update - Index optimize' =
			
			CALCULATE (
			    [Duration of index optimize - Index optimize],
			    'Index optimize'[Type] = 3
			)
		formatString: #,0
		displayFolder: Index optimize
		lineageTag: 1ec6b6ce-af9a-4359-802f-d7a41bfdcc8c

	measure 'Latest number of index rebuild - Index optimize' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index optimize],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Number of index rebuild - Index optimize],
			        'Index optimize'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index optimize
		lineageTag: 8a74b91c-7c43-4221-b064-0c2d2b76294b

	measure 'Latest number of index reorganize - Index optimize' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index optimize],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Number of index reorganize - Index optimize],
			        'Index optimize'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index optimize
		lineageTag: f6d7b8eb-b987-439f-9353-d486f8ca7aed

	measure 'Latest number of statistics update - Index optimize' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index optimize],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Number of statistics update - Index optimize],
			        'Index optimize'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index optimize
		lineageTag: 77330da7-2f8d-4d24-b823-1e692200069c

	measure 'Latest duration of index rebuild - Index optimize' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index optimize],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Duration of index rebuild - Index optimize],
			        'Index optimize'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index optimize
		lineageTag: a928efc6-f7b9-4d7a-819f-8c898418c731

	measure 'Latest duration of index reorganize - Index optimize' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index optimize],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Duration of index reorganize - Index optimize],
			        'Index optimize'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index optimize
		lineageTag: 9ed3e9d8-ca19-4646-b219-695346d22351

	measure 'Latest duration of statistics update - Index optimize' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index optimize],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Duration of statistics update - Index optimize],
			        'Index optimize'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index optimize
		lineageTag: bad92807-a1b0-4845-84e0-89af0e129279

	measure 'Details title - Index optimize' =
			
			VAR _latestDate = [Latest date - Index optimize]
			VAR _pastDate = [Past date - Index optimize]
			VAR _realDatesBackInTime =
			    DATEDIFF ( _pastDate, _latestDate, DAY )
			VAR _realDatesBackInTimeTxt =
			    FORMAT ( _realDatesBackInTime, "#,##0" )
			VAR _latestDateTxt =
			    FORMAT ( _latestDate, [Date format string] ) & " ("
			        & FORMAT ( _latestDate, [Dayname format string] ) & ")"
			VAR _pastDateTxt =
			    FORMAT ( _pastDate, [Date format string] ) & " ("
			        & FORMAT ( _pastDate, [Dayname format string] ) & ")"
			VAR _txt =
			    "Index optimize data"
			        & IF (
			            _latestDate <> BLANK (),
			            " for " & _latestDateTxt & " with total including from " & _pastDateTxt & " - " & _realDatesBackInTimeTxt & " days"
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Index optimize
		lineageTag: 1737deaa-2a36-454a-a54c-106b62cf6b96

	measure 'Latest date - Index optimize' =
			
			VAR _minDate =
			    CALCULATE ( MIN ( 'Index optimize'[Date] ) )
			VAR _nextMinDate =
			    CALCULATE (
			        MIN ( 'Index optimize'[Date] ),
			        ALL ( 'Index optimize' ),
			        'Index optimize'[Date] > _minDate
			    )
			VAR _maxDate =
			    CALCULATE ( MAX ( 'Index optimize'[Date] ) )
			VAR _prevMaxDate =
			    CALCULATE (
			        MAX ( 'Index optimize'[Date] ),
			        ALL ( 'Index optimize' ),
			        'Index optimize'[Date] < _maxDate
			    )
			VAR _minSelectedDate =
			    IF (
			        ISFILTERED ( 'Index optimize - date boundaries'[Date] ),
			        MINX (
			            ALLSELECTED ( 'Index optimize - date boundaries'[Date] ),
			            'Index optimize - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _maxSelectedDate =
			    IF (
			        ISFILTERED ( 'Index optimize - date boundaries'[Date] ),
			        MAXX (
			            ALLSELECTED ( 'Index optimize - date boundaries'[Date] ),
			            'Index optimize - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _minBoundaryDate =
			    CALCULATE (
			        MIN ( 'Index optimize - date boundaries'[Date] ),
			        ALL ( 'Index optimize - date boundaries'[Date] )
			    )
			VAR _maxBoundaryDate =
			    CALCULATE (
			        MAX ( 'Index optimize - date boundaries'[Date] ),
			        ALL ( 'Index optimize - date boundaries'[Date] )
			    )
			VAR _minDateToUse =
			    IF (
			        _minBoundaryDate < _minDate,
			        _minDate,
			        IF ( _minBoundaryDate = _minSelectedDate, _minDate, _nextMinDate )
			    )
			VAR _maxDateToUse =
			    IF (
			        _maxBoundaryDate > _maxDate,
			        _maxDate,
			        IF ( _maxBoundaryDate = _maxSelectedDate, _maxDate, _prevMaxDate )
			    )
			VAR _dateToUse =
			    IF ( _maxDateToUse < _minDateToUse, BLANK (), _maxDateToUse )
			VAR _result = _dateToUse
			RETURN
			    _result
		formatString: General Date
		displayFolder: Index optimize
		lineageTag: a6692635-766e-446f-bdaf-1a315753cfd0

	measure 'Number of index rebuild in period - Index optimize' =
			
			VAR _maxDate = [Latest date - Index optimize]
			VAR _pastDate = [Past date - Index optimize]
			VAR _totalValue =
			    CALCULATE (
			        [Number of index rebuild - Index optimize],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index optimize'[Date] >= _pastDate
			            && 'Index optimize'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index optimize
		lineageTag: c2b8ef1a-be6f-42c0-9da8-1bb901c1838f

	measure 'Number of index reorganize in period - Index optimize' =
			
			VAR _maxDate = [Latest date - Index optimize]
			VAR _pastDate = [Past date - Index optimize]
			VAR _totalValue =
			    CALCULATE (
			        [Number of index reorganize - Index optimize],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index optimize'[Date] >= _pastDate
			            && 'Index optimize'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index optimize
		lineageTag: 55fde7c8-77e5-4775-9ba1-134f165a957a

	measure 'Number of statistics update in period - Index optimize' =
			
			VAR _maxDate = [Latest date - Index optimize]
			VAR _pastDate = [Past date - Index optimize]
			VAR _totalValue =
			    CALCULATE (
			        [Number of statistics update - Index optimize],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index optimize'[Date] >= _pastDate
			            && 'Index optimize'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index optimize
		lineageTag: 88a213c0-ef0f-47a8-90a5-1fc8dceb0bd9

	measure 'Duration of index rebuild in period - Index optimize' =
			
			VAR _maxDate = [Latest date - Index optimize]
			VAR _pastDate = [Past date - Index optimize]
			VAR _totalValue =
			    CALCULATE (
			        [Duration of index rebuild - Index optimize],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index optimize'[Date] >= _pastDate
			            && 'Index optimize'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index optimize
		lineageTag: 7371b0a0-052e-4d6f-9d1b-bcfc87cbc32e

	measure 'Duration of index reorganize in period - Index optimize' =
			
			VAR _maxDate = [Latest date - Index optimize]
			VAR _pastDate = [Past date - Index optimize]
			VAR _totalValue =
			    CALCULATE (
			        [Duration of index reorganize - Index optimize],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index optimize'[Date] >= _pastDate
			            && 'Index optimize'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index optimize
		lineageTag: e9997128-499c-4f54-ad38-0babab2d72d3

	measure 'Duration of statistics update in period - Index optimize' =
			
			VAR _maxDate = [Latest date - Index optimize]
			VAR _pastDate = [Past date - Index optimize]
			VAR _totalValue =
			    CALCULATE (
			        [Duration of statistics update - Index optimize],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index optimize'[Date] >= _pastDate
			            && 'Index optimize'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index optimize
		lineageTag: 6db50aeb-bf7c-4700-8b4e-ab3ccca78e0e

	measure 'Past date - Index optimize' =
			
			VAR _daysBackInTime =
			    SELECTEDVALUE ( Tally1[Value] )
			VAR _latestDate = [Latest date - Index optimize]
			VAR _minSelectedDate =
			    IF (
			        ISFILTERED ( 'Index optimize - date boundaries'[Date] ),
			        MINX (
			            ALLSELECTED ( 'Index optimize - date boundaries'[Date] ),
			            'Index optimize - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _minBoundaryDate =
			    CALCULATE (
			        MIN ( 'Index optimize - date boundaries'[Date] ),
			        ALL ( 'Index optimize - date boundaries'[Date] )
			    )
			VAR _minDateToUse =
			    IF (
			        _minBoundaryDate = _minSelectedDate,
			        _minBoundaryDate,
			        _minBoundaryDate + 1
			    )
			VAR _compareDate = _latestDate - _daysBackInTime
			VAR _compareDateWithDataFound =
			    CALCULATE (
			        MIN ( 'Index optimize'[Date] ),
			        REMOVEFILTERS ( 'Date'[Date] ),
			        REMOVEFILTERS ( 'Index' ),
			        'Index optimize'[Date] >= _compareDate
			            && 'Index optimize'[Date] >= _minDateToUse
			    )
			VAR _compareDateChecked =
			    IF (
			        _compareDateWithDataFound > _latestDate,
			        _latestDate,
			        _compareDateWithDataFound
			    )
			VAR _result = _compareDateChecked
			RETURN
			    _result
		formatString: General Date
		displayFolder: Index optimize
		lineageTag: e85b5432-d73a-4256-a7cf-466d08052e68

	measure 'Avg Bytes Received from Replica - Always On traffic' =
			
			CALCULATE (
			    [Avg perf. value - Performance statistics],
			    CONTAINSSTRING ( 'Performance counter'[Object], ":Availability Replica" ),
			    'Performance counter'[Counter] = "Bytes Received from Replica/sec"
			)
		formatString: #,0
		displayFolder: Always On traffic (using ps)
		lineageTag: 25fe76ec-7f69-4b31-8170-25788038849e

	measure 'Is filters applied - Always On traffic' =
			
			IF (
			    ISFILTERED ( 'Date'[Year] ) || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] )
			        || ISFILTERED ( 'Time'[Hour] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Always On traffic (using ps)
		lineageTag: 96fdf35a-67c4-4806-85fd-2613947b73a9

	measure 'Open filter button tooltip - Always On traffic' =
			
			IF (
			    [Is filters applied - Always On traffic] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Always On traffic (using ps)
		lineageTag: 521df29b-343a-46fb-9f66-8336d1a091ce

	measure 'Avg Bytes Sent to Replica - Always On traffic' =
			
			CALCULATE (
			    [Avg perf. value - Performance statistics],
			    CONTAINSSTRING ( 'Performance counter'[Object], ":Availability Replica" ),
			    'Performance counter'[Counter] = "Bytes Sent to Replica/sec"
			)
		formatString: #,0
		displayFolder: Always On traffic (using ps)
		lineageTag: 779ed2eb-6110-4d25-8510-7b7d49463f6b

	measure 'Avg Bytes Sent to Transport - Always On traffic' =
			
			CALCULATE (
			    [Avg perf. value - Performance statistics],
			    CONTAINSSTRING ( 'Performance counter'[Object], ":Availability Replica" ),
			    'Performance counter'[Counter] = "Bytes Sent to Transport/sec"
			)
		formatString: #,0
		displayFolder: Always On traffic (using ps)
		lineageTag: 9e3023d1-9545-4143-b32a-779e76eed77d

	measure 'Data range - Index usage' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Index usage'[Date] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Index usage'[Date] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Index usage
		lineageTag: 43a54590-3129-4604-aa3a-8797e88d42fb

	measure 'User lookups - Index usage' =
			
			SUM ( 'Index usage'[UserLookups] )
		formatString: #,0
		displayFolder: Index usage
		lineageTag: f7a47343-455b-4a49-aece-12c5bdabb951

	measure 'User scans - Index usage' =
			
			SUM ( 'Index usage'[UserScans] )
		formatString: #,0
		displayFolder: Index usage
		lineageTag: 9c204217-0512-4501-912a-cda870008cce

	measure 'User seeks - Index usage' =
			
			SUM ( 'Index usage'[UserSeeks] )
		formatString: #,0
		displayFolder: Index usage
		lineageTag: 9c32ed6c-7c1c-478e-aeed-a771808e9c52

	measure 'User updates - Index usage' =
			
			SUM ( 'Index usage'[UserUpdates] )
		formatString: #,0
		displayFolder: Index usage
		lineageTag: c14b8221-728b-4147-9770-965ef7e55e98

	measure 'Is filters applied - Index usage' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ) || ISFILTERED ( 'Index'[Schema] )
			        || ISFILTERED ( 'Index'[Object] )
			        || ISFILTERED ( 'Index'[Index] )
			        || ISFILTERED ( 'Date'[Year] )
			        || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Index usage
		lineageTag: 584aeb52-1d26-4e43-b8e0-ff9a74a6ef85

	measure 'Show filters - Always On traffic' =
			
			IF (
			    ISFILTERED ( 'Date'[Year] ),
			    VAR _items =
			        VALUES ( 'Date'[Year] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Time'[Hour] ),
			        VAR _items =
			            VALUES ( 'Time'[Hour] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Time'[Hour], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Always On traffic (using ps)
		lineageTag: 04bec479-171e-4b87-86b2-a9d034961450

	measure 'Show filters Headers - Always On traffic' =
			
			IF (
			    ISFILTERED ( 'Date'[Year] ),
			    "Year:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Time'[Hour] ),
			        "Hour: " & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Time'[Hour] ) ) )
			    )
		displayFolder: Always On traffic (using ps)
		lineageTag: ca07261a-22bf-47aa-b44c-d27ac9f86218

	measure 'Show filters Headers - Index usage' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Database] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Index'[Schema] ),
			        "Schema:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Schema] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Object] ),
			        "Object:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Object] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Index] ),
			        "Index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Index] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        "Year:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
		displayFolder: Index usage
		lineageTag: 3b9595fd-48f9-438e-b080-439ad963b915

	measure 'Show filters - Index usage' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ),
			    VAR _items =
			        VALUES ( 'Index'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Index'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Index'[Schema] ),
			        VAR _items =
			            VALUES ( 'Index'[Schema] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Schema], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Object] ),
			        VAR _items =
			            VALUES ( 'Index'[Object] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Object], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Index] ),
			        VAR _items =
			            VALUES ( 'Index'[Index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        VAR _items =
			            VALUES ( 'Date'[Year] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Index usage
		lineageTag: 2f855e7e-6c91-4331-a6e2-47bbefdafe0b

	measure 'Open filter button tooltip - Index usage' =
			
			IF (
			    [Is filters applied - Index usage] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Index usage
		lineageTag: 8fb72c54-6c4f-4cb2-aa29-73206eb481f4

	measure 'VLF - Index usage' =
			
			[User lookups - Index usage] + [User scans - Index usage] + [User seeks - Index usage] + [User updates - Index usage]
		formatString: 0
		displayFolder: Index usage
		lineageTag: 78827a00-409f-4b4b-80cd-1d5c6fb069b2

	measure 'Latest number of lookups - Index usage' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index usage],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE ( [User lookups - Index usage], 'Index usage'[Date] = _date )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index usage
		lineageTag: 53576298-2bf0-4280-a2d1-e25bc742b6dd

	measure 'Latest time of lookup - Index usage' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index usage],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestTimestamp =
			    CALCULATE (
			        MAX ( 'Index usage'[LastUserLookup] ),
			        'Index usage'[Date] = _date
			    )
			VAR _latestTimestampReturned =
			    IF (
			        _latestTimestamp = BLANK ()
			            || NOT ISINSCOPE ( 'Index'[Database] ),
			        BLANK (),
			        _latestTimestamp
			    )
			VAR _result = _latestTimestampReturned
			RETURN
			    _result
			```
		formatString: dd-mmm-yyyy hh:nn
		displayFolder: Index usage
		lineageTag: cb5dd502-c913-4af9-a441-326fbee4b249

		annotation PBI_FormatHint = {"isCustom":true}

	measure 'Latest time of scan - Index usage' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index usage],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestTimestamp =
			    CALCULATE (
			        MAX ( 'Index usage'[LastUserScan] ),
			        'Index usage'[Date] = _date
			    )
			VAR _latestTimestampReturned =
			    IF (
			        _latestTimestamp = BLANK ()
			            || NOT ISINSCOPE ( 'Index'[Database] ),
			        BLANK (),
			        _latestTimestamp
			    )
			VAR _result = _latestTimestampReturned
			RETURN
			    _result
			```
		formatString: dd-mmm-yyyy hh:nn
		displayFolder: Index usage
		lineageTag: 5c435b36-af7c-4e24-b925-3f90e3964dfd

		annotation PBI_FormatHint = {"isCustom":true}

	measure 'Latest time of seek - Index usage' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index usage],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestTimestamp =
			    CALCULATE (
			        MAX ( 'Index usage'[LastUserSeek] ),
			        'Index usage'[Date] = _date
			    )
			VAR _latestTimestampReturned =
			    IF (
			        _latestTimestamp = BLANK ()
			            || NOT ISINSCOPE ( 'Index'[Database] ),
			        BLANK (),
			        _latestTimestamp
			    )
			VAR _result = _latestTimestampReturned
			RETURN
			    _result
			```
		formatString: dd-mmm-yyyy hh:nn
		displayFolder: Index usage
		lineageTag: bbe30f41-98de-4ea9-8e8e-fed62f735867

		annotation PBI_FormatHint = {"isCustom":true}

	measure 'Latest time of update - Index usage' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index usage],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestTimestamp =
			    CALCULATE (
			        MAX ( 'Index usage'[LastUserUpdate] ),
			        'Index usage'[Date] = _date
			    )
			VAR _latestTimestampReturned =
			    IF (
			        _latestTimestamp = BLANK ()
			            || NOT ISINSCOPE ( 'Index'[Database] ),
			        BLANK (),
			        _latestTimestamp
			    )
			VAR _result = _latestTimestampReturned
			RETURN
			    _result
			```
		formatString: dd-mmm-yyyy hh:nn
		displayFolder: Index usage
		lineageTag: 881df14c-35c3-433d-a5c0-77a26ceb5c25

		annotation PBI_FormatHint = {"isCustom":true}

	measure 'Latest number of scans - Index usage' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index usage],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE ( [User scans - Index usage], 'Index usage'[Date] = _date )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index usage
		lineageTag: 4d01b6ec-1434-4e8c-9e15-744c8af4963f

	measure 'Latest number of seeks - Index usage' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index usage],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE ( [User seeks - Index usage], 'Index usage'[Date] = _date )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index usage
		lineageTag: 0861ba82-89fd-4a3c-b1a0-9c9c836a0021

	measure 'Latest number of updates - Index usage' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index usage],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE ( [User updates - Index usage], 'Index usage'[Date] = _date )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index usage
		lineageTag: 6b7d9b64-5a93-4dbf-bdbe-f964d055d4ad

	measure 'Number of lookups in period - Index usage' =
			
			VAR _maxDate = [Latest date - Index usage]
			VAR _pastDate = [Past date - Index usage]
			VAR _totalValue =
			    CALCULATE (
			        [User lookups - Index usage],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index usage'[Date] >= _pastDate
			            && 'Index usage'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index usage
		lineageTag: de4e0f9b-5a35-4c2d-b72c-4217e64fbd9a

	measure 'Past date - Index usage' =
			
			VAR _daysBackInTime =
			    SELECTEDVALUE ( Tally1[Value] )
			VAR _latestDate = [Latest date - Index usage]
			VAR _minSelectedDate =
			    IF (
			        ISFILTERED ( 'Index usage - date boundaries'[Date] ),
			        MINX (
			            ALLSELECTED ( 'Index usage - date boundaries'[Date] ),
			            'Index usage - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _minBoundaryDate =
			    CALCULATE (
			        MIN ( 'Index usage - date boundaries'[Date] ),
			        ALL ( 'Index usage - date boundaries'[Date] )
			    )
			VAR _minDateToUse =
			    IF (
			        _minBoundaryDate = _minSelectedDate,
			        _minBoundaryDate,
			        _minBoundaryDate + 1
			    )
			VAR _compareDate = _latestDate - _daysBackInTime
			VAR _compareDateWithDataFound =
			    CALCULATE (
			        MIN ( 'Index usage'[Date] ),
			        REMOVEFILTERS ( 'Date'[Date] ),
			        REMOVEFILTERS ( 'Index' ),
			        'Index usage'[Date] >= _compareDate
			            && 'Index usage'[Date] >= _minDateToUse
			    )
			VAR _compareDateChecked =
			    IF (
			        _compareDateWithDataFound > _latestDate,
			        _latestDate,
			        _compareDateWithDataFound
			    )
			VAR _result = _compareDateChecked
			RETURN
			    _result
		formatString: General Date
		displayFolder: Index usage
		lineageTag: 456ed921-289f-47f6-82f8-fcfced0e4f1f

	measure 'Latest date - Index usage' =
			
			VAR _minDate =
			    CALCULATE ( MIN ( 'Index usage'[Date] ) )
			VAR _nextMinDate =
			    CALCULATE (
			        MIN ( 'Index usage'[Date] ),
			        ALL ( 'Index usage' ),
			        'Index usage'[Date] > _minDate
			    )
			VAR _maxDate =
			    CALCULATE ( MAX ( 'Index usage'[Date] ) )
			VAR _prevMaxDate =
			    CALCULATE (
			        MAX ( 'Index usage'[Date] ),
			        ALL ( 'Index usage' ),
			        'Index usage'[Date] < _maxDate
			    )
			VAR _minSelectedDate =
			    IF (
			        ISFILTERED ( 'Index usage - date boundaries'[Date] ),
			        MINX (
			            ALLSELECTED ( 'Index usage - date boundaries'[Date] ),
			            'Index usage - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _maxSelectedDate =
			    IF (
			        ISFILTERED ( 'Index usage - date boundaries'[Date] ),
			        MAXX (
			            ALLSELECTED ( 'Index usage - date boundaries'[Date] ),
			            'Index usage - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _minBoundaryDate =
			    CALCULATE (
			        MIN ( 'Index usage - date boundaries'[Date] ),
			        ALL ( 'Index usage - date boundaries'[Date] )
			    )
			VAR _maxBoundaryDate =
			    CALCULATE (
			        MAX ( 'Index usage - date boundaries'[Date] ),
			        ALL ( 'Index usage - date boundaries'[Date] )
			    )
			VAR _minDateToUse =
			    IF (
			        _minBoundaryDate < _minDate,
			        _minDate,
			        IF ( _minBoundaryDate = _minSelectedDate, _minDate, _nextMinDate )
			    )
			VAR _maxDateToUse =
			    IF (
			        _maxBoundaryDate > _maxDate,
			        _maxDate,
			        IF ( _maxBoundaryDate = _maxSelectedDate, _maxDate, _prevMaxDate )
			    )
			VAR _dateToUse =
			    IF ( _maxDateToUse < _minDateToUse, BLANK (), _maxDateToUse )
			VAR _result = _dateToUse
			RETURN
			    _result
		formatString: General Date
		displayFolder: Index usage
		lineageTag: 523176d6-7cb6-4baf-92e7-55331683b94e

	measure 'Number of scans in period - Index usage' =
			
			VAR _maxDate = [Latest date - Index usage]
			VAR _pastDate = [Past date - Index usage]
			VAR _totalValue =
			    CALCULATE (
			        [User scans - Index usage],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index usage'[Date] >= _pastDate
			            && 'Index usage'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index usage
		lineageTag: cf6b6f7d-7eac-4109-beee-515c1b0fe4cf

	measure 'Number of seeks in period - Index usage' =
			
			VAR _maxDate = [Latest date - Index usage]
			VAR _pastDate = [Past date - Index usage]
			VAR _totalValue =
			    CALCULATE (
			        [User seeks - Index usage],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index usage'[Date] >= _pastDate
			            && 'Index usage'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index usage
		lineageTag: 35d919b0-7eba-4944-9d98-773ff57891c9

	measure 'Number of updates in period - Index usage' =
			
			VAR _maxDate = [Latest date - Index usage]
			VAR _pastDate = [Past date - Index usage]
			VAR _totalValue =
			    CALCULATE (
			        [User updates - Index usage],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index usage'[Date] >= _pastDate
			            && 'Index usage'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index usage
		lineageTag: 0a09a3f0-cfb8-4a92-b3dd-1b96e889a160

	measure 'Details title - Index usage' =
			
			VAR _latestDate = [Latest date - Index usage]
			VAR _pastDate = [Past date - Index usage]
			VAR _realDatesBackInTime =
			    DATEDIFF ( _pastDate, _latestDate, DAY )
			VAR _realDatesBackInTimeTxt =
			    FORMAT ( _realDatesBackInTime, "#,##0" )
			VAR _latestDateTxt =
			    FORMAT ( _latestDate, [Date format string] ) & " ("
			        & FORMAT ( _latestDate, [Dayname format string] ) & ")"
			VAR _pastDateTxt =
			    FORMAT ( _pastDate, [Date format string] ) & " ("
			        & FORMAT ( _pastDate, [Dayname format string] ) & ")"
			VAR _txt =
			    "Index usage per database data"
			        & IF (
			            _latestDate <> BLANK (),
			            " for " & _latestDateTxt & " with total including from " & _pastDateTxt & " - " & _realDatesBackInTimeTxt & " days"
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Index usage
		lineageTag: 03929519-ebe7-4f53-9143-dfbb42eab3e0

	measure 'Details read title - Database IO' =
			
			VAR _types =
			    CALCULATETABLE (
			        VALUES ( 'Database file'[Type] ),
			        FILTER ( 'Database file', [Number of bytes read MB - Database IO] <> BLANK () )
			    )
			VAR _typesCombined =
			    LOWER ( CONCATENATEX ( _types, 'Database file'[Type], "+" ) )
			VAR _latestDate = [Latest date - Database IO]
			VAR _pastDate = [Past date - Database IO]
			VAR _realDatesBackInTime =
			    DATEDIFF ( _pastDate, _latestDate, DAY )
			VAR _realDatesBackInTimeTxt =
			    FORMAT ( _realDatesBackInTime, "#,##0" )
			VAR _latestDateTxt =
			    FORMAT ( _latestDate, [Date format string] ) & " ("
			        & FORMAT ( _latestDate, [Dayname format string] ) & ")"
			VAR _pastDateTxt =
			    FORMAT ( _pastDate, [Date format string] ) & " ("
			        & FORMAT ( _pastDate, [Dayname format string] ) & ")"
			VAR _txt =
			    "Read for " & _typesCombined
			        & IF (
			            _latestDate <> BLANK (),
			            " at " & _latestDateTxt & " compared to " & _pastDateTxt & " " & _realDatesBackInTimeTxt & " days ago"
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Database IO
		lineageTag: aef6662c-ca85-453b-8742-e6b146fb6af9

	measure 'Details write title - Database IO' =
			
			VAR _types =
			    CALCULATETABLE (
			        VALUES ( 'Database file'[Type] ),
			        FILTER ( 'Database file', [Number of bytes written MB - Database IO] <> BLANK () )
			    )
			VAR _typesCombined =
			    LOWER ( CONCATENATEX ( _types, 'Database file'[Type], "+" ) )
			VAR _latestDate = [Latest date - Database IO]
			VAR _pastDate = [Past date - Database IO]
			VAR _realDatesBackInTime =
			    DATEDIFF ( _pastDate, _latestDate, DAY )
			VAR _realDatesBackInTimeTxt =
			    FORMAT ( _realDatesBackInTime, "#,##0" )
			VAR _latestDateTxt =
			    FORMAT ( _latestDate, [Date format string] ) & " ("
			        & FORMAT ( _latestDate, [Dayname format string] ) & ")"
			VAR _pastDateTxt =
			    FORMAT ( _pastDate, [Date format string] ) & " ("
			        & FORMAT ( _pastDate, [Dayname format string] ) & ")"
			VAR _txt =
			    "Write for " & _typesCombined
			        & IF (
			            _latestDate <> BLANK (),
			            " at " & _latestDateTxt & " compared to " & _pastDateTxt & " " & _realDatesBackInTimeTxt & " days ago"
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Database IO
		lineageTag: ed3a8a50-0273-4b1f-bcb9-55477e2b5e68

	measure 'Show filters Headers - Performance statistics' =
			
			IF (
			    ISFILTERED ( 'Date'[Year] ),
			    "Year:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Time'[Hour] ),
			        "Hour:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Time'[Hour] ) ) )
			    )
		displayFolder: Performance statistics (using ps)
		lineageTag: b2c6e16a-0729-4c3e-bf0f-e3114e143665

	measure 'Show filters - Performance statistics' =
			
			IF (
			    ISFILTERED ( 'Date'[Year] ),
			    VAR _items =
			        VALUES ( 'Date'[Year] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Time'[Hour] ),
			        VAR _items =
			            VALUES ( 'Time'[Hour] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Time'[Hour], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Performance statistics (using ps)
		lineageTag: bd6bf937-71e5-49be-9843-87f2b330995a

	measure 'Avg batch requests/sec - Performance statistics' =
			
			CALCULATE (
			    [Avg perf. value - Performance statistics],
			    CONTAINSSTRING ( 'Performance counter'[Object], ":SQL Statistics" ),
			    'Performance counter'[Counter] = "Batch Requests/sec"
			)
		formatString: #,0
		displayFolder: Performance statistics (using ps)
		lineageTag: f270784c-c35e-4c39-b46e-d0ba861e37b5

	measure 'Avg compilations/sec - Performance statistics' =
			
			CALCULATE (
			    [Avg perf. value - Performance statistics],
			    CONTAINSSTRING ( 'Performance counter'[Object], ":SQL Statistics" ),
			    'Performance counter'[Counter] = "SQL Compilations/sec"
			)
		formatString: #,0
		displayFolder: Performance statistics (using ps)
		lineageTag: 784f843f-75ff-4021-9f7c-4d42b0225c24

	measure 'Max page life expectancy - Performance statistics' =
			
			CALCULATE (
			    [Max perf. value - Performance statistics],
			    CONTAINSSTRING ( 'Performance counter'[Object], ":Buffer Manager" ),
			    'Performance counter'[Counter] = "Page life expectancy"
			)
		formatString: #,0
		displayFolder: Performance statistics (using ps)
		lineageTag: 04b7e8fc-82b2-4840-933f-d93eea94b0b1

	measure 'Max perf. value - Performance statistics' =
			
			MAX ( 'Performance statistics'[CounterValue] )
		formatString: #,0
		isHidden
		displayFolder: Performance statistics
		lineageTag: 3cfab6bb-79c1-4097-9db8-533725d762cd

		changedProperty = IsHidden

	measure 'Min perf. value - Performance statistics' =
			
			MIN ( 'Performance statistics'[CounterValue] )
		formatString: #,0
		isHidden
		displayFolder: Performance statistics
		lineageTag: c65a2ca6-47a4-4d35-bd02-db4bc78d3892

		changedProperty = IsHidden

	measure 'Avg page life expectancy - Performance statistics' =
			
			CALCULATE (
			    [Avg perf. value - Performance statistics],
			    CONTAINSSTRING ( 'Performance counter'[Object], ":Buffer Manager" ),
			    'Performance counter'[Counter] = "Page life expectancy"
			)
		formatString: #,0
		displayFolder: Performance statistics (using ps)
		lineageTag: d98792fc-aca1-4c7e-8d32-c2ca26d431cf

	measure 'Min page life expectancy - Performance statistics' =
			
			CALCULATE (
			    [Min perf. value - Performance statistics],
			    CONTAINSSTRING ( 'Performance counter'[Object], ":Buffer Manager" ),
			    'Performance counter'[Counter] = "Page life expectancy"
			)
		formatString: #,0
		displayFolder: Performance statistics (using ps)
		lineageTag: 89c20c4d-7849-4edc-abba-532ba8797eaf

	measure 'Avg page life expectancy #000 - Performance statistics' =
			
			CALCULATE (
			    [Avg perf. value - Performance statistics],
			    CONTAINSSTRING ( 'Performance counter'[Object], ":Buffer Node" ),
			    'Performance counter'[Counter] = "Page life expectancy",
			    'Performance counter'[Instance] = "000"
			)
		formatString: #,0
		displayFolder: Performance statistics (using ps)
		lineageTag: 2870aba3-cbcf-4a1f-bced-443ac67cf415

	measure 'Avg page life expectancy #001 - Performance statistics' =
			
			CALCULATE (
			    [Avg perf. value - Performance statistics],
			    CONTAINSSTRING ( 'Performance counter'[Object], ":Buffer Node" ),
			    'Performance counter'[Counter] = "Page life expectancy",
			    'Performance counter'[Instance] = "001"
			)
		formatString: #,0
		displayFolder: Performance statistics (using ps)
		lineageTag: b2d50c96-bfc4-441e-9fd6-9b95ac82aec9

	measure 'Is filters applied - Performance statistics' =
			
			IF (
			    ISFILTERED ( 'Date'[Year] ) || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] )
			        || ISFILTERED ( 'Time'[Hour] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Performance statistics (using ps)
		lineageTag: 64f75127-ca7b-44ca-8392-ce61f7f38880

	measure 'Open filter button tooltip - Performance statistics' =
			
			IF (
			    [Is filters applied - Performance statistics] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Performance statistics (using ps)
		lineageTag: 9d175e70-603f-4033-9b02-37ee330ba7a9

	measure 'Data range - Index operational' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Index operational'[Date] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Index operational'[Date] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Index operational (io)
		lineageTag: 15f21673-f0cf-4940-9f8d-71bf3793e8c7

	measure 'Page lock count - Lock statistics' =
			
			SUM ( 'Index operational'[PageLockCount] )
		formatString: #,0
		displayFolder: Lock statistics (using io)
		lineageTag: 604c64e8-6e03-4891-9f6a-31d38a3f4a53

	measure 'Row lock count - Lock statistics' =
			
			SUM ( 'Index operational'[RowLockCount] )
		formatString: #,0
		displayFolder: Lock statistics (using io)
		lineageTag: 832e7180-17a0-485e-b52d-7bde8d3784df

	measure 'Row lock wait count - Lock statistics' =
			
			SUM ( 'Index operational'[RowLockWaitCount] )
		formatString: #,0
		displayFolder: Lock statistics (using io)
		lineageTag: 66771445-0302-41f9-864c-feadebe27efc

	measure 'Page lock wait count - Lock statistics' =
			
			SUM ( 'Index operational'[PageLockWaitCount] )
		formatString: #,0
		displayFolder: Lock statistics (using io)
		lineageTag: bcd062bd-142c-48de-91eb-c166d5650b5e

	measure 'Page lock wait in mS - Lock statistics' =
			
			SUM ( 'Index operational'[PageLockWaitInMS] )
		formatString: #,0
		displayFolder: Lock statistics (using io)
		lineageTag: 2207b530-ccab-4a56-ab4e-7d3d23978117

	measure 'Row lock wait in mS - Lock statistics' =
			
			SUM ( 'Index operational'[RowLockWaitInMS] )
		formatString: #,0
		displayFolder: Lock statistics (using io)
		lineageTag: 9c42e853-4b39-448c-bbc9-c8c93a48a6b1

	measure 'VLF - Lock statistics' =
			
			[Page lock count - Lock statistics] + [Page lock wait count - Lock statistics] + [Page lock wait in mS - Lock statistics] + [Row lock count - Lock statistics] + [Row lock wait count - Lock statistics] + [Row lock wait in mS - Lock statistics]
		formatString: 0
		displayFolder: Lock statistics (using io)
		lineageTag: cf3f9dd8-2148-482f-96ea-5a15e4271cd2

	measure 'Is filters applied - Lock statistics' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ) || ISFILTERED ( 'Index'[Schema] )
			        || ISFILTERED ( 'Index'[Object] )
			        || ISFILTERED ( 'Index'[Index] )
			        || ISFILTERED ( 'Date'[Year] )
			        || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Lock statistics (using io)
		lineageTag: bb9b3a92-d7e3-49a6-8fd6-3664c7722ba9

	measure 'Show filters Headers - Lock statistics' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Database] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Index'[Schema] ),
			        "Schema:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Schema] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Object] ),
			        "Object:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Object] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Index] ),
			        "Index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Index] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        "Year:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
		displayFolder: Lock statistics (using io)
		lineageTag: 3d869950-367c-43f8-8286-aecfb5abd885

	measure 'Show filters - Lock statistics' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ),
			    VAR _items =
			        VALUES ( 'Index'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Index'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Index'[Schema] ),
			        VAR _items =
			            VALUES ( 'Index'[Schema] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Schema], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Object] ),
			        VAR _items =
			            VALUES ( 'Index'[Object] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Object], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Index] ),
			        VAR _items =
			            VALUES ( 'Index'[Index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        VAR _items =
			            VALUES ( 'Date'[Year] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Lock statistics (using io)
		lineageTag: 0329a62a-291e-4fd8-bf3a-1054128fc9d8

	measure 'Open filter button tooltip - Lock statistics' =
			
			IF (
			    [Is filters applied - Lock statistics] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Lock statistics (using io)
		lineageTag: f093ad42-08f1-4faa-918e-41b917f809e8

	measure 'Latest day page lock count - Lock statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index operational],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Page lock count - Lock statistics],
			        REMOVEFILTERS ( 'Time' ),
			        'Index operational'[Date] = _date
			    )
			VAR _result =
			    IF ( _latestValue = 0, BLANK (), _latestValue )
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Lock statistics (using io)
		lineageTag: 13600f17-82e7-4fbc-a8d4-876a18050ce6

	measure 'Latest day row lock count - Lock statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index operational],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Row lock count - Lock statistics],
			        REMOVEFILTERS ( 'Time' ),
			        'Index operational'[Date] = _date
			    )
			VAR _result =
			    IF ( _latestValue = 0, BLANK (), _latestValue )
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Lock statistics (using io)
		lineageTag: 3650883c-f730-46b4-b8a9-0bc5695d296b

	measure 'Details matrix title - Lock statistics' =
			
			VAR _latestDate = [Latest date - Index operational]
			VAR _pastDate = [Past date - Index operational]
			VAR _realDatesBackInTime =
			    DATEDIFF ( _pastDate, _latestDate, DAY )
			VAR _realDatesBackInTimeTxt =
			    FORMAT ( _realDatesBackInTime, "#,##0" )
			VAR _latestDateTxt =
			    FORMAT ( _latestDate, [Date format string] ) & " ("
			        & FORMAT ( _latestDate, [Dayname format string] ) & ")"
			VAR _pastDateTxt =
			    FORMAT ( _pastDate, [Date format string] ) & " ("
			        & FORMAT ( _pastDate, [Dayname format string] ) & ")"
			VAR _txt =
			    "Lock data per database"
			        & IF (
			            _latestDate <> BLANK (),
			            " at " & _latestDateTxt & " compared to " & _pastDateTxt & " " & _realDatesBackInTimeTxt & " days ago"
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Lock statistics (using io)
		lineageTag: 05f5b463-d5c0-49a6-bcda-5f3abdaa0037

	measure 'Latest date - Index operational' =
			
			VAR _minDate =
			    CALCULATE ( MIN ( 'Index operational'[Date] ) )
			VAR _nextMinDate =
			    CALCULATE (
			        MIN ( 'Index operational'[Date] ),
			        ALL ( 'Index operational' ),
			        'Index operational'[Date] > _minDate
			    )
			VAR _maxDate =
			    CALCULATE ( MAX ( 'Index operational'[Date] ) )
			VAR _prevMaxDate =
			    CALCULATE (
			        MAX ( 'Index operational'[Date] ),
			        ALL ( 'Index operational' ),
			        'Index operational'[Date] < _maxDate
			    )
			VAR _minSelectedDate =
			    IF (
			        ISFILTERED ( 'Index operational - date boundaries'[Date] ),
			        MINX (
			            ALLSELECTED ( 'Index operational - date boundaries'[Date] ),
			            'Index operational - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _maxSelectedDate =
			    IF (
			        ISFILTERED ( 'Index operational - date boundaries'[Date] ),
			        MAXX (
			            ALLSELECTED ( 'Index operational - date boundaries'[Date] ),
			            'Index operational - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _minBoundaryDate =
			    CALCULATE (
			        MIN ( 'Index operational - date boundaries'[Date] ),
			        ALL ( 'Index operational - date boundaries'[Date] )
			    )
			VAR _maxBoundaryDate =
			    CALCULATE (
			        MAX ( 'Index operational - date boundaries'[Date] ),
			        ALL ( 'Index operational - date boundaries'[Date] )
			    )
			VAR _minDateToUse =
			    IF (
			        _minBoundaryDate < _minDate,
			        _minDate,
			        IF ( _minBoundaryDate = _minSelectedDate, _minDate, _nextMinDate )
			    )
			VAR _maxDateToUse =
			    IF (
			        _maxBoundaryDate > _maxDate,
			        _maxDate,
			        IF ( _maxBoundaryDate = _maxSelectedDate, _maxDate, _prevMaxDate )
			    )
			VAR _dateToUse =
			    IF ( _maxDateToUse < _minDateToUse, BLANK (), _maxDateToUse )
			VAR _result = _dateToUse
			RETURN
			    _result
		formatString: General Date
		displayFolder: Index operational (io)
		lineageTag: f9c677ac-3e12-4c13-a7c6-7fa171a096b8

	measure 'Past date - Index operational' =
			
			VAR _daysBackInTime =
			    SELECTEDVALUE ( Tally1[Value] )
			VAR _latestDate = [Latest date - Index operational]
			VAR _minSelectedDate =
			    IF (
			        ISFILTERED ( 'Index operational - date boundaries'[Date] ),
			        MINX (
			            ALLSELECTED ( 'Index operational - date boundaries'[Date] ),
			            'Index operational - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _minBoundaryDate =
			    CALCULATE (
			        MIN ( 'Index operational - date boundaries'[Date] ),
			        ALL ( 'Index operational - date boundaries'[Date] )
			    )
			VAR _minDateToUse =
			    IF (
			        _minBoundaryDate = _minSelectedDate,
			        _minBoundaryDate,
			        _minBoundaryDate + 1
			    )
			VAR _compareDate = _latestDate - _daysBackInTime
			VAR _compareDateWithDataFound =
			    CALCULATE (
			        MIN ( 'Index operational'[Date] ),
			        REMOVEFILTERS ( 'Date'[Date] ),
			        REMOVEFILTERS ( 'Index' ),
			        'Index operational'[Date] >= _compareDate
			            && 'Index operational'[Date] >= _minDateToUse
			    )
			VAR _compareDateChecked =
			    IF (
			        _compareDateWithDataFound > _latestDate,
			        _latestDate,
			        _compareDateWithDataFound
			    )
			VAR _result = _compareDateChecked
			RETURN
			    _result
		formatString: General Date
		displayFolder: Index operational (io)
		lineageTag: 2003a148-8318-4874-9d8f-08cbdc8066d3

	measure 'Number of page locks ratio of total - Lock statistics' =
			
			VAR _count = [Latest day page lock count - Lock statistics]
			VAR _totalCount =
			    CALCULATE (
			        [Latest day page lock count - Lock statistics],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _ratio =
			    DIVIDE ( _count, _totalCount )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Lock statistics (using io)
		lineageTag: ae27c09a-5a5c-4db2-ba76-a6515488c72e

	measure 'Number of row locks ratio of total - Lock statistics' =
			
			VAR _count = [Latest day row lock count - Lock statistics]
			VAR _totalCount =
			    CALCULATE (
			        [Latest day row lock count - Lock statistics],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _ratio =
			    DIVIDE ( _count, _totalCount )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: 0.00\ %;-0.00\ %;0.00\ %
		displayFolder: Lock statistics (using io)
		lineageTag: b8aa40e4-4ef1-468e-ba80-24d09ef3273d

	measure 'Past day page lock count - Lock statistics' =
			
			VAR _pastDate = [Past date - Index operational]
			VAR _pastValue =
			    CALCULATE (
			        [Page lock count - Lock statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index operational'[Date] = _pastDate
			    )
			VAR _result = IF ( _pastValue = 0, BLANK (), _pastValue )
			RETURN
			    _result
		formatString: #,0
		displayFolder: Lock statistics (using io)
		lineageTag: 3a5490fe-d6d4-4455-867b-409fa19e0615

	measure 'Past day row lock count - Lock statistics' =
			
			VAR _pastDate = [Past date - Index operational]
			VAR _pastValue =
			    CALCULATE (
			        [Row lock count - Lock statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index operational'[Date] = _pastDate
			    )
			VAR _result = IF ( _pastValue = 0, BLANK (), _pastValue )
			RETURN
			    _result
		formatString: #,0
		displayFolder: Lock statistics (using io)
		lineageTag: 42afb424-bf57-4bb2-956a-5e3dec5d1d4c

	measure 'Number of page locks ratio since past - Lock statistics' =
			
			VAR _currentValue = [Latest day page lock count - Lock statistics]
			VAR _pastValue = [Past day page lock count - Lock statistics]
			VAR _ratio =
			    IF (
			        _pastValue = BLANK ()
			            || _currentValue = BLANK (),
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Lock statistics (using io)
		lineageTag: b9950d08-8433-4845-ae45-404f55be3ccc

	measure 'Number of row locks ratio since past - Lock statistics' =
			
			VAR _currentValue = [Latest day row lock count - Lock statistics]
			VAR _pastValue = [Past day row lock count - Lock statistics]
			VAR _ratio =
			    IF (
			        _pastValue = BLANK ()
			            || _currentValue = BLANK (),
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Lock statistics (using io)
		lineageTag: 2c28d296-eeef-4dbb-a216-3dde75e2deee

	measure 'Latest day row lock wait in mS - Lock statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index operational],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Row lock wait in mS - Lock statistics],
			        REMOVEFILTERS ( 'Time' ),
			        'Index operational'[Date] = _date
			    )
			VAR _result =
			    IF ( _latestValue = 0, BLANK (), _latestValue )
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Lock statistics (using io)
		lineageTag: 81f28ea7-635b-48ff-acd4-7d134c8c1bfa

	measure 'Latest day page lock wait in mS - Lock statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index operational],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Page lock wait in mS - Lock statistics],
			        REMOVEFILTERS ( 'Time' ),
			        'Index operational'[Date] = _date
			    )
			VAR _result =
			    IF ( _latestValue = 0, BLANK (), _latestValue )
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Lock statistics (using io)
		lineageTag: d7d41520-9cdf-45da-bd5e-e6e5795832da

	measure 'Past day row lock wait in mS - Lock statistics' =
			
			VAR _pastDate = [Past date - Index operational]
			VAR _pastValue =
			    CALCULATE (
			        [Row lock wait in mS - Lock statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index operational'[Date] = _pastDate
			    )
			VAR _result = IF ( _pastValue = 0, BLANK (), _pastValue )
			RETURN
			    _result
		formatString: #,0
		displayFolder: Lock statistics (using io)
		lineageTag: 99d83b00-78a9-47eb-a8dc-1e796e9eab39

	measure 'Past day page lock wait in mS - Lock statistics' =
			
			VAR _pastDate = [Past date - Index operational]
			VAR _pastValue =
			    CALCULATE (
			        [Page lock wait in mS - Lock statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index operational'[Date] = _pastDate
			    )
			VAR _result = IF ( _pastValue = 0, BLANK (), _pastValue )
			RETURN
			    _result
		formatString: #,0
		displayFolder: Lock statistics (using io)
		lineageTag: ac8d7a87-6d74-43e3-b4b9-9585c030cd35

	measure 'Signal wait time mS - Wait statistics' =
			
			SUM ( 'Wait statistics'[SignalWaitTimeMS] )
		formatString: #,0
		displayFolder: Wait statistics
		lineageTag: 84af4b39-ca89-4ea0-a316-b197ec11defb

	measure 'Wait time mS - Wait statistics' =
			
			SUM ( 'Wait statistics'[WaitTimeMS] )
		formatString: #,0
		displayFolder: Wait statistics
		lineageTag: ca6157d1-e1c1-4acd-8ce9-1fe0d4c9b6d5

	measure 'Waiting tasks - Wait statistics' =
			
			SUM ( 'Wait statistics'[WaitingTasks] )
		formatString: #,0
		displayFolder: Wait statistics
		lineageTag: 3dcba7ca-7730-4e30-9e47-de0ca6357d02

	measure 'Show filters - Wait statistics' =
			
			IF (
			    ISFILTERED ( 'Wait type'[Wait type] ),
			    VAR _items =
			        VALUES ( 'Wait type'[Wait type] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Wait type'[Wait type], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        VAR _items =
			            VALUES ( 'Date'[Year] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Wait statistics
		lineageTag: 02be0f7d-8401-48ed-93ad-b1585cff9597

	measure 'Show filters Headers - Wait statistics' =
			
			IF (
			    ISFILTERED ( 'Wait type'[Wait type] ),
			    "Wait type:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Wait type'[Wait type] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        "Year:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
		displayFolder: Wait statistics
		lineageTag: c26691ee-af5f-47d1-8e87-a2af34d3ac11

	measure 'Is filters applied - Wait statistics' =
			
			IF (
			    ISFILTERED ( 'Wait type'[Wait type] ) || ISFILTERED ( 'Date'[Year] )
			        || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Wait statistics
		lineageTag: 60e65f7e-3cdb-429b-aa25-7cbbe7f1ae7c

	measure 'Open filter button tooltip - Wait statistics' =
			
			IF (
			    [Is filters applied - Wait statistics] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Wait statistics
		lineageTag: a02ecb55-9d6e-4555-a1b8-9c9ace05712c

	measure 'Latest date - Wait statistics' =
			
			VAR _minDate =
			    CALCULATE ( MIN ( 'Wait statistics'[Date] ) )
			VAR _nextMinDate =
			    CALCULATE (
			        MIN ( 'Wait statistics'[Date] ),
			        ALL ( 'Wait statistics' ),
			        'Wait statistics'[Date] > _minDate
			    )
			VAR _maxDate =
			    CALCULATE ( MAX ( 'Wait statistics'[Date] ) )
			VAR _prevMaxDate =
			    CALCULATE (
			        MAX ( 'Wait statistics'[Date] ),
			        ALL ( 'Wait statistics' ),
			        'Wait statistics'[Date] < _maxDate
			    )
			VAR _minSelectedDate =
			    IF (
			        ISFILTERED ( 'Wait statistics - date boundaries'[Date] ),
			        MINX (
			            ALLSELECTED ( 'Wait statistics - date boundaries'[Date] ),
			            'Wait statistics - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _maxSelectedDate =
			    IF (
			        ISFILTERED ( 'Wait statistics - date boundaries'[Date] ),
			        MAXX (
			            ALLSELECTED ( 'Wait statistics - date boundaries'[Date] ),
			            'Wait statistics - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _minBoundaryDate =
			    CALCULATE (
			        MIN ( 'Wait statistics - date boundaries'[Date] ),
			        ALL ( 'Wait statistics - date boundaries'[Date] )
			    )
			VAR _maxBoundaryDate =
			    CALCULATE (
			        MAX ( 'Wait statistics - date boundaries'[Date] ),
			        ALL ( 'Wait statistics - date boundaries'[Date] )
			    )
			VAR _minDateToUse =
			    IF (
			        _minBoundaryDate < _minDate,
			        _minDate,
			        IF ( _minBoundaryDate = _minSelectedDate, _minDate, _nextMinDate )
			    )
			VAR _maxDateToUse =
			    IF (
			        _maxBoundaryDate > _maxDate,
			        _maxDate,
			        IF ( _maxBoundaryDate = _maxSelectedDate, _maxDate, _prevMaxDate )
			    )
			VAR _dateToUse =
			    IF ( _maxDateToUse < _minDateToUse, BLANK (), _maxDateToUse )
			VAR _result = _dateToUse
			RETURN
			    _result
		formatString: General Date
		displayFolder: Wait statistics
		lineageTag: d143d00d-edb5-4b06-af11-85c07a1fdde6

	measure 'Past date - Wait statistics' =
			
			VAR _daysBackInTime =
			    SELECTEDVALUE ( Tally1[Value] )
			VAR _latestDate = [Latest date - Wait statistics]
			VAR _minSelectedDate =
			    IF (
			        ISFILTERED ( 'Wait statistics - date boundaries'[Date] ),
			        MINX (
			            ALLSELECTED ( 'Wait statistics - date boundaries'[Date] ),
			            'Wait statistics - date boundaries'[Date]
			        ),
			        BLANK ()
			    )
			VAR _minBoundaryDate =
			    CALCULATE (
			        MIN ( 'Wait statistics - date boundaries'[Date] ),
			        ALL ( 'Wait statistics - date boundaries'[Date] )
			    )
			VAR _minDateToUse =
			    IF (
			        _minBoundaryDate = _minSelectedDate,
			        _minBoundaryDate,
			        _minBoundaryDate + 1
			    )
			VAR _compareDate = _latestDate - _daysBackInTime
			VAR _compareDateWithDataFound =
			    CALCULATE (
			        MIN ( 'Wait statistics'[Date] ),
			        REMOVEFILTERS ( 'Date'[Date] ),
			        REMOVEFILTERS ( 'Wait type' ),
			        'Wait statistics'[Date] >= _compareDate
			            && 'Wait statistics'[Date] >= _minDateToUse
			    )
			VAR _compareDateChecked =
			    IF (
			        _compareDateWithDataFound > _latestDate,
			        _latestDate,
			        _compareDateWithDataFound
			    )
			VAR _result = _compareDateChecked
			RETURN
			    _result
		formatString: General Date
		displayFolder: Wait statistics
		lineageTag: 74956f1c-c994-411a-8fc8-44b21d33c644

	measure 'Latest day signal wait time mS - Wait statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Wait statistics],
			        REMOVEFILTERS ( 'Wait type' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Signal wait time mS - Wait statistics],
			        REMOVEFILTERS ( 'Time' ),
			        'Wait statistics'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Wait statistics
		lineageTag: 4028dde9-1c3b-4751-8ef0-1315edc76c81

	measure 'Latest day wait time mS - Wait statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Wait statistics],
			        REMOVEFILTERS ( 'Wait type' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Wait time mS - Wait statistics],
			        REMOVEFILTERS ( 'Time' ),
			        'Wait statistics'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Wait statistics
		lineageTag: 1e29ba38-6bf3-4322-aa06-26edd3dfd0d4

	measure 'Latest day waiting tasks - Wait statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Wait statistics],
			        REMOVEFILTERS ( 'Wait type' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Waiting tasks - Wait statistics],
			        REMOVEFILTERS ( 'Time' ),
			        'Wait statistics'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Wait statistics
		lineageTag: 5a16acfe-ba04-480d-a211-7d4c4f7ab4e7

	measure 'Past day signal wait time mS - Wait statistics' =
			
			VAR _pastDate = [Past date - Wait statistics]
			VAR _pastValue =
			    CALCULATE (
			        [Signal wait time mS - Wait statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Wait statistics'[Date] = _pastDate
			    )
			VAR _result = _pastValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Wait statistics
		lineageTag: e578c9a7-99e0-41ba-aae2-b407a6dd9106

	measure 'Past day wait time mS - Wait statistics' =
			
			VAR _pastDate = [Past date - Wait statistics]
			VAR _pastValue =
			    CALCULATE (
			        [Wait time mS - Wait statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Wait statistics'[Date] = _pastDate
			    )
			VAR _result = _pastValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Wait statistics
		lineageTag: c1c2c796-53fa-43d6-b373-7c462d475962

	measure 'Past day waiting tasks - Wait statistics' =
			
			VAR _pastDate = [Past date - Wait statistics]
			VAR _pastValue =
			    CALCULATE (
			        [Waiting tasks - Wait statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Wait statistics'[Date] = _pastDate
			    )
			VAR _result = _pastValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Wait statistics
		lineageTag: 27f786d5-3a34-4673-827f-02bb8ebb5b88

	measure 'Signal wait time mS ratio of total - Wait statistics' =
			
			VAR _size = [Latest day signal wait time mS - Wait statistics]
			VAR _totalSize =
			    CALCULATE (
			        [Latest day signal wait time mS - Wait statistics],
			        REMOVEFILTERS ( 'Wait type' )
			    )
			VAR _ratio =
			    DIVIDE ( _size, _totalSize )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: 0.00\ %;-0.00\ %;0.00\ %
		displayFolder: Wait statistics
		lineageTag: e6aa6f95-dd2c-49e5-8e6b-39a7a49d8b48

	measure 'Wait time mS ratio of total - Wait statistics' =
			
			VAR _size = [Latest day wait time mS - Wait statistics]
			VAR _totalSize =
			    CALCULATE (
			        [Latest day wait time mS - Wait statistics],
			        REMOVEFILTERS ( 'Wait type' )
			    )
			VAR _ratio =
			    DIVIDE ( _size, _totalSize )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Wait statistics
		lineageTag: 6030c054-1473-4b1d-9125-7797ff4c559b

	measure 'Waiting tasks ratio of total - Wait statistics' =
			
			VAR _size = [Latest day waiting tasks - Wait statistics]
			VAR _totalSize =
			    CALCULATE (
			        [Latest day waiting tasks - Wait statistics],
			        REMOVEFILTERS ( 'Wait type' )
			    )
			VAR _ratio =
			    DIVIDE ( _size, _totalSize )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Wait statistics
		lineageTag: 8578e11b-845f-4cb9-9f4c-22c18381b1e1

	measure 'Wait time mS ratio since past - Wait statistics' =
			
			VAR _currentValue = [Latest day wait time mS - Wait statistics]
			VAR _pastValue = [Past day wait time mS - Wait statistics]
			VAR _ratio =
			    IF (
			        _pastValue = BLANK ()
			            || _currentValue = BLANK (),
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Wait statistics
		lineageTag: 1a39f9eb-22bc-4260-a97b-f6d7b32afaf3

	measure 'Signal wait time mS ratio since past - Wait statistics' =
			
			VAR _currentValue = [Latest day signal wait time mS - Wait statistics]
			VAR _pastValue = [Past day signal wait time mS - Wait statistics]
			VAR _ratio =
			    IF (
			        _pastValue = BLANK ()
			            || _currentValue = BLANK (),
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Wait statistics
		lineageTag: 1aca4506-de6a-4892-a41f-e88ce0186f3e

	measure 'Waiting tasks ratio since past - Wait statistics' =
			
			VAR _currentValue = [Latest day waiting tasks - Wait statistics]
			VAR _pastValue = [Past day waiting tasks - Wait statistics]
			VAR _ratio =
			    IF (
			        _pastValue = BLANK ()
			            || _currentValue = BLANK (),
			        BLANK (),
			        DIVIDE ( _currentValue - _pastValue, _pastValue )
			    )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Wait statistics
		lineageTag: a183741e-dd48-461f-a679-9b2c37cadb37

	measure 'Details title - Wait statistics' =
			
			VAR _latestDate = [Latest date - Wait statistics]
			VAR _pastDate = [Past date - Wait statistics]
			VAR _realDatesBackInTime =
			    DATEDIFF ( _pastDate, _latestDate, DAY )
			VAR _realDatesBackInTimeTxt =
			    FORMAT ( _realDatesBackInTime, "#,##0" )
			VAR _latestDateTxt =
			    FORMAT ( _latestDate, [Date format string] ) & " ("
			        & FORMAT ( _latestDate, [Dayname format string] ) & ")"
			VAR _pastDateTxt =
			    FORMAT ( _pastDate, [Date format string] ) & " ("
			        & FORMAT ( _pastDate, [Dayname format string] ) & ")"
			VAR _txt =
			    "Wait statistics per wait type"
			        & IF (
			            _latestDate <> BLANK (),
			            " at " & _latestDateTxt & " compared to " & _pastDateTxt & " " & _realDatesBackInTimeTxt & " days ago"
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Wait statistics
		lineageTag: 0d528e76-1ee6-4463-be9b-161d6e491979

	measure 'Leaf allocation count - Index leaf statistics' =
			
			SUM ( 'Index operational'[LeafAllocationCount] )
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 86ee0cb7-5176-4f31-b5d5-d2bf2d777468

	measure 'Leaf delete count - Index leaf statistics' =
			
			SUM ( 'Index operational'[LeafDeleteCount] )
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 5f25f038-07a8-426b-97d9-66f722cc5b8d

	measure 'Leaf ghost count - Index leaf statistics' =
			
			SUM ( 'Index operational'[LeafGhostCount] )
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 3d823cfb-0181-496f-9c27-d42613a8e75a

	measure 'Leaf insert count - Index leaf statistics' =
			
			SUM ( 'Index operational'[LeafInsertCount] )
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 0ab8babc-8179-405c-9093-0efaa5e35e99

	measure 'Leaf page merge count - Index leaf statistics' =
			
			SUM ( 'Index operational'[LeafPageMergeCount] )
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 004d1e19-0276-4946-a055-3665a799cda9

	measure 'Leaf update count - Index leaf statistics' =
			
			SUM ( 'Index operational'[LeafUpdateCount] )
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: eebfe030-85e9-4a19-b99f-c8de026b2396

	measure 'Nonleaf allocation count - Index leaf statistics' =
			
			SUM ( 'Index operational'[NonleafAllocationCount] )
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 5e163f50-0e17-4902-9d03-e362711144ab

	measure 'Nonleaf delete count - Index leaf statistics' =
			
			SUM ( 'Index operational'[NonleafDeleteCount] )
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 6bfe7090-7a8c-4252-9f33-076db9703371

	measure 'Nonleaf insert count - Index leaf statistics' =
			
			SUM ( 'Index operational'[NonleafInsertCount] )
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 4f97dd06-bcfd-4d85-81c2-fbb82b6c8c9f

	measure 'Nonleaf page merge count - Index leaf statistics' =
			
			SUM ( 'Index operational'[NonleafPageMergeCount] )
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: a237511e-34a9-4a07-a55e-e4f1657b4bbd

	measure 'Nonleaf update count - Index leaf statistics' =
			
			SUM ( 'Index operational'[NonleafUpdateCount] )
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 340fdbb0-0627-4517-a3a3-5f3d6bece17f

	measure 'Details nonleaf matrix title - Index leaf statistics' =
			
			VAR _latestDate = [Latest date - Index operational]
			VAR _pastDate = [Past date - Index operational]
			VAR _realDatesBackInTime =
			    DATEDIFF ( _pastDate, _latestDate, DAY ) + 1
			VAR _realDatesBackInTimeTxt =
			    FORMAT ( _realDatesBackInTime, "#,##0" )
			VAR _latestDateTxt =
			    FORMAT ( _latestDate, [Date format string] ) & " ("
			        & FORMAT ( _latestDate, [Dayname format string] ) & ")"
			VAR _pastDateTxt =
			    FORMAT ( _pastDate, [Date format string] ) & " ("
			        & FORMAT ( _pastDate, [Dayname format string] ) & ")"
			VAR _txt =
			    "Nonleaf data"
			        & IF (
			            _latestDate <> BLANK (),
			            " for " & _latestDateTxt & " with total including from " & _pastDateTxt & " - " & _realDatesBackInTimeTxt & " days"
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Index leaf statistics (using io)
		lineageTag: 22c36e72-f646-4da1-8d0b-4bb199060e18

	measure 'Details leaf matrix title - Index leaf statistics' =
			
			VAR _latestDate = [Latest date - Index operational]
			VAR _pastDate = [Past date - Index operational]
			VAR _realDatesBackInTime =
			    DATEDIFF ( _pastDate, _latestDate, DAY ) + 1
			VAR _realDatesBackInTimeTxt =
			    FORMAT ( _realDatesBackInTime, "#,##0" )
			VAR _latestDateTxt =
			    FORMAT ( _latestDate, [Date format string] ) & " ("
			        & FORMAT ( _latestDate, [Dayname format string] ) & ")"
			VAR _pastDateTxt =
			    FORMAT ( _pastDate, [Date format string] ) & " ("
			        & FORMAT ( _pastDate, [Dayname format string] ) & ")"
			VAR _txt =
			    "Leaf data"
			        & IF (
			            _latestDate <> BLANK (),
			            " for " & _latestDateTxt & " with total including from " & _pastDateTxt & " - " & _realDatesBackInTimeTxt & " days"
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Index leaf statistics (using io)
		lineageTag: da2a1a10-6653-41d1-8d2d-973e9ce25cf1

	measure 'VLF - Index leaf statistics' =
			
			[Leaf allocation count - Index leaf statistics] + [Leaf delete count - Index leaf statistics] + [Leaf ghost count - Index leaf statistics] + [Leaf insert count - Index leaf statistics] + [Leaf page merge count - Index leaf statistics] + [Leaf update count - Index leaf statistics] + [Nonleaf allocation count - Index leaf statistics] + [Nonleaf delete count - Index leaf statistics] + [Nonleaf insert count - Index leaf statistics] + [Nonleaf page merge count - Index leaf statistics] + [Nonleaf update count - Index leaf statistics]
		formatString: 0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 8dfff28d-4c6d-435d-a963-540e201f71a4

	measure 'Is filters applied - Index leaf statistics' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ) || ISFILTERED ( 'Index'[Schema] )
			        || ISFILTERED ( 'Index'[Object] )
			        || ISFILTERED ( 'Index'[Index] )
			        || ISFILTERED ( 'Date'[Year] )
			        || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 9e4f6983-6628-4197-a8bc-68497b9c9921

	measure 'Open filter button tooltip - Index leaf statistics' =
			
			IF (
			    [Is filters applied - Index leaf statistics] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Index leaf statistics (using io)
		lineageTag: bc5dedd3-5e9e-413f-a1dd-ca28e29ccda1

	measure 'Show filters - Index leaf statistics' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ),
			    VAR _items =
			        VALUES ( 'Index'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Index'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Index'[Schema] ),
			        VAR _items =
			            VALUES ( 'Index'[Schema] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Schema], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Object] ),
			        VAR _items =
			            VALUES ( 'Index'[Object] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Object], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Index] ),
			        VAR _items =
			            VALUES ( 'Index'[Index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        VAR _items =
			            VALUES ( 'Date'[Year] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Index leaf statistics (using io)
		lineageTag: 68084c27-0127-45d2-91da-4de0604c9a82

	measure 'Show filters Headers - Index leaf statistics' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Database] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Index'[Schema] ),
			        "Schema:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Schema] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Object] ),
			        "Object:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Object] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Index] ),
			        "Index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Index] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        "Year:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
		displayFolder: Index leaf statistics (using io)
		lineageTag: 09c18538-8067-4061-ac4d-ddc5356176eb

	measure 'Latest nonleaf allocation count - Index leaf statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index operational],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Nonleaf allocation count - Index leaf statistics],
			        'Index operational'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 21bcacd2-ccec-4fdd-b5bb-b6523106667c

	measure 'Latest nonleaf delete count - Index leaf statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index operational],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Nonleaf delete count - Index leaf statistics],
			        'Index operational'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: c72677f3-5a45-466c-bc30-65ec9f54d64f

	measure 'Latest nonleaf insert count - Index leaf statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index operational],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Nonleaf insert count - Index leaf statistics],
			        'Index operational'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: cf57f5a6-9b8b-4775-8ceb-febd8d7dd2a2

	measure 'Latest nonleaf page merge count - Index leaf statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index operational],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Nonleaf page merge count - Index leaf statistics],
			        'Index operational'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 9b77e552-6f61-49b0-a821-3ae7cd02d118

	measure 'Latest nonleaf update count - Index leaf statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index operational],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Nonleaf update count - Index leaf statistics],
			        'Index operational'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: f9a4d936-b38e-44e2-a661-9ae36dd03759

	measure 'Latest leaf allocation count - Index leaf statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index operational],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Leaf allocation count - Index leaf statistics],
			        'Index operational'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 68e0987a-7326-47dc-a526-14654149c136

	measure 'Latest leaf delete count - Index leaf statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index operational],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Leaf delete count - Index leaf statistics],
			        'Index operational'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 4d422978-c43c-43a1-901e-273e6f11a3f8

	measure 'Latest leaf ghost count - Index leaf statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index operational],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Leaf ghost count - Index leaf statistics],
			        'Index operational'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 5d225215-4f45-4994-b6c4-ac2790fbadcf

	measure 'Latest leaf insert count - Index leaf statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index operational],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Leaf insert count - Index leaf statistics],
			        'Index operational'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 0f213e06-6afd-4aae-8c78-17503e7b5c7c

	measure 'Latest leaf page merge count - Index leaf statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index operational],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Leaf page merge count - Index leaf statistics],
			        'Index operational'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 918377e0-ddca-4b19-b8fb-4b8899fb12c0

	measure 'Latest leaf update count - Index leaf statistics' = ```
			
			VAR _date = 
			    CALCULATE (
			        [Latest date - Index operational],
			        REMOVEFILTERS ( 'Index' )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Leaf update count - Index leaf statistics],
			        'Index operational'[Date] = _date
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			```
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 4a65bcef-32df-4a13-b86d-882ceb5a69c6

	measure 'Nonleaf allocation count in period - Index leaf statistics' =
			
			VAR _maxDate = [Latest date - Index operational]
			VAR _pastDate = [Past date - Index operational]
			VAR _totalValue =
			    CALCULATE (
			        [Nonleaf allocation count - Index leaf statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index operational'[Date] >= _pastDate
			            && 'Index operational'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: e3cfae57-c775-4150-935c-a13bce8954fd

	measure 'Nonleaf delete count in period - Index leaf statistics' =
			
			VAR _maxDate = [Latest date - Index operational]
			VAR _pastDate = [Past date - Index operational]
			VAR _totalValue =
			    CALCULATE (
			        [Nonleaf delete count - Index leaf statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index operational'[Date] >= _pastDate
			            && 'Index operational'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 0259abf6-8756-445a-9af6-3ca3c4762a6f

	measure 'Nonleaf insert count in period - Index leaf statistics' =
			
			VAR _maxDate = [Latest date - Index operational]
			VAR _pastDate = [Past date - Index operational]
			VAR _totalValue =
			    CALCULATE (
			        [Nonleaf insert count - Index leaf statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index operational'[Date] >= _pastDate
			            && 'Index operational'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 36109da9-7cfa-425b-a62a-7a7eb4e1cd28

	measure 'Nonleaf page merge count in period - Index leaf statistics' =
			
			VAR _maxDate = [Latest date - Index operational]
			VAR _pastDate = [Past date - Index operational]
			VAR _totalValue =
			    CALCULATE (
			        [Nonleaf page merge count - Index leaf statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index operational'[Date] >= _pastDate
			            && 'Index operational'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 6e87c98d-0708-4614-95e2-b07d27120ff1

	measure 'Nonleaf update count in period - Index leaf statistics' =
			
			VAR _maxDate = [Latest date - Index operational]
			VAR _pastDate = [Past date - Index operational]
			VAR _totalValue =
			    CALCULATE (
			        [Nonleaf update count - Index leaf statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index operational'[Date] >= _pastDate
			            && 'Index operational'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: a50e7da3-df40-408e-9108-3809128c1b37

	measure 'Leaf allocation count in period - Index leaf statistics' =
			
			VAR _maxDate = [Latest date - Index operational]
			VAR _pastDate = [Past date - Index operational]
			VAR _totalValue =
			    CALCULATE (
			        [Leaf allocation count - Index leaf statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index operational'[Date] >= _pastDate
			            && 'Index operational'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 504a483e-938a-4a70-86dd-599db2e9d75b

	measure 'Leaf delete count in period - Index leaf statistics' =
			
			VAR _maxDate = [Latest date - Index operational]
			VAR _pastDate = [Past date - Index operational]
			VAR _totalValue =
			    CALCULATE (
			        [Leaf delete count - Index leaf statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index operational'[Date] >= _pastDate
			            && 'Index operational'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 8db907fb-9e91-49c7-b234-ab78126a4e67

	measure 'Leaf ghost count in period - Index leaf statistics' =
			
			VAR _maxDate = [Latest date - Index operational]
			VAR _pastDate = [Past date - Index operational]
			VAR _totalValue =
			    CALCULATE (
			        [Leaf ghost count - Index leaf statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index operational'[Date] >= _pastDate
			            && 'Index operational'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: c8ebeff4-ad0e-40bc-af60-5700f145eb9d

	measure 'Leaf insert count in period - Index leaf statistics' =
			
			VAR _maxDate = [Latest date - Index operational]
			VAR _pastDate = [Past date - Index operational]
			VAR _totalValue =
			    CALCULATE (
			        [Leaf insert count - Index leaf statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index operational'[Date] >= _pastDate
			            && 'Index operational'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 8fe9902c-e968-4d72-87c5-2c2d22b7f429

	measure 'Leaf page merge count in period - Index leaf statistics' =
			
			VAR _maxDate = [Latest date - Index operational]
			VAR _pastDate = [Past date - Index operational]
			VAR _totalValue =
			    CALCULATE (
			        [Leaf page merge count - Index leaf statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index operational'[Date] >= _pastDate
			            && 'Index operational'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: 23b3518e-a96c-47d0-955a-d67a8e279188

	measure 'Leaf update count in period - Index leaf statistics' =
			
			VAR _maxDate = [Latest date - Index operational]
			VAR _pastDate = [Past date - Index operational]
			VAR _totalValue =
			    CALCULATE (
			        [Leaf update count - Index leaf statistics],
			        REMOVEFILTERS ( 'Date'[Date] ),
			        'Index operational'[Date] >= _pastDate
			            && 'Index operational'[Date] <= _maxDate
			    )
			VAR _result = _totalValue
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index leaf statistics (using io)
		lineageTag: bc5423f3-04c4-4cdc-ad38-8f95a66dad21

	measure 'Avg. Plan cache size MB - Plan cache usage' =
			
			AVERAGE ( 'Plan cache usage'[CacheSize_MB] )
		formatString: #,0.00
		displayFolder: Plan cache usage
		lineageTag: b62ac8f0-9a03-439a-aadd-dfb39e8f0cee

	measure 'Logical reads - Query statistics' =
			
			CALCULATE (
			    SUM ( 'Query statistics'[LogicalReads] ),
			    CROSSFILTER ( 'Query statements'[QueryStatisticKey], 'Query statistic'[QueryStatisticKey], BOTH )
			)
		formatString: #,0
		displayFolder: Query statistics
		lineageTag: 688faddf-c422-4df7-b203-215e738aad53

	measure 'Worker time mS - Query statistics' =
			
			CALCULATE (
			    SUM ( 'Query statistics'[WorkerTimeMS] ),
			    CROSSFILTER ( 'Query statements'[QueryStatisticKey], 'Query statistic'[QueryStatisticKey], BOTH )
			)
		formatString: #,0
		displayFolder: Query statistics
		lineageTag: 49439dd7-c76d-4625-94d9-6d9ed0c1681d

	measure 'Execution count - Query statistics' =
			
			CALCULATE (
			    SUM ( 'Query statistics'[ExecutionCount] ),
			    CROSSFILTER ( 'Query statements'[QueryStatisticKey], 'Query statistic'[QueryStatisticKey], BOTH )
			)
		formatString: #,0
		displayFolder: Query statistics
		lineageTag: 3c338ff8-5735-4e20-9666-db37114ec8af

	measure 'Elapsed time mS - Query statistics' =
			
			CALCULATE (
			    SUM ( 'Query statistics'[ElapsedTimeMS] ),
			    CROSSFILTER ( 'Query statements'[QueryStatisticKey], 'Query statistic'[QueryStatisticKey], BOTH )
			)
		formatString: #,0
		displayFolder: Query statistics
		lineageTag: fc12739c-4c90-4a54-83ed-7ee29255898a

	measure 'Show filters Headers - Query statistics' =
			
			IF (
			    ISFILTERED ( 'Query statistic'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Query statistic'[Database] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Query statements'[Statement] ),
			        "Schema:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Query statements'[Statement] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        "Year:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
		displayFolder: Query statistics
		lineageTag: 58ba8ec6-4dcd-46a6-a5e2-30529c970bc7

	measure 'Show filters - Query statistics' =
			
			IF (
			    ISFILTERED ( 'Query statistic'[Database] ),
			    VAR _items =
			        VALUES ( 'Query statistic'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Query statistic'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Query statements'[Statement] ),
			        VAR _items =
			            VALUES ( 'Query statements'[Statement] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Query statements'[Statement], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        VAR _items =
			            VALUES ( 'Date'[Year] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Query statistics
		lineageTag: 2353e087-754c-4c62-8428-92df29f5a203

	measure 'Is filters applied - Query statistics' =
			
			IF (
			    ISFILTERED ( 'Query statistic'[Database] )
			        || ISFILTERED ( 'Query statements'[Statement] )
			        || ISFILTERED ( 'Date'[Year] )
			        || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Query statistics
		lineageTag: 1c804bef-8fdb-4cbe-9e27-b8ff5071eb38

	measure 'Open filter button tooltip - Query statistics' =
			
			IF (
			    [Is filters applied - Query statistics] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Query statistics
		lineageTag: 2a0d9e51-3181-4259-b82e-248863d120e1

	measure 'All logs title - Monitor status' =
			
			VAR _minDataDate =
			    MIN ( 'Log'[Timestamp UTC] )
			VAR _maxDataDate =
			    MAX ( 'Log'[Timestamp UTC] )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    "Monitor logs"
			        & IF (
			            _minDataDate <> BLANK (),
			            " between " & _minDataDateTxt & " (UTC) and " & _maxDataDateTxt & " (UTC)"
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Monitor status
		lineageTag: 726389d1-5dfd-4698-a473-0dbc9b4e181b

	measure 'All non-info logs title - Monitor status' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Log'[Timestamp UTC] ), ALL ( 'Log'[Type] ) )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Log'[Timestamp UTC] ), ALL ( 'Log'[Type] ) )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    "Monitor non debug and info logs"
			        & IF (
			            _minDataDate <> BLANK (),
			            " between " & _minDataDateTxt & " (UTC) and " & _maxDataDateTxt & " (UTC)"
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Monitor status
		lineageTag: 866ec9d1-3059-4786-ab96-16352797f900

	measure 'Rows sampled ratio - Statistics age' =
			
			DIVIDE (
			    [Rows sampled - Statistics age],
			    [Rows - Statistics age]
			)
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Statistics\Statistics age
		lineageTag: 2f469682-2ce0-4991-ac9f-37e965ca1593

	measure 'Last rows - Statistics age' =
			
			CALCULATE (
			    MAX ( 'Table size'[Rows] ),
			    FILTER ( 'Table size', 'Table size'[Date] = MAX ( 'Table size'[Date] ) ),
			    CROSSFILTER ( 'Statistics age'[ObjectKey], Object[ObjectKey], BOTH )
			)
		formatString: #,0
		displayFolder: Statistics\Statistics age
		lineageTag: b5728c1f-41c7-49c7-bf90-13887a31bd7d

	measure 'Rows sampled ratio - Statistics age incremental' =
			
			DIVIDE (
			    [Rows sampled - Statistics age incremental],
			    [Rows - Statistics age incremental]
			)
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Statistics\Statistics age incremental
		lineageTag: c0c4491b-4265-4f23-a9b1-460dd49b4711

	measure 'Last rows - Statistics age incremental' =
			
			CALCULATE (
			    MAX ( 'Table size'[Rows] ),
			    FILTER ( 'Table size', 'Table size'[Date] = MAX ( 'Table size'[Date] ) ),
			    CROSSFILTER ( 'Statistics age incremental'[ObjectPartitionKey], 'Object partition'[ObjectPartitionKey], BOTH )
			)
		formatString: #,0
		displayFolder: Statistics\Statistics age incremental
		lineageTag: be1d19dd-7d85-4852-8f91-cdef7678ff84

	measure 'Age filtered - Statistics age' =
			
			VAR _ageLimit =
			    SELECTEDVALUE ( Tally1[Value] )
			VAR _modLimit =
			    SELECTEDVALUE ( 'Values 0-95 (5 delta)'[Value] )
			VAR _rowsLimit =
			    SELECTEDVALUE ( 'Values 0-1000000 (log)'[Value] )
			VAR _age =
			    MAX ( 'Statistics age'[Age] )
			VAR _mod =
			    MAX ( 'Statistics age'[Modification counter] )
			VAR _lastRows = [Last rows - Statistics age]
			VAR _modPct =
			    DIVIDE ( _mod, _lastRows ) * 100
			VAR _value =
			    IF (
			        ( _age >= _ageLimit )
			            && (
			                ( _modPct >= _modLimit )
			                    || ( _lastRows = BLANK () )
			            )
			            && ( _lastRows >= _rowsLimit ),
			        _age
			    )
			VAR _result = _value
			RETURN
			    _value
		formatString: #,0
		displayFolder: Statistics\Statistics age
		lineageTag: 7ea4c070-1e8f-4e27-b98c-02932b53d0e9

	measure 'Age filtered - Statistics age incremental' =
			
			VAR _ageLimit =
			    SELECTEDVALUE ( Tally1[Value] )
			VAR _modLimit =
			    SELECTEDVALUE ( 'Values 0-95 (5 delta)'[Value] )
			VAR _rowsLimit =
			    SELECTEDVALUE ( 'Values 0-1000000 (log)'[Value] )
			VAR _age =
			    MAX ( 'Statistics age incremental'[Age] )
			VAR _mod =
			    MAX ( 'Statistics age incremental'[Modification counter] )
			VAR _lastRows = [Last rows - Statistics age incremental]
			VAR _modPct =
			    DIVIDE ( _mod, _lastRows ) * 100
			VAR _value =
			    IF (
			        ( _age >= _ageLimit )
			            && (
			                ( _modPct >= _modLimit )
			                    || ( _lastRows = BLANK () )
			            )
			            && ( _lastRows >= _rowsLimit ),
			        _age
			    )
			VAR _result = _value
			RETURN
			    _value
		formatString: #,0
		displayFolder: Statistics\Statistics age incremental
		lineageTag: b5af3e00-bcd6-45c6-a994-f98ffa80b16d

	measure 'Show filters - Statistics' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ),
			    VAR _items =
			        VALUES ( 'Index'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Index'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Index'[Schema] ),
			        VAR _items =
			            VALUES ( 'Index'[Schema] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Schema], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Object] ),
			        VAR _items =
			            VALUES ( 'Index'[Object] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Object], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Index] ),
			        VAR _items =
			            VALUES ( 'Index'[Index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Statistics
		lineageTag: ac31080b-f895-4b79-93ad-1d2c39373299

	measure 'Show filters Headers - Statistics' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Database] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Index'[Schema] ),
			        "Schema:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Schema] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Object] ),
			        "Object:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Object] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Index] ),
			        "Index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Index] ) ) )
			    )
		displayFolder: Statistics
		lineageTag: 5c917117-73c0-4789-a53e-d28b5710798c

	measure 'VLF - Statistics' =
			
			[Age filtered - Statistics age] + [Age filtered - Statistics age incremental]
		formatString: 0
		displayFolder: Statistics
		lineageTag: ae23ed6a-5c5f-44fd-951e-8d6c651611c4

	measure 'Open filter button tooltip - Statistics' =
			
			IF (
			    [Is filters applied - Statistics] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Statistics
		lineageTag: 570b8771-b5b5-438e-a710-6bba29b2b055

	measure 'Is filters applied - Statistics' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ) || ISFILTERED ( 'Index'[Schema] )
			        || ISFILTERED ( 'Index'[Object] )
			        || ISFILTERED ( 'Index'[Index] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Statistics
		lineageTag: c4859339-525a-4f9b-b72c-24240505e60a

	measure 'Is filters applied - Triggers' =
			
			IF ( ISFILTERED ( 'Database'[Database] ), 1, 0 )
		formatString: 0
		displayFolder: Triggers
		lineageTag: de4cd514-17dc-44ea-bef2-30ed0fabd99c

	measure 'Open filter button tooltip - Triggers' =
			
			IF (
			    [Is filters applied - Triggers] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Triggers
		lineageTag: f54e63a4-2a45-4aaa-9d7d-c0c182d7ee35

	measure 'Show filters - Triggers' =
			
			IF (
			    ISFILTERED ( 'Database'[Database] ),
			    VAR _items =
			        VALUES ( 'Database'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Database'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
		displayFolder: Triggers
		lineageTag: b452dbf5-3fe3-4aa9-a07a-19b9f048d95e

	measure 'Show filters Headers - Triggers' =
			
			IF (
			    ISFILTERED ( 'Database'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Database'[Database] ) ) )
			)
		displayFolder: Triggers
		lineageTag: 2992bd60-8ca1-4133-8d47-df98b280ead0

	measure 'Triggers # - Triggers' =
			
			COUNTROWS ( 'Triggers' ) + 0
		formatString: #,0
		displayFolder: Triggers
		lineageTag: 4f6b1f19-bd22-41bc-8d1c-e155493f5cb4

	measure 'Is disabled - Triggers' =
			
			SELECTEDVALUE ( Triggers[Is disabled] ) + 0
		formatString: 0
		displayFolder: Triggers
		lineageTag: a2d741f5-a230-4f31-8d33-cfac175ff008

	measure 'Is ms shipped - Triggers' =
			
			SELECTEDVALUE ( Triggers[Is ms shipped] ) + 0
		formatString: 0
		displayFolder: Triggers
		lineageTag: 4d1d148a-5d81-4ae2-a03c-b35d0ce8b5dd

	measure 'Is not for replication - Triggers' =
			
			SELECTEDVALUE ( Triggers[Is not for replication] ) + 0
		formatString: 0
		displayFolder: Triggers
		lineageTag: 153123b3-a8b3-4f96-aa0d-c71098da95b7

	measure 'Plan guides # - Plan guides' =
			
			COUNTROWS ( 'Plan guides' ) + 0
		formatString: #,0
		displayFolder: Plan guides
		lineageTag: f0a56486-9403-4011-adb6-fe30905c40d9

	measure 'Is disabled - Plan guides' =
			
			SELECTEDVALUE ( 'Plan guides'[Is disabled] ) + 0
		formatString: 0
		displayFolder: Plan guides
		lineageTag: 435c0a6f-f685-449f-9093-7b1df4ff2e04

	measure 'Is filters applied - Plan guides' =
			
			IF ( ISFILTERED ( 'Database'[Database] ), 1, 0 )
		formatString: 0
		displayFolder: Plan guides
		lineageTag: c53d82ec-7e34-492e-9e6d-8887d31a19be

	measure 'Open filter button tooltip - Plan guides' =
			
			IF (
			    [Is filters applied - Plan guides] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Plan guides
		lineageTag: e911cf32-cd4d-46d5-9491-7a71b2960ccd

	measure 'Show filters - Plan guides' =
			
			IF (
			    ISFILTERED ( 'Database'[Database] ),
			    VAR _items =
			        VALUES ( 'Database'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Database'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
		displayFolder: Plan guides
		lineageTag: c8672c94-e9fd-46ca-90b3-c233778bc9cb

	measure 'Show filters Headers - Plan guides' =
			
			IF (
			    ISFILTERED ( 'Database'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Database'[Database] ) ) )
			)
		displayFolder: Plan guides
		lineageTag: 8911f1cd-2789-43ca-a83b-58f2f890d579

	measure 'Avg. total user cost - Missing indexes' =
			
			AVERAGE ( 'Missing indexes'[AvgTotalUserCost] )
		formatString: #,0.00
		displayFolder: Missing indexes
		lineageTag: aaaf4577-2b60-4489-8f16-c90b703d1ed8

	measure 'Avg. user impact - Missing indexes' =
			
			AVERAGE ( 'Missing indexes'[AvgUserImpact] )
		formatString: #,0.00
		displayFolder: Missing indexes
		lineageTag: 1dcd6cc1-6859-4932-893b-beb9b07f57a4

	measure 'User seeks - Missing indexes' =
			
			SUM ( 'Missing indexes'[UserSeeks] )
		formatString: #,0
		displayFolder: Missing indexes
		lineageTag: 3608da5d-9276-4f7e-90eb-fcb5564c4c7e

	measure 'Last user seek - Missing indexes' =
			
			MAX ( 'Missing indexes'[LastUserSeek] )
		formatString: dd-mmm-yyyy hh:nn
		displayFolder: Missing indexes
		lineageTag: 7296b153-47c1-4dd9-b939-5a4068fe94da

		annotation PBI_FormatHint = {"isCustom":true}

	measure 'VLF - Missing indexes' =
			
			VAR _userImpactLimit =
			    SELECTEDVALUE ( 'Values 0-90 (10 delta)'[Value] )
			VAR _userImpact = [Avg. user impact - Missing indexes]
			VAR _result =
			    IF ( ( _userImpact >= _userImpactLimit ), 1, 0 )
			RETURN
			    _result
		formatString: #,0
		displayFolder: Missing indexes
		lineageTag: a86ece19-953a-4cae-8092-1a393e54b044

	measure 'Is filters applied - Missing indexes' =
			
			IF (
			    ISFILTERED ( 'Object'[Database] ) || ISFILTERED ( 'Object'[Schema] )
			        || ISFILTERED ( 'Object'[Object] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Missing indexes
		lineageTag: 867c19d1-e037-4cfe-bc20-d20e9823aeb3

	measure 'Open filter button tooltip - Missing indexes' =
			
			IF (
			    [Is filters applied - Missing indexes] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Missing indexes
		lineageTag: 09ab0590-4ba9-4973-8e96-74fe443d93a6

	measure 'Show filters - Missing indexes' =
			
			IF (
			    ISFILTERED ( 'Object'[Database] ),
			    VAR _items =
			        VALUES ( 'Object'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Object'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Object'[Schema] ),
			        VAR _items =
			            VALUES ( 'Object'[Schema] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Object'[Schema], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Object'[Object] ),
			        VAR _items =
			            VALUES ( 'Object'[Object] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Object'[Object], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Missing indexes
		lineageTag: da1af2db-4da3-4693-a91d-3b553fdcc164

	measure 'Show filters Headers - Missing indexes' =
			
			IF (
			    ISFILTERED ( 'Object'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Object'[Database] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Object'[Schema] ),
			        "Schema:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Object'[Schema] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Object'[Object] ),
			        "Object:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Object'[Object] ) ) )
			    )
		displayFolder: Missing indexes
		lineageTag: 404b5f55-39aa-4024-88d3-a8e1af06600c

	measure 'Title - Missing indexes' = ```
			
			VAR _minDataDate =
			    MIN ( 'Missing indexes'[Date] )
			VAR _maxDataDate =
			    MAX ( 'Missing indexes'[Date] )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    "Missing index data"
			        & IF (
			            _minDataDate <> BLANK (),
			            " between " & _minDataDateTxt & " and " & _maxDataDateTxt & " " & [Drill-through symbol]
			        )
			VAR _result = _txt
			RETURN
			    _result
			
			```
		displayFolder: Missing indexes
		lineageTag: 9e6a0d02-731c-4d86-a2fc-f768c2b015da

	measure 'Avg. fragmentation in percent - Index physical' =
			
			AVERAGE ( 'Index physical'[AvgFragmentationInPercent] )
		formatString: #,0.00
		displayFolder: Index physical
		lineageTag: 2db46e1c-1fc6-4bd5-bcc3-5c2fb2cf9b4f

	measure 'Fragment count - Index physical' =
			
			SUM ( 'Index physical'[FragmentCount] )
		formatString: #,0
		displayFolder: Index physical
		lineageTag: 09931656-1a33-4d1a-ab24-c1dd0dda0a92

	measure 'Page count - Index physical' =
			
			SUM ( 'Index physical'[PageCount] )
		formatString: #,0
		displayFolder: Index physical
		lineageTag: 930d9e20-3187-4f15-9e31-92c21f8d89d0

	measure 'VLF - Index physical' =
			
			VAR _fragmentationLimit =
			    SELECTEDVALUE ( 'Values 0-90 (10 delta)'[Value] )
			VAR _pageLimit =
			    SELECTEDVALUE ( 'Values 0-1000000 (log)'[Value] )
			VAR _fragmentation = [Avg. fragmentation in percent - Index physical]
			VAR _pages = [Page count - Index physical]
			VAR _result =
			    IF (
			        ( _fragmentation >= _fragmentationLimit )
			            && ( _pages >= _pageLimit ),
			        1,
			        0
			    )
			RETURN
			    _result
		formatString: 0
		displayFolder: Index physical
		lineageTag: e1290fc4-8647-4e11-8684-28d1e10b4d2c

	measure 'Is filters applied - Index physical' =
			
			IF (
			    ISFILTERED ( 'Index alloc type'[Database] )
			        || ISFILTERED ( 'Index alloc type'[Schema] )
			        || ISFILTERED ( 'Index alloc type'[Object] )
			        || ISFILTERED ( 'Index alloc type'[Index] )
			        || ISFILTERED ( 'Index alloc type'[Index type] )
			        || ISFILTERED ( 'Index alloc type'[Alloc. unit type] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Index physical
		lineageTag: ba9cb675-22be-4cdb-bff4-d06c50180b9c

	measure 'Open filter button tooltip - Index physical' =
			
			IF (
			    [Is filters applied - Index physical] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Index physical
		lineageTag: 149002a1-bd20-4d14-b62c-47212024f8f1

	measure 'Show filters - Index physical' =
			
			IF (
			    ISFILTERED ( 'Index alloc type'[Database] ),
			    VAR _items =
			        VALUES ( 'Index alloc type'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Index alloc type'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Index alloc type'[Schema] ),
			        VAR _items =
			            VALUES ( 'Index alloc type'[Schema] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index alloc type'[Schema], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index alloc type'[Object] ),
			        VAR _items =
			            VALUES ( 'Index alloc type'[Object] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index alloc type'[Object], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index alloc type'[Index] ),
			        VAR _items =
			            VALUES ( 'Index alloc type'[Index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index alloc type'[Index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index alloc type'[Index type] ),
			        VAR _items =
			            VALUES ( 'Index alloc type'[Index type] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index alloc type'[Index type], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index alloc type'[Alloc. unit type] ),
			        VAR _items =
			            VALUES ( 'Index alloc type'[Alloc. unit type] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index alloc type'[Alloc. unit type], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Index physical
		lineageTag: 350b7cf0-a385-4e4c-8b09-d703e86ad8a0

	measure 'Show filters Headers - Index physical' =
			
			IF (
			    ISFILTERED ( 'Index alloc type'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index alloc type'[Database] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Index alloc type'[Schema] ),
			        "Schema:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index alloc type'[Schema] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index alloc type'[Object] ),
			        "Object:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index alloc type'[Object] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index alloc type'[Index] ),
			        "Index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index alloc type'[Index] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index alloc type'[Index type] ),
			        "Index type:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index alloc type'[Index type] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index alloc type'[Alloc. unit type] ),
			        "Alloc. type:" & UNICHAR ( 127 )
			            & REPT (
			                UNICHAR ( 10 ),
			                COUNTROWS ( VALUES ( 'Index alloc type'[Alloc. unit type] ) )
			            )
			    )
		displayFolder: Index physical
		lineageTag: 5a167d38-6cd0-4890-ae8b-41897d4820f1

	measure 'Title - Index physical' =
			
			VAR _txt = "Index physical"
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Index physical
		lineageTag: 1e418b04-c640-417b-adae-f60fd7c85d32

	measure 'Is filters applied - OH errors' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ) || ISFILTERED ( 'Index'[Schema] )
			        || ISFILTERED ( 'Index'[Object] )
			        || ISFILTERED ( 'Index'[Index] )
			        || ISFILTERED ( 'Date'[Year] )
			        || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: OH errors
		lineageTag: c9fb545f-dc38-4072-a080-22ed1482722c

	measure 'Open filter button tooltip - OH errors' =
			
			IF (
			    [Is filters applied - OH errors] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: OH errors
		lineageTag: e9b4529b-1737-4b9e-9a0f-36a20ebea3c7

	measure 'Show filters - OH errors' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ),
			    VAR _items =
			        VALUES ( 'Index'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Index'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Index'[Schema] ),
			        VAR _items =
			            VALUES ( 'Index'[Schema] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Schema], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Object] ),
			        VAR _items =
			            VALUES ( 'Index'[Object] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Object], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Index] ),
			        VAR _items =
			            VALUES ( 'Index'[Index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        VAR _items =
			            VALUES ( 'Date'[Year] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: OH errors
		lineageTag: d22fe2a4-4d91-4afa-876c-812ca4fa6149

	measure 'Show filters Headers - OH errors' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Database] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Index'[Schema] ),
			        "Schema:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Schema] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Object] ),
			        "Object:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Object] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Index] ),
			        "Index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Index] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        "Year:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
		displayFolder: OH errors
		lineageTag: 89b10d3a-7d80-4693-9a4d-d63b17ee7591

	measure 'VLF - OH errors' =
			
			SUM ( 'OH errors'[Duration] )
		formatString: 0
		displayFolder: OH errors
		lineageTag: ce3b60dc-34e2-4a92-af4e-3bcf4e5a26cf

	measure 'Title - OH errors' =
			
			VAR _minDataDate =
			    MIN ( 'OH errors'[Date] )
			VAR _maxDataDate =
			    MAX ( 'OH errors'[Date] )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    "Ola Hallengren errors"
			        & IF (
			            _minDataDate <> BLANK (),
			            " between " & _minDataDateTxt & " and " & _maxDataDateTxt
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: OH errors
		lineageTag: acd1f2d8-7742-4709-ac3e-7917d1d21bf8

	measure 'Compressed ratio - Backup status' =
			
			VAR _compressedSize = [Compressed backup size - Backup status]
			VAR _size = [Backup size - Backup status]
			VAR _ratio =
			    DIVIDE ( 1, DIVIDE ( _compressedSize, _size ) )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00
		displayFolder: Backup\Backup status
		lineageTag: bb932ba0-3c46-4b7b-8f07-69ebba9f570c

	measure 'Latest full backup is old - Backup status' =
			
			VAR _ageLimit =
			    SELECTEDVALUE ( Tally1[Value] )
			VAR _latestFullBackupAge =
			    MAX ( 'Backup age'[LatestFullBackupAgeHours] )
			VAR _latestDiffBackupAge =
			    MAX ( 'Backup age'[LatestDiffBackupAgeHours] )
			VAR _backupIsOld =
			    IF (
			        _latestFullBackupAge >= _ageLimit
			            && _latestDiffBackupAge <> BLANK ()
			            && _latestDiffBackupAge < _ageLimit,
			        1,
			        IF ( _latestFullBackupAge >= _ageLimit, 2 )
			    )
			VAR _result = _backupIsOld
			RETURN
			    _result
		formatString: 0
		displayFolder: Backup\Backup status
		lineageTag: 97da3124-a434-4fcb-8fd0-f22117799174

	measure 'Latest diff backup is old - Backup status' =
			
			VAR _ageLimit =
			    SELECTEDVALUE ( Tally1[Value] )
			VAR _latestDiffBackupAge =
			    MAX ( 'Backup age'[LatestDiffBackupAgeHours] )
			VAR _backupIsOld =
			    IF ( _latestDiffBackupAge >= _ageLimit, 2 )
			VAR _result = _backupIsOld
			RETURN
			    _result
		formatString: 0
		displayFolder: Backup\Backup status
		lineageTag: 4ae361e4-dbf0-4467-ad33-7308cb780b01

	measure 'VLF - Backup status' =
			
			[Latest full backup is old - Backup status] + [Latest log backup is old - Backup status]
		displayFolder: Backup\Backup status
		lineageTag: 0e2196f6-c689-44c1-9b62-58f8ca6b3af9

	measure 'Latest log backup is old - Backup status' =
			
			VAR _ageLimit =
			    SELECTEDVALUE ( Tally2[Value] )
			VAR _latestLogBackupAge =
			    MAX ( 'Backup age'[LatestLogBackupAgeHours] )
			VAR _backupIsOld =
			    IF ( _latestLogBackupAge >= _ageLimit, 2 )
			VAR _result = _backupIsOld
			RETURN
			    _result
		formatString: 0
		displayFolder: Backup\Backup status
		lineageTag: 3f7d8db3-ceeb-4378-a70e-33c707f6559d

	measure 'Is filters applied - Backup' =
			
			IF (
			    ISFILTERED ( 'Database'[Database] ) || ISFILTERED ( 'Junk dimensions'[Name] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Backup
		lineageTag: 0f501953-bcdb-47a1-adaa-0662b62bdf9a

	measure 'Open filter button tooltip - Backup' =
			
			IF (
			    [Is filters applied - Backup] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Backup
		lineageTag: 1ee7ba08-bd13-44d3-b1cd-4e01fde94482

	measure 'Show filters - Backup' =
			
			IF (
			    ISFILTERED ( 'Database'[Database] ),
			    VAR _items =
			        VALUES ( 'Database'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Database'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Junk dimensions'[Name] ),
			        VAR _items =
			            VALUES ( 'Junk dimensions'[Name] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Junk dimensions'[Name], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Backup
		lineageTag: 63c01f75-750c-4f06-9a7d-29bffa5ca838

	measure 'Show filters Headers - Backup' =
			
			IF (
			    ISFILTERED ( 'Database'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Database'[Database] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Junk dimensions'[Name] ),
			        "Type:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Junk dimensions'[Name] ) ) )
			    )
		displayFolder: Backup
		lineageTag: 845f5f96-0f40-4235-9fe3-e375783c4c5b

	measure 'Compressed backup size - Backup status' =
			
			SUM ( 'Backup status'[CompressedBackupSize] )
		formatString: #,0
		displayFolder: Backup\Backup status
		lineageTag: 739e4d77-69dc-4e3a-b453-4265a6062c21

	measure 'Backup size - Backup status' =
			
			SUM ( 'Backup status'[BackupSize] )
		formatString: #,0
		displayFolder: Backup\Backup status
		lineageTag: e32b51a2-7b31-4be2-9cf2-1409917270bd

	measure 'Comp. level flag - Database configuration' =
			
			VAR _tempdbCompLevel =
			    CALCULATE (
			        SELECTEDVALUE ( 'Database state'[Comp. level] ),
			        FILTER ( ALL ( 'Database' ), 'Database'[Database] = "tempdb" )
			    )
			VAR _flag =
			    CALCULATE (
			        COUNTROWS ( 'Database state' ),
			        FILTER ( 'Database state', 'Database state'[Comp. level] <> _tempdbCompLevel )
			    )
			VAR _result = _flag
			RETURN
			    _result
		formatString: 0
		displayFolder: Database configuration
		lineageTag: 8e13f1fb-1a54-4832-a69c-2c29307d12e5

	measure 'Recovery model flag - Database configuration' =
			
			VAR _dbName =
			    MAX ( Database[Database] )
			VAR _flag =
			    CALCULATE (
			        COUNTROWS ( 'Database state' ),
			        FILTER (
			            'Database state',
			            'Database state'[Recovery model] <> "FULL"
			                && NOT _dbName IN { "master", "msdb", "tempdb" }
			        )
			    )
			VAR _result = _flag
			RETURN
			    _result
		formatString: 0
		displayFolder: Database configuration
		lineageTag: 54490193-ea01-4d4d-b207-60b60b667fa2

	measure 'VLF - Database configuration' =
			
			COUNTROWS ( 'Database state' )
		formatString: 0
		displayFolder: Database configuration
		lineageTag: 2a5c2f38-059d-416f-a7df-19d4d508ecc6

	measure 'Collation flag - Database configuration' =
			
			VAR _tempdbCollation =
			    CALCULATE (
			        SELECTEDVALUE ( 'Database state'[Collation] ),
			        FILTER ( ALL ( 'Database' ), 'Database'[Database] = "tempdb" )
			    )
			VAR _flag =
			    CALCULATE (
			        COUNTROWS ( 'Database state' ),
			        FILTER ( 'Database state', 'Database state'[Collation] <> _tempdbCollation )
			    )
			VAR _result = _flag
			RETURN
			    _result
		formatString: 0
		displayFolder: Database configuration
		lineageTag: 2d0540dd-605d-4f86-9169-42c19964506b

	measure 'RCSI flag - Database configuration' =
			
			SELECTEDVALUE ( 'Database state'[RCSI] ) + 0
		formatString: 0
		displayFolder: Database configuration
		lineageTag: 73b6a072-4193-498f-b43d-c9a27131d950

	measure 'Page verify flag - Database configuration' =
			
			CALCULATE (
			    COUNTROWS ( 'Database state' ),
			    FILTER ( 'Database state', 'Database state'[Page verify] <> "CHECKSUM" )
			)
		formatString: 0
		displayFolder: Database configuration
		lineageTag: 5f52624c-a86a-4c13-b9c8-c44934ba35cb

	measure 'Auto close flag - Database configuration' =
			
			SELECTEDVALUE ( 'Database state'[Auto close] ) + 0
		formatString: 0
		displayFolder: Database configuration
		lineageTag: bd7fe3f0-9045-4a78-af82-43cb68f61560

	measure 'Auto shrink flag - Database configuration' =
			
			SELECTEDVALUE ( 'Database state'[Auto shrink] ) + 0
		formatString: 0
		displayFolder: Database configuration
		lineageTag: 0a0c518c-fb2a-41d9-88da-be8f00be1ac4

	measure 'Auto update stats. async. flag - Database configuration' =
			
			SELECTEDVALUE ( 'Database state'[Auto update stats. async.] ) + 0
		formatString: 0
		displayFolder: Database configuration
		lineageTag: 48b51f26-eac0-4b14-82d5-4e5ade1aa4db

	measure 'Delayed durability flag - Database configuration' =
			
			CALCULATE (
			    COUNTROWS ( 'Database state' ),
			    FILTER (
			        'Database state',
			        NOT 'Database state'[Delayed durability] IN { BLANK (), "DISABLED" }
			    )
			)
		formatString: 0
		displayFolder: Database configuration
		lineageTag: 447d054b-df6f-4027-927e-0eca70c38aae

	measure 'Is filters applied - Database configuration' =
			
			IF ( ISFILTERED ( 'Database'[Database] ), 1, 0 )
		formatString: 0
		displayFolder: Database configuration
		lineageTag: 6c189adb-bb2f-4795-b447-6b1189167492

	measure 'Open filter button tooltip - Database configuration' =
			
			IF (
			    [Is filters applied - Database configuration] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Database configuration
		lineageTag: 054cada7-c9c2-4991-86c5-761b7bcc603a

	measure 'Show filters - Database configuration' =
			
			IF (
			    ISFILTERED ( 'Database'[Database] ),
			    VAR _items =
			        VALUES ( 'Database'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Database'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
		displayFolder: Database configuration
		lineageTag: 9c97103a-cd97-4829-95a9-ca36fd686bf9

	measure 'Show filters Headers - Database configuration' =
			
			IF (
			    ISFILTERED ( 'Database'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Database'[Database] ) ) )
			)
		displayFolder: Database configuration
		lineageTag: 324c394e-1e9d-4ad4-809e-88a01f5b90bd

	measure 'Data range - Agent job configuration' =
			
			VAR _maxDataDate =
			    MAX (
			        CALCULATE ( MAX ( 'Agent jobs - grid'[Timestamp] ), ALL () ),
			        CALCULATE ( MAX ( 'Agent jobs - list'[Timestamp] ), ALL () )
			    )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date-min format string] )
			VAR _txt =
			    IF ( _maxDataDate = BLANK (), "", "Data available by " & _maxDataDateTxt )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Agent jobs configuration
		lineageTag: bbb61f84-a428-4113-842f-757a5f6484cc

	measure 'Data range - Backup' =
			
			VAR _minFullDate =
			    CALCULATE ( MIN ( 'Backup age'[LatestFullBackupStartDate] ), ALL () )
			VAR _minDiffDate =
			    CALCULATE ( MIN ( 'Backup age'[LatestDiffBackupStartDate] ), ALL () )
			VAR _minLogDate =
			    CALCULATE ( MIN ( 'Backup age'[LatestLogBackupStartDate] ), ALL () )
			VAR _minStatusDate =
			    CALCULATE ( MIN ( 'Backup status'[Date] ), ALL () )
			VAR _minBackupAgeDate =
			    MIN ( MIN ( MIN ( _minFullDate, _minDiffDate ), _minLogDate ), _minStatusDate )
			VAR _minDataDate =
			    IF (
			        _minBackupAgeDate = BLANK(),
			        _minStatusDate,
			        MIN ( _minBackupAgeDate, _minStatusDate )
			    )
			VAR _maxFullDate =
			    CALCULATE ( MAX ( 'Backup age'[LatestFullBackupStartDate] ), ALL () )
			VAR _maxDiffDate =
			    CALCULATE ( MAX ( 'Backup age'[LatestDiffBackupStartDate] ), ALL () )
			VAR _maxLogDate =
			    CALCULATE ( MAX ( 'Backup age'[LatestLogBackupStartDate] ), ALL () )
			VAR _maxStatusDate =
			    CALCULATE ( MAX ( 'Backup status'[Date] ), ALL () )
			VAR _maxDataDate =
			    MAX ( MAX ( MAX ( _maxFullDate, _maxDiffDate ), _maxLogDate ), _maxStatusDate )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Backup
		lineageTag: 13fed6d6-eeec-4599-ba5a-b7943a32d3bd

	measure 'Data range - Database configuration' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Database state'[Min. timestamp] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Database state'[Max. timestamp] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data changed between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Database configuration
		lineageTag: 550ae918-259b-4e84-a658-0bdcb15ef0e9

	measure 'Data range - Index physical' =
			
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Index physical'[Date] ), ALL () )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF ( _maxDataDate = BLANK (), "", "Data available by " & _maxDataDateTxt )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Index physical
		lineageTag: 052bbdfd-605d-4233-9a1e-60683e5ca13c

	measure 'Data range - Instance configuration' =
			
			VAR _timestamps =
			    UNION (
			        SELECTCOLUMNS ( ALL ( 'Agent alerts' ), "Timestamp", 'Agent alerts'[Timestamp] ),
			        SELECTCOLUMNS (
			            ALL ( 'Instance configurations' ),
			            "Timestamp", 'Instance configurations'[Timestamp]
			        ),
			        SELECTCOLUMNS (
			            ALL ( 'Instance hardware' ),
			            "Timestamp", 'Instance hardware'[Timestamp]
			        ),
			        SELECTCOLUMNS (
			            ALL ( 'Instance services' ),
			            "Timestamp", 'Instance services'[Timestamp]
			        ),
			        SELECTCOLUMNS ( ALL ( 'Trace flags' ), "Timestamp", 'Trace flags'[Timestamp] )
			    )
			VAR _minDataDate =
			    MINX ( _timestamps, [Timestamp] )
			VAR _maxDataDate =
			    MAXX ( _timestamps, [Timestamp] )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date-min format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date-min format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data changed between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Instance configuration
		lineageTag: 50137dc9-1b3a-41e3-abfb-2f9f39b38a35

	measure 'Data range - Instance status' =
			
			VAR _timestamps =
			    UNION (
			        SELECTCOLUMNS (
			            ALL ( 'Instance dump files' ),
			            "Timestamp", 'Instance dump files'[Created]
			        ),
			        SELECTCOLUMNS (
			            ALL ( 'Instance suspect pages' ),
			            "Timestamp", 'Instance suspect pages'[Updated]
			        )
			    )
			VAR _minDataDate =
			    MINX ( _timestamps, [Timestamp] )
			VAR _maxDataDate =
			    MAXX ( _timestamps, [Timestamp] )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date-min format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date-min format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Instance status
		lineageTag: 0a53ca4f-23c7-4189-b9a7-c606338e2eb2

	measure 'Size in bytes - Instance status' =
			
			SUM ( 'Instance dump files'[SizeInBytes] )
		formatString: #,0
		displayFolder: Instance status
		lineageTag: cea8ec52-31dd-4483-9452-ddbb451f8887

	measure 'Data range - Missing indexes' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Missing indexes'[Date] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Missing indexes'[Date] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Missing indexes
		lineageTag: e92ec53f-8348-43f6-97ec-868683b002fc

	measure 'Data range - OH errors' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'OH errors'[Date] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'OH errors'[Date] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: OH errors
		lineageTag: 86875b7e-fb09-4c1d-8535-c8db2c1427d8

	measure 'Date format string' =
			
			"dd-mmm-yyyy"
		displayFolder: Common
		lineageTag: cfc01d16-9d49-4abd-a838-ee928897cee2

	measure 'Date-min format string' =
			
			"dd-mmm-yyyy hh:nn"
		displayFolder: Common
		lineageTag: 25d0f083-afa3-4c43-b5e2-65c87b52c57a

	measure 'Dayname format string' =
			
			"ddd"
		displayFolder: Common
		lineageTag: fefcd457-8029-4ee7-88fd-8c7534a092f3

	measure 'Data range - Monitor configuration' =
			
			VAR _timestamps =
			    UNION (
			        SELECTCOLUMNS (
			            ALL ( 'Retentions' ),
			            "Timestamp", Retentions[Last executed UTC]
			        ),
			        SELECTCOLUMNS ( ALL ( 'Schedules' ), "Timestamp", Schedules[Last executed UTC] )
			    )
			VAR _minDataDate =
			    MINX ( _timestamps, [Timestamp] )
			VAR _maxDataDate =
			    MAXX ( _timestamps, [Timestamp] )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date-min format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date-min format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Monitor configuration
		lineageTag: 708d95b6-4026-45a5-bdfa-7607969cb640

	measure 'Data range - Monitor status' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Log'[Timestamp] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Log'[Timestamp] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date-min format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date-min format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Monitor status
		lineageTag: 232a5641-ce88-4e50-b2e1-a3a344a90039

	measure 'Data range - Plan cache usage' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Plan cache usage'[Date] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Plan cache usage'[Date] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Plan cache usage
		lineageTag: 9d7c51f1-9416-46a5-94d6-038961dc9c15

	measure 'Data range - Plan guides' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Plan guides'[Created date] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Plan guides'[Modified date] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Plan guides
		lineageTag: 08bff09b-0ca8-4e4e-a116-9dcb939c22e2

	measure 'Data range - Query statistics' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Query statistics'[Date] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Query statistics'[Date] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Query statistics
		lineageTag: d63beb8f-1ac4-407e-b7a9-c96244bd2f39

	measure 'Data range - Resource Governor configuration' =
			
			VAR _timestamps =
			    UNION (
			        SELECTCOLUMNS (
			            ALL ( 'Resource governor configuration' ),
			            "Timestamp", 'Resource governor configuration'[Timestamp]
			        ),
			        SELECTCOLUMNS (
			            ALL ( 'Resource governor external resource pool affinity' ),
			            "Timestamp", 'Resource governor external resource pool affinity'[Timestamp]
			        ),
			        SELECTCOLUMNS (
			            ALL ( 'Resource governor external resource pools' ),
			            "Timestamp", 'Resource governor external resource pools'[Timestamp]
			        ),
			        SELECTCOLUMNS (
			            ALL ( 'Resource governor resource pool affinity' ),
			            "Timestamp", 'Resource governor resource pool affinity'[Timestamp]
			        ),
			        SELECTCOLUMNS (
			            ALL ( 'Resource governor resource pools' ),
			            "Timestamp", 'Resource governor resource pools'[Timestamp]
			        ),
			        SELECTCOLUMNS (
			            ALL ( 'Resource governor workload groups' ),
			            "Timestamp", 'Resource governor workload groups'[Timestamp]
			        )
			    )
			VAR _minDataDate =
			    MINX ( _timestamps, [Timestamp] )
			VAR _maxDataDate =
			    MAXX ( _timestamps, [Timestamp] )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date-min format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date-min format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data changed between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Resource Governor configuration
		lineageTag: a09132b0-5ba1-4b91-a029-839593e31671

	measure 'Data range - Statistics' =
			
			VAR _maxDataDate =
			    MAX (
			        CALCULATE ( MAX ( 'Statistics age'[Date] ), ALL () ),
			        CALCULATE ( MAX ( 'Statistics age incremental'[Date] ), ALL () )
			    )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF ( _maxDataDate = BLANK (), "", "Data available by " & _maxDataDateTxt )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Statistics
		lineageTag: 41f60638-d70c-4674-94f4-213cfcac4741

	measure 'Data range - Triggers' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( Triggers[Created date] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( Triggers[Modified date] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Triggers
		lineageTag: 6b3552e9-4074-4de1-8fe2-cfcdcec7e451

	measure 'Data range - Wait statistics' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Wait statistics'[Date] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Wait statistics'[Date] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Wait statistics
		lineageTag: b1e43413-5d84-4379-91c7-6541f58e359c

	measure 'Data range - Who is active' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Who is active'[Collection time] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Who is active'[Collection time] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Who is active
		lineageTag: 2082f231-cab2-489c-82aa-9e19548a424d

	measure 'Encrypted flag - Database configuration' =
			
			SELECTEDVALUE ( 'Database state'[Encrypted] ) + 0
		formatString: 0
		displayFolder: Database configuration
		lineageTag: 8373dc6e-947c-4c60-bc60-6d4c824480e6

	measure 'Data title - Who is active' =
			
			VAR _minDataDate =
			    MIN ( 'Who is active'[Collection time] )
			VAR _maxDataDate =
			    MAX ( 'Who is active'[Collection time] )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date-min format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date-min format string] )
			VAR _txt =
			    "Who is active data"
			        & IF (
			            _minDataDate <> BLANK (),
			            " between " & _minDataDateTxt & " and " & _maxDataDateTxt
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Who is active
		lineageTag: b14a734d-93f7-4aef-a8ce-76c835545c02

	measure 'Is filters applied - Partitioned indexes' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ) || ISFILTERED ( 'Index'[Schema] )
			        || ISFILTERED ( 'Index'[Object] )
			        || ISFILTERED ( 'Index'[Index] )
			        || ISFILTERED ( 'Date'[Year] )
			        || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Partitioned indexes
		lineageTag: d4ddf18c-92ff-4617-9b87-8c4285c62924

	measure 'Open filter button tooltip - Partitioned indexes' =
			
			IF (
			    [Is filters applied - Partitioned indexes] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Partitioned indexes
		lineageTag: 94cfc06f-4c9e-4cb4-a9aa-11ca9d43d8ae

	measure 'Show filters - Partitioned indexes' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ),
			    VAR _items =
			        VALUES ( 'Index'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Index'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Index'[Schema] ),
			        VAR _items =
			            VALUES ( 'Index'[Schema] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Schema], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Object] ),
			        VAR _items =
			            VALUES ( 'Index'[Object] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Object], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Index] ),
			        VAR _items =
			            VALUES ( 'Index'[Index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        VAR _items =
			            VALUES ( 'Date'[Year] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Partitioned indexes
		lineageTag: ddb77875-4ed5-466b-b0e1-aca034e99358

	measure 'Show filters Headers - Partitioned indexes' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Database] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Index'[Schema] ),
			        "Schema:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Schema] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Object] ),
			        "Object:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Object] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Index] ),
			        "Index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Index] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        "Year:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
		displayFolder: Partitioned indexes
		lineageTag: 9187fdf7-f152-40aa-bc5d-f42ce554f3e0

	measure 'Rows # - Partitioned indexes' =
			
			SUM ( 'Partitioned indexes'[PartitionRowCount] )
		formatString: #,0
		displayFolder: Partitioned indexes
		lineageTag: d3b99fc0-89d4-4b53-9f49-d7a5d3165127

	measure 'Latest rows # - Partitioned indexes' = ```
			
			VAR _maxDate =
			    CALCULATE (
			        MAX ( 'Partitioned indexes'[Date] ),
			        REMOVEFILTERS ( 'Index' ),
			        REMOVEFILTERS ( 'Partitioned indexes'[Partition range] )
			    )
			VAR _latestValue =
			    CALCULATE (
			        [Rows # - Partitioned indexes],
			        'Partitioned indexes'[Date] = _maxDate
			    )
			VAR _result = _latestValue
			RETURN
			    _result
			
			```
		formatString: #,0
		displayFolder: Partitioned indexes
		lineageTag: 068984df-d760-44cc-b2a4-9058adb43328

	measure 'Sort order - Partitioned indexes' =
			
			VAR _maxDate =
			    CALCULATE ( MAX ( 'Partitioned indexes'[Date] ), REMOVEFILTERS ( 'Index' ) )
			VAR _latestValue =
			    CALCULATE (
			        MAX ( 'Partitioned indexes'[SortOrder] ),
			        'Partitioned indexes'[Date] = _maxDate
			    )
			VAR _valueToReturn =
			    IF ( ISINSCOPE ( 'Partitioned indexes'[Partition range] ), _latestValue )
			VAR _result = _valueToReturn
			RETURN
			    _result
		formatString: #,0
		displayFolder: Partitioned indexes
		lineageTag: 15282645-110e-4bfb-a60a-ee233fb6411d

	measure 'Data range - Partitioned indexes' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Partitioned indexes'[Date] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Partitioned indexes'[Date] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Partitioned indexes
		lineageTag: 38e60926-9ef9-4573-8a26-97c263b666cb

	measure 'Details title - Partitioned indexes' =
			
			VAR _latestDate = [Latest date - Partitioned indexes]
			VAR _latestDateTxt =
			    FORMAT ( _latestDate, [Date format string] ) & " ("
			        & FORMAT ( _latestDate, [Dayname format string] ) & ")"
			VAR _txt =
			    "Partitioned indexes"
			        & IF (
			            _latestDate <> BLANK (),
			            " for " & _latestDateTxt
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Partitioned indexes
		lineageTag: 47beee6f-68c1-4fe7-a34e-a7c39b2aa01d

	measure 'Latest date - Partitioned indexes' =
			
			VAR _maxDate =
			    MAX ( 'Partitioned indexes'[Date] )
			VAR _result = _maxDate
			RETURN
			    _result
		formatString: General Date
		displayFolder: Partitioned indexes
		lineageTag: 47b66729-7db9-410a-8997-9cc98f10e7aa

	measure 'VLF - Index details - Missing indexes' =
			
			VAR _userImpactLimit =
			    SELECTEDVALUE ( 'Values 0-90 (10 delta)'[Value] )
			VAR _userImpact = [Avg. user impact - Index details - Missing indexes]
			VAR _result =
			    IF ( ( _userImpact >= _userImpactLimit ), 1 )
			RETURN
			    _result
		formatString: 0
		displayFolder: Index details
		lineageTag: d6415c2e-eeb8-4cc3-96e5-060b86253f3b

	measure 'Index columns - Index details - Index configuration' =
			
			IF ( ISINSCOPE ( 'Index'[Index] ), MAX ( 'Index configuration'[IndexColumns] ) )
		displayFolder: Index details
		lineageTag: ae6f4305-30b9-4271-beef-9b041744ceef

	measure 'Included columns - Index details - Index configuration' =
			
			IF ( ISINSCOPE ( 'Index'[Index] ), MAX ( 'Index configuration'[IncludedColumns] ) )
		displayFolder: Index details
		lineageTag: acc94efe-afb4-4234-ac23-90a3e7ee024f

	measure 'VLF - Index details - Index configuration' =
			
			VAR _objectKey =
			    MAX ( Object[ObjectKey] )
			VAR _value =
			    SUMX (
			        FILTER ( 'Index usage', 'Index usage'[ObjectKey] = _objectKey ),
			        CALCULATE (
			            [User seeks - Index usage] + [User updates - Index usage] + [User lookups - Index usage] + [User scans - Index usage]
			        )
			    )
			VAR _result = _value
			RETURN
			    _result
		formatString: 0
		displayFolder: Index details
		lineageTag: 0b0bc496-44e8-4356-9dd1-a000f3212285

	measure 'Avg. user impact - Index details - Missing indexes' =
			
			VAR _objectKey =
			    MAX ( Object[ObjectKey] )
			VAR _value =
			    CALCULATE (
			        AVERAGE ( 'Missing indexes - Index details'[AvgUserImpact] ),
			        'Missing indexes - Index details'[ObjectKey] = _objectKey
			    )
			VAR _result = _value
			RETURN
			    _result
		formatString: #,0.00
		displayFolder: Index details
		lineageTag: bc3b14a5-6264-4e10-8dd4-f675485564b7

	measure 'Avg. total user cost - Index details - Missing indexes' =
			
			VAR _objectKey =
			    MAX ( Object[ObjectKey] )
			VAR _value =
			    CALCULATE (
			        AVERAGE ( 'Missing indexes - Index details'[AvgTotalUserCost] ),
			        'Missing indexes - Index details'[ObjectKey] = _objectKey
			    )
			VAR _result = _value
			RETURN
			    _result
		formatString: #,0.00
		displayFolder: Index details
		lineageTag: b60afc6c-c639-46ef-963a-dce375b8f1c5

	measure 'User seeks - Index details - Missing indexes' =
			
			VAR _objectKey =
			    MAX ( Object[ObjectKey] )
			VAR _value =
			    CALCULATE (
			        SUM ( 'Missing indexes - Index details'[UserSeeks] ),
			        'Missing indexes - Index details'[ObjectKey] = _objectKey
			    )
			VAR _result = _value
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index details
		lineageTag: 114379f7-1076-40c1-9778-d09117a0d53e

	measure 'Index type desc - Index details - Index configuration' =
			
			IF ( ISINSCOPE ( 'Index'[Index] ), MAX ( 'Index configuration'[IndexTypeDesc] ) )
		displayFolder: Index details
		lineageTag: d96382ab-a198-4ee8-9859-0415ba86590b

	measure 'Is primary key - Index details - Index configuration' =
			
			IF (
			    ISINSCOPE ( 'Index'[Index] ),
			    SELECTEDVALUE ( 'Index configuration'[IsPrimaryKey] ) + 0
			)
		formatString: 0
		displayFolder: Index details
		lineageTag: dbdff829-c9fd-4395-ba7a-985e822ed867

	measure 'Is unique - Index details - Index configuration' =
			
			IF (
			    ISINSCOPE ( 'Index'[Index] ),
			    SELECTEDVALUE ( 'Index configuration'[IsUnique] ) + 0
			)
		formatString: 0
		displayFolder: Index details
		lineageTag: 6f3cfee1-e944-496c-898b-985c47ef2fad

	measure 'Is disabled - Index details - Index configuration' =
			
			IF (
			    ISINSCOPE ( 'Index'[Index] ),
			    SELECTEDVALUE ( 'Index configuration'[IsDisabled] ) + 0
			)
		formatString: 0
		displayFolder: Index details
		lineageTag: a736cea5-7f24-496b-98ff-38d4e0fb0d97

	measure 'Is hypothetical - Index details - Index configuration' =
			
			IF (
			    ISINSCOPE ( 'Index'[Index] ),
			    SELECTEDVALUE ( 'Index configuration'[IsHypothetical] ) + 0
			)
		formatString: 0
		displayFolder: Index details
		lineageTag: 6cb88300-ac62-42f3-b579-fd7c62fe37d0

	measure 'Has filter - Index details - Index configuration' =
			
			IF (
			    ISINSCOPE ( 'Index'[Index] ),
			    SELECTEDVALUE ( 'Index configuration'[HasFilter] ) + 0
			)
		formatString: 0
		displayFolder: Index details
		lineageTag: 65e878af-3e96-4507-b9ef-fbda9a674be3

	measure 'Filter definition - Index details - Index configuration' =
			
			IF (
			    ISINSCOPE ( 'Index'[Index] ),
			    MAX ( 'Index configuration'[FilterDefinition] )
			)
		displayFolder: Index details
		lineageTag: 4e03d819-6186-4be8-b2b7-0d4cc44ccb84

	measure 'Last user seeks - Index details - Missing indexes' =
			
			VAR _objectKey =
			    MAX ( Object[ObjectKey] )
			VAR _value =
			    CALCULATE (
			        MAX ( 'Missing indexes - Index details'[LastUserSeek] ),
			        'Missing indexes - Index details'[ObjectKey] = _objectKey
			    )
			VAR _result = _value
			RETURN
			    _result
		formatString: dd-mmm-yyyy hh:nn
		displayFolder: Index details
		lineageTag: eb335084-71dc-4409-a2b9-12160cd8a2fc

		annotation PBI_FormatHint = {"isCustom":true}

	measure 'Rows - Index details' =
			
			CALCULATE (
			    MAX ( 'Table size'[Rows] ),
			    FILTER ( 'Table size', 'Table size'[Date] = MAX ( 'Table size'[Date] ) )
			)
		formatString: #,0
		displayFolder: Index details
		lineageTag: 80363a7f-cc23-4c75-8c84-7c222b949daa

	measure 'Data KB - Index details' =
			
			CALCULATE (
			    MAX ( 'Table size'[Data] ),
			    FILTER ( 'Table size', 'Table size'[Date] = MAX ( 'Table size'[Date] ) )
			)
		formatString: #,0
		displayFolder: Index details
		lineageTag: a7dc6df5-77b1-4bb2-b4d1-f01468d8e7d4

	measure 'Index KB - Index details' =
			
			CALCULATE (
			    MAX ( 'Table size'[IndexSize] ),
			    FILTER ( 'Table size', 'Table size'[Date] = MAX ( 'Table size'[Date] ) )
			)
		formatString: #,0
		displayFolder: Index details
		lineageTag: 71e904f4-3efb-4af2-9e16-0a65c3e0c040

	measure 'Title - Index details - Missing indexes' = ```
			
			VAR _minDataDate =
			    MIN ( 'Missing indexes'[Date] )
			VAR _maxDataDate =
			    MAX ( 'Missing indexes'[Date] )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _userImpactLimit =
			    SELECTEDVALUE ( 'Values 0-90 (10 delta)'[Value] )
			VAR _txt =
			    "Missing index data"
			        & IF (
			            _minDataDate <> BLANK (),
			            " between " & _minDataDateTxt & " and " & _maxDataDateTxt & " and impact greater or equal to " & _userImpactLimit
			        )
			VAR _result = _txt
			RETURN
			    _result
			
			```
		displayFolder: Index details
		lineageTag: ebd14b61-2427-4c16-8d6e-62e9efc03caf

	measure 'Title - Index details - Index usage' =
			
			VAR _latestDate = [Latest date - Index usage]
			VAR _pastDate = [Past date - Index usage]
			VAR _realDatesBackInTime =
			    DATEDIFF ( _pastDate, _latestDate, DAY )
			VAR _realDatesBackInTimeTxt =
			    FORMAT ( _realDatesBackInTime, "#,##0" )
			VAR _latestDateTxt =
			    FORMAT ( _latestDate, [Date format string] ) & " ("
			        & FORMAT ( _latestDate, [Dayname format string] ) & ")"
			VAR _pastDateTxt =
			    FORMAT ( _pastDate, [Date format string] ) & " ("
			        & FORMAT ( _pastDate, [Dayname format string] ) & ")"
			VAR _txt =
			    "Index usage"
			        & IF (
			            _latestDate <> BLANK (),
			            " for " & _latestDateTxt & " with total including from " & _pastDateTxt & " - " & _realDatesBackInTimeTxt & " days"
			        )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Index details
		lineageTag: d3fb18c3-9419-406c-8963-39ee87f92939

	measure 'Index ratio of data - Index details' =
			
			VAR _data = [Data KB - Index details]
			VAR _Index = [Index KB - Index details]
			VAR _ratio =
			    DIVIDE ( _index, _data )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Index details
		lineageTag: a8ee779f-6c28-4237-9132-66534a1b5ed1

	measure 'Home button tooltip text' =
			
			"Go to the Front page"
		displayFolder: Common
		lineageTag: 5297c305-1323-4846-bfeb-8da29050d28e

	measure 'Back button tooltip text' =
			
			"Go back to the previous page"
		displayFolder: Common
		lineageTag: 965b0b03-a9b8-4ae5-b33c-b41f0f36713a

	measure 'Data KB - Index configuration' =
			
			VAR _maxTableSizeDate =
			    MAX ( 'Table size'[Date] )
			VAR _value =
			    CALCULATE (
			        SUM ( 'Table size'[Data] ),
			        'Table size'[Date] = _maxTableSizeDate,
			        USERELATIONSHIP ( 'Index configuration'[IndexKey], 'Table size'[IndexKey] )
			    )
			VAR _result = _value
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index configuration
		lineageTag: 85ee12b4-ff4c-4bb1-aa22-a89c476d0fbf

	measure 'Index KB - Index configuration' =
			
			VAR _maxTableSizeDate =
			    MAX ( 'Table size'[Date] )
			VAR _value =
			    CALCULATE (
			        SUM ( 'Table size'[IndexSize] ),
			        'Table size'[Date] = _maxTableSizeDate,
			        USERELATIONSHIP ( 'Index configuration'[IndexKey], 'Table size'[IndexKey] )
			    )
			VAR _result = _value
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index configuration
		lineageTag: ea99d92c-8678-4eed-b76f-ada0a8c08c6e

	measure 'Index ratio of data - Index configuration' =
			
			VAR _data = [Data KB - Index configuration]
			VAR _Index = [Index KB - Index configuration]
			VAR _ratio =
			    DIVIDE ( _index, _data )
			VAR _result = _ratio
			RETURN
			    _result
		formatString: #,0.00\ %;-#,0.00\ %;#,0.00\ %
		displayFolder: Index configuration
		lineageTag: bb2659da-0810-47a1-a132-522f539324e3

	measure 'Data range - Index configuration' =
			
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Index usage'[Date] ), ALL () )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _maxDataDate = BLANK (),
			        "",
			        "Data available at " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Index configuration
		lineageTag: 1617801e-1b3e-41bf-9eed-1cff84ea10e1

	measure 'Show filters - Index configuration' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ),
			    VAR _items =
			        VALUES ( 'Index'[Database] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Index'[Database], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Index'[Schema] ),
			        VAR _items =
			            VALUES ( 'Index'[Schema] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Schema], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Object] ),
			        VAR _items =
			            VALUES ( 'Index'[Object] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Object], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Index] ),
			        VAR _items =
			            VALUES ( 'Index'[Index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Index'[Index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Index configuration
		lineageTag: f81459ec-cdab-44ae-aa5e-9c5755be5c71

	measure 'Show filters Headers - Index configuration' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ),
			    "Database:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Database] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Index'[Schema] ),
			        "Schema:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Schema] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Object] ),
			        "Object:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Object] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Index'[Index] ),
			        "Index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Index'[Index] ) ) )
			    )
		displayFolder: Index configuration
		lineageTag: 841fd212-02ec-4305-abc7-c84ca682432e

	measure 'Is filters applied - Index configuration' =
			
			IF (
			    ISFILTERED ( 'Index'[Database] ) || ISFILTERED ( 'Index'[Schema] )
			        || ISFILTERED ( 'Index'[Object] )
			        || ISFILTERED ( 'Index'[Index] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Index configuration
		lineageTag: e8e4c495-07b2-47f6-95ff-b6535fba80c3

	measure 'Open filter button tooltip - Index configuration' =
			
			IF (
			    [Is filters applied - Index configuration] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Index configuration
		lineageTag: db4460c5-1449-43a8-bd6a-86694b85656d

	measure 'Rows - Index configuration' =
			
			VAR _maxTableSizeDate =
			    MAX ( 'Table size'[Date] )
			VAR _indexRows =
			    CALCULATE (
			        SUM ( 'Table size'[Rows] ),
			        'Table size'[Date] = _maxTableSizeDate,
			        USERELATIONSHIP ( 'Index configuration'[IndexKey], 'Table size'[IndexKey] )
			    )
			VAR _objectRows =
			    CALCULATE (
			        SUM ( 'Table size'[Rows] ),
			        'Table size'[Date] = _maxTableSizeDate,
			        'Index configuration'[IndexTypeDesc] IN { "CL", "HEAP" },
			        USERELATIONSHIP ( 'Index configuration'[IndexKey], 'Table size'[IndexKey] )
			    )
			VAR _value =
			    IF ( ISINSCOPE ( 'Index'[Index] ), _indexRows, _objectRows )
			VAR _result = _value
			RETURN
			    _result
		formatString: #,0
		displayFolder: Index configuration
		lineageTag: 9a46f836-1626-49c1-9dc6-8e44b9873107

	measure 'VLF - Index configuration' =
			
			[Rows - Index configuration]
		formatString: 0
		displayFolder: Index configuration
		lineageTag: f95d7c03-388a-4cc0-864b-b12147a7fbf1

	measure 'Index columns - Index configuration' =
			
			IF ( ISINSCOPE ( 'Index'[Index] ), MAX ( 'Index configuration'[IndexColumns] ) )
		displayFolder: Index configuration
		lineageTag: d9e51b19-5c6a-4d6d-8e9f-18efd25d9935

	measure 'Included columns - Index configuration' =
			
			IF ( ISINSCOPE ( 'Index'[Index] ), MAX ( 'Index configuration'[IncludedColumns] ) )
		displayFolder: Index configuration
		lineageTag: 1ab912d8-ce7a-451d-bc6b-279447de51fa

	measure 'Index type description - Index configuration' =
			
			IF ( ISINSCOPE ( 'Index'[Index] ), MAX ( 'Index configuration'[IndexTypeDesc] ) )
		displayFolder: Index configuration
		lineageTag: c534e5e4-99d4-4de3-a7ff-6ac9d2749b85

	measure 'Is primary key - Index configuration' =
			
			IF ( ISINSCOPE ( 'Index'[Index] ), MAX ( 'Index configuration'[IsPrimaryKey] ) )
		formatString: 0
		displayFolder: Index configuration
		lineageTag: edf9327c-8c5b-46d3-8465-f4262d1fec31

	measure 'Is unique - Index configuration' =
			
			IF ( ISINSCOPE ( 'Index'[Index] ), MAX ( 'Index configuration'[IsUnique] ) )
		formatString: 0
		displayFolder: Index configuration
		lineageTag: 3e4f3210-9146-4237-9b67-ed83e6ff12c8

	measure 'Is disabled - Index configuration' =
			
			IF ( ISINSCOPE ( 'Index'[Index] ), MAX ( 'Index configuration'[IsDisabled] ) )
		formatString: 0
		displayFolder: Index configuration
		lineageTag: a682c655-c16d-416b-80f8-410c2654e91e

	measure 'Is hypothetical - Index configuration' =
			
			IF ( ISINSCOPE ( 'Index'[Index] ), MAX ( 'Index configuration'[IsHypothetical] ) )
		formatString: 0
		displayFolder: Index configuration
		lineageTag: 9fa9b861-cb73-41dd-aad5-4c7e1e1ae7b6

	measure 'Filter definition - Index configuration' =
			
			IF ( ISINSCOPE ( 'Index'[Index] ), MAX ( 'Index configuration'[FilterDefinition] ) )
		displayFolder: Index configuration
		lineageTag: 8cad6d83-bd3a-41a0-a911-1f352d478805

	measure 'Front page fill color - Version' = ```
			
			VAR _version = [Version number]
			VAR _prodColor = "#F2F7FF"
			VAR _nonProdColor = "#FAE99F"
			VAR _color =
			    IF (
			        ISERROR ( VALUE ( SUBSTITUTE ( _version, ".", "" ) ) ),
			        _nonProdColor,
			        _prodColor
			    )
			VAR _result = _color
			RETURN
			    _result
			
			```
		displayFolder: Common
		lineageTag: 9d0a5270-53b6-4719-9ca9-3c26b9267efd

	measure 'Report pages fill color - Info' = ```
			
			VAR _version = [Version number]
			VAR _prodColor = "#F2F7FF"
			VAR _nonProdColor = "#FAE99F"
			VAR _color =
			    IF (
			        ISERROR ( VALUE ( SUBSTITUTE ( _version, ".", "" ) ) ),
			        _nonProdColor,
			        _prodColor
			    )
			VAR _result = _color
			RETURN
			    _result
			
			```
		displayFolder: Common
		lineageTag: e1e544dc-5db0-45f4-ad63-697c0507f069

	measure 'Show filters Headers - Agent jobs performance' =
			
			IF (
			    ISFILTERED ( 'Agent job status'[Status] ),
			    "Status:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Agent job status'[Status] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Agent job'[Job name] ),
			        "Job:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Agent job'[Job name] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        "Year:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
		displayFolder: Agent jobs performance
		lineageTag: b71d87f4-1711-4153-b135-96f5c92d389e

	measure 'Show filters - Agent jobs performance' =
			
			IF (
			    ISFILTERED ( 'Agent job status'[Status] ),
			    VAR _items =
			        VALUES ( 'Agent job status'[Status] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Agent job status'[Status], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Agent job'[Job name] ),
			        VAR _items =
			            VALUES ( 'Agent job'[Job name] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Agent job'[Job name], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        VAR _items =
			            VALUES ( 'Date'[Year] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Agent jobs performance
		lineageTag: ec8d059b-116e-4f02-98b6-0a4c996ac777

	measure 'Is filters applied - Agent jobs performance' =
			
			IF (
			    ISFILTERED ( 'Agent job status'[Status] ) || ISFILTERED ( 'Agent job'[Job name] )
			        || ISFILTERED ( 'Date'[Year] )
			        || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Agent jobs performance
		lineageTag: 386d86c9-c86b-446c-9b8b-35c0c60c8870

	measure 'Open filter button tooltip - Agent jobs performance' =
			
			IF (
			    [Is filters applied - Agent jobs performance] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Agent jobs performance
		lineageTag: 07fc4c58-2425-4f6c-a324-3619b57cb9e6

	measure 'Data range - Agent jobs performance' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Agent jobs performance'[Date] ), ALL () )
			VAR _maxDataDate =
			    CALCULATE ( MAX ( 'Agent jobs performance'[Date] ), ALL () )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Agent jobs performance
		lineageTag: 1209ed38-5d31-4dc0-b496-cf76d305318b

	measure 'Executions - Agent jobs performance' =
			
			SUM ( 'Agent jobs performance'[Cnt] )
		formatString: #,0
		displayFolder: Agent jobs performance
		lineageTag: d463a3d0-52cf-4cbf-899d-da6c174fd80b

	measure 'Duration in sec. - Agent jobs performance' =
			
			SUM ( 'Agent jobs performance'[SumDurationSeconds] )
		formatString: #,0
		displayFolder: Agent jobs performance
		lineageTag: a895a2fd-db37-4a9f-b04b-ea373f9a7baa

	measure 'Executions (Succeeded - tooltip) - Agent jobs performance' =
			
			VAR _cnt =
			    CALCULATE (
			        [Executions - Agent jobs performance],
			        'Agent job status'[Status] = "Succeeded",
			        ALL ( 'Agent job status' )
			    )
			VAR _sec =
			    CALCULATE (
			        [Duration in sec. - Agent jobs performance],
			        'Agent job status'[Status] = "Succeeded",
			        ALL ( 'Agent job status' )
			    )
			VAR _cntZeroed =
			    IF ( _cnt = BLANK (), 0, _cnt )
			VAR _secZeroed =
			    IF ( _sec = BLANK (), 0, _sec )
			VAR _text =
			    FORMAT ( _cntZeroed, "#,##0" ) & ": "
			        & FORMAT ( _secZeroed, "#,##0" ) & " seconds"
			VAR _return = _text
			RETURN
			    _return
		displayFolder: Agent jobs performance
		lineageTag: 2b4237ff-cdc0-4e30-9900-1365dd1e79f8

	measure 'Executions (Failed - tooltip) - Agent jobs performance' =
			
			VAR _cnt =
			    CALCULATE (
			        [Executions - Agent jobs performance],
			        'Agent job status'[Status] = "Failed",
			        ALL ( 'Agent job status' )
			    )
			VAR _sec =
			    CALCULATE (
			        [Duration in sec. - Agent jobs performance],
			        'Agent job status'[Status] = "Failed",
			        ALL ( 'Agent job status' )
			    )
			VAR _cntZeroed =
			    IF ( _cnt = BLANK (), 0, _cnt )
			VAR _secZeroed =
			    IF ( _sec = BLANK (), 0, _sec )
			VAR _text =
			    FORMAT ( _cntZeroed, "#,##0" ) & ": "
			        & FORMAT ( _secZeroed, "#,##0" ) & " seconds"
			VAR _return = _text
			RETURN
			    _return
		displayFolder: Agent jobs performance
		lineageTag: 1a2203e1-4541-47e2-8e1a-194648389d25

	measure 'Executions (Ended with errors - tooltip) - Agent jobs performance' =
			
			VAR _cnt =
			    CALCULATE (
			        [Executions - Agent jobs performance],
			        'Agent job status'[Status] = "Ended with errors",
			        ALL ( 'Agent job status' )
			    )
			VAR _sec =
			    CALCULATE (
			        [Duration in sec. - Agent jobs performance],
			        'Agent job status'[Status] = "Ended with errors",
			        ALL ( 'Agent job status' )
			    )
			VAR _cntZeroed =
			    IF ( _cnt = BLANK (), 0, _cnt )
			VAR _secZeroed =
			    IF ( _sec = BLANK (), 0, _sec )
			VAR _text =
			    FORMAT ( _cntZeroed, "#,##0" ) & ": "
			        & FORMAT ( _secZeroed, "#,##0" ) & " seconds"
			VAR _return = _text
			RETURN
			    _return
		displayFolder: Agent jobs performance
		lineageTag: 8cd533c7-93a1-42ac-bb54-263456ae1808

	measure 'Executions (Total - tooltip) - Agent jobs performance' =
			
			VAR _cnt =
			    CALCULATE (
			        [Executions - Agent jobs performance],
			        'Agent job status'[Status] <> "Missing data",
			        ALL ( 'Agent job status' )
			    )
			VAR _sec =
			    CALCULATE (
			        [Duration in sec. - Agent jobs performance],
			        'Agent job status'[Status] <> "Missing data",
			        ALL ( 'Agent job status' )
			    )
			VAR _cntZeroed =
			    IF ( _cnt = BLANK (), 0, _cnt )
			VAR _secZeroed =
			    IF ( _sec = BLANK (), 0, _sec )
			VAR _text =
			    FORMAT ( _cntZeroed, "#,##0" ) & ": "
			        & FORMAT ( _secZeroed, "#,##0" ) & " seconds"
			VAR _return = _text
			RETURN
			    _return
		displayFolder: Agent jobs performance
		lineageTag: 12368882-17cf-46be-b5da-7cf8927baef7

	measure 'Data range - Database configuration history' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Database state history'[From] ) )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data from " & _minDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Database configuration history
		lineageTag: b03c0777-4cb2-4a0b-8a1a-6cf080dfaf3b

	measure 'Data range - Instance configuration hardware history' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Instance hardware history'[From] ) )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data from " & _minDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Instance configuration hardware history
		lineageTag: 73f82cb8-88a2-48d1-89f4-68e8d34cbbbf

	measure 'Data range - Instance configuration configurations history' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Instance configurations history'[From] ) )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data from " & _minDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Instance configuration configurations history
		lineageTag: d7d4df06-dc6f-4898-a4c4-80134b04d49e

	measure 'Data range - Trace flags history' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Trace flags history'[From] ) )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data from " & _minDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Trace flags history
		lineageTag: 46807fa4-f283-4d9f-a2bd-f610ad13b6a2

	measure 'Data range - Instance SQL agent properties history' =
			
			VAR _minDataDate =
			    CALCULATE ( MIN ( 'Instance SQL agent properties history'[From] ) )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data from " & _minDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Instance SQL agent properties history
		lineageTag: 39def929-17f5-4679-8029-99afc23d0a73

	measure 'Title - Database configuration' =
			
			"Database configuration " & [Drill-through symbol]
		displayFolder: Database configuration
		lineageTag: 99d90fcb-2cce-4181-b26e-db0d45ae2793

	measure 'Title - Hardware - Instance configuration' =
			
			"Hardware " & [Drill-through symbol]
		displayFolder: Instance configuration
		lineageTag: b065a896-6907-413d-af6b-d6318d5c5a51

	measure 'Title - Configurations - Instance configuration' =
			
			"Configurations " & [Drill-through symbol]
		displayFolder: Instance configuration
		lineageTag: 082aaa8b-b2a4-4906-96b6-853b0ed3bb05

	measure 'Title - SQL agent properties - Instance configuration' =
			
			"SQL agent properties " & [Drill-through symbol]
		displayFolder: Instance configuration
		lineageTag: e2c08eca-4797-4ba2-8fca-53c7add4c818

	measure 'Title - Trace flags - Instance configuration' =
			
			"Trace flags " & [Drill-through symbol]
		displayFolder: Instance configuration
		lineageTag: b3146b0b-54df-4176-b1c8-e49a25a03690

	measure 'Drill-through symbol' =
			
			"(" & UNICHAR ( 10140 ) & UNICHAR ( 10140 ) & UNICHAR ( 10140 ) & ")"
		displayFolder: Common
		lineageTag: 970c9077-31f5-4793-9e4b-ab3ee5f8ddcd

	measure 'Date - Hour text' =
			
			VAR _date =
			    MAX ( 'Date'[Date] )
			VAR _dateTxt =
			    FORMAT ( _date, [Date format string] )
			VAR _hour =
			    MAX ( 'Time'[Hour] )
			VAR _hourTxt =
			    FORMAT ( _hour, "#0" )
			VAR _txt =
			    _dateTxt
			        & IF ( ISFILTERED ( 'Time' ), " Hour: " & _hourTxt, "" )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Common
		lineageTag: 6802e0e5-271d-4731-bab8-92b827c7d771

	measure 'Executions (Other errors - tooltip) - Agent jobs performance' =
			
			VAR _cnt =
			    CALCULATE (
			        [Executions - Agent jobs performance],
			        NOT 'Agent job status'[Status] IN { "Succeeded", "Ended with errors", "Failed", "Missing data" },
			        ALL ( 'Agent job status' )
			    )
			VAR _sec =
			    CALCULATE (
			        [Duration in sec. - Agent jobs performance],
			        NOT 'Agent job status'[Status] IN { "Succeeded", "Ended with errors", "Failed", "Missing data" },
			        ALL ( 'Agent job status' )
			    )
			VAR _cntZeroed =
			    IF ( _cnt = BLANK (), 0, _cnt )
			VAR _secZeroed =
			    IF ( _sec = BLANK (), 0, _sec )
			VAR _text =
			    FORMAT ( _cntZeroed, "#,##0" ) & ": "
			        & FORMAT ( _secZeroed, "#,##0" ) & " seconds"
			VAR _return = _text
			RETURN
			    _return
		displayFolder: Agent jobs performance
		lineageTag: 26601c25-714b-42d3-a153-d60663bed3f1

	measure 'Executions (Succeeded) - Agent jobs performance' =
			
			CALCULATE (
			    [Executions - Agent jobs performance],
			    'Agent job status'[Status] = "Succeeded",
			    ALL ( 'Agent job status' )
			)
		formatString: #,0
		displayFolder: Agent jobs performance
		lineageTag: d20deb55-a65b-45d4-8c2a-1a2d4b5725cb

	measure 'Executions (Ended with errors) - Agent jobs performance' =
			
			CALCULATE (
			    [Executions - Agent jobs performance],
			    'Agent job status'[Status] = "Ended with errors",
			    ALL ( 'Agent job status' )
			)
		formatString: #,0
		displayFolder: Agent jobs performance
		lineageTag: 27f95689-9b5a-489e-ad1a-5d5ac53bc777

	measure 'Executions (Failed) - Agent jobs performance' =
			
			CALCULATE (
			    [Executions - Agent jobs performance],
			    'Agent job status'[Status] = "Failed",
			    ALL ( 'Agent job status' )
			)
		formatString: #,0
		displayFolder: Agent jobs performance
		lineageTag: 5d380db0-9fea-464c-9932-c580157dc6c7

	measure 'Executions (Other errors) - Agent jobs performance' =
			
			CALCULATE (
			    [Executions - Agent jobs performance],
			    NOT 'Agent job status'[Status] IN { "Succeeded", "Ended with errors", "Failed", "Missing data" },
			    REMOVEFILTERS ( 'Agent job status' )
			)
		formatString: #,0
		displayFolder: Agent jobs performance
		lineageTag: b5ced8e2-fdd3-4732-bc20-c15a39bf783b

	measure 'Executions (Missing data) - Agent jobs performance' =
			
			CALCULATE (
			    [Executions - Agent jobs performance],
			    'Agent job status'[Status] = "Missing data",
			    ALL ( 'Agent job status' )
			)
		formatString: 0
		displayFolder: Agent jobs performance
		lineageTag: c699eb11-b35c-49f9-bbaa-e5d6820e5fb1

	measure 'Success rate - Agent jobs performance' =
			
			VAR _all = [Executions (Succeeded) - Agent jobs performance] + [Executions (Failed) - Agent jobs performance] + [Executions (Ended with errors) - Agent jobs performance] + [Executions (Other errors) - Agent jobs performance]
			VAR _success = [Executions (Succeeded) - Agent jobs performance]
			VAR _value =
			    IF (
			        _all = BLANK ()
			            && _success = BLANK (),
			        BLANK (),
			        IF ( _success = BLANK (), 0, DIVIDE ( _success, _all ) )
			    )
			VAR _result = _value
			RETURN
			    _result
		formatString: 0.00\ %;-0.00\ %;0.00\ %
		displayFolder: Agent jobs performance
		lineageTag: 6859fc51-0e24-43f8-bfe0-5a37bd1a9042

	measure 'Rows - Statistics age' =
			
			SUM ( 'Statistics age'[Rows] )
		formatString: #,0
		displayFolder: Statistics\Statistics age
		lineageTag: 5b74bad6-a182-4b55-8b52-e920dec15599

	measure 'Rows sampled - Statistics age' =
			
			SUM ( 'Statistics age'[Rows sampled] )
		formatString: #,0
		displayFolder: Statistics\Statistics age
		lineageTag: 29596b84-6c48-4c8f-af48-b1ef25b05d8a

	measure 'Modification counter - Statistics age' =
			
			SUM ( 'Statistics age'[Modification counter] )
		formatString: 0
		displayFolder: Statistics\Statistics age
		lineageTag: 6e08b2de-7c59-4447-98e8-ef1ad50688cd

	measure 'Rows - Statistics age incremental' =
			
			SUM ( 'Statistics age incremental'[Rows] )
		formatString: #,0
		displayFolder: Statistics\Statistics age incremental
		lineageTag: d56661dd-1302-423c-b0a7-97d03b6942f2

	measure 'Rows sampled - Statistics age incremental' =
			
			SUM ( 'Statistics age incremental'[Rows sampled] )
		formatString: #,0
		displayFolder: Statistics\Statistics age incremental
		lineageTag: 98e63f65-ccc4-4aa4-b77e-fff0aa7afbe8

	measure 'Modification counter - Statistics age incremental' =
			
			SUM ( 'Statistics age incremental'[Modification counter] )
		formatString: #,0
		displayFolder: Statistics\Statistics age incremental
		lineageTag: cb0f9ee7-8a95-458a-b8b0-a5a3264acd20

	measure 'Data range - Blocks and deadlocks' =
			
			VAR _minDataDate =
			    MIN (
			        CALCULATE ( MIN ( 'Blocked process'[Date] ), ALL () ),
			        CALCULATE ( MIN ( 'Deadlock'[Date] ), ALL () )
			    )
			VAR _maxDataDate =
			    MAX (
			        CALCULATE ( MAX ( 'Blocked process'[Date] ), ALL () ),
			        CALCULATE ( MAX ( 'Deadlock'[Date] ), ALL () )
			    )
			VAR _minDataDateTxt =
			    FORMAT ( _minDataDate, [Date format string] )
			VAR _maxDataDateTxt =
			    FORMAT ( _maxDataDate, [Date format string] )
			VAR _txt =
			    IF (
			        _minDataDate = BLANK (),
			        "",
			        "Data available between " & _minDataDateTxt & " and " & _maxDataDateTxt
			    )
			VAR _result = _txt
			RETURN
			    _result
		displayFolder: Blocks and deadlocks
		lineageTag: 3646f2be-c3f2-40a2-afbe-6ed5a3a69f65

	measure 'Show filters - Blocks and deadlocks' =
			
			IF (
			    ISFILTERED ( 'Blocks and deadlocks'[Client application] ),
			    VAR _items =
			        VALUES ( 'Blocks and deadlocks'[Client application] )
			    VAR _itemsCombined =
			        CONCATENATEX ( _items, 'Blocks and deadlocks'[Client application], UNICHAR ( 10 ) )
			    RETURN
			        _itemsCombined & UNICHAR ( 10 )
			)
			    & IF (
			        ISFILTERED ( 'Blocks and deadlocks'[Host name] ),
			        VAR _items =
			            VALUES ( 'Blocks and deadlocks'[Host name] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Blocks and deadlocks'[Host name], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Blocks and deadlocks'[Login name] ),
			        VAR _items =
			            VALUES ( 'Blocks and deadlocks'[Login name] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Blocks and deadlocks'[Login name], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        VAR _items =
			            VALUES ( 'Date'[Year] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Year], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        VAR _items =
			            VALUES ( 'Date'[Month] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Month], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        VAR _items =
			            VALUES ( 'Date'[Day] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        VAR _items =
			            VALUES ( 'Date'[Day index] )
			        VAR _itemsCombined =
			            CONCATENATEX ( _items, 'Date'[Day index], UNICHAR ( 10 ) )
			        RETURN
			            _itemsCombined & UNICHAR ( 10 )
			    )
		displayFolder: Blocks and deadlocks
		lineageTag: 22236592-c406-499b-b014-0525e8ffb672

	measure 'Show filters Headers - Blocks and deadlocks' =
			
			IF (
			    ISFILTERED ( 'Blocks and deadlocks'[Client application] ),
			    "Client app.:" & UNICHAR ( 127 )
			        & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Blocks and deadlocks'[Client application] ) ) )
			)
			    & IF (
			        ISFILTERED ( 'Blocks and deadlocks'[Host name] ),
			        "Host name:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Blocks and deadlocks'[Host name] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Blocks and deadlocks'[Login name] ),
			        "Login name:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Blocks and deadlocks'[Login name] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Year] ),
			        "Year:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Year] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Month] ),
			        "Month:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Month] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day] ),
			        "Day:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day] ) ) )
			    )
			    & IF (
			        ISFILTERED ( 'Date'[Day index] ),
			        "Day index:" & UNICHAR ( 127 )
			            & REPT ( UNICHAR ( 10 ), COUNTROWS ( VALUES ( 'Date'[Day index] ) ) )
			    )
		displayFolder: Blocks and deadlocks
		lineageTag: c7b37e4f-ccde-4295-acbc-4cd1df213df3

	measure '# Blocked process - Blocks and deadlocks' =
			
			DISTINCTCOUNT ( 'Blocked process'[Data set] )
		formatString: #,0
		displayFolder: Blocks and deadlocks
		lineageTag: 13aa6c76-f5b3-4598-9b9c-fb6d4015dca8

	measure '# Deadlock - Blocks and deadlocks' =
			
			DISTINCTCOUNT ( Deadlock[Data set] )
		formatString: #,0
		displayFolder: Blocks and deadlocks
		lineageTag: 250ffbc6-6b55-4ca3-b748-00592015c56e

	measure 'VLF - Blocks and deadlocks' =
			
			[# Blocked process - Blocks and deadlocks] + [# Deadlock - Blocks and deadlocks]
		formatString: 0
		displayFolder: Blocks and deadlocks
		lineageTag: ff9831d2-c0f6-4a12-a17e-25b0f4c876dc

	measure 'Is filters applied - Blocks and deadlocks' =
			
			IF (
			    ISFILTERED ( 'Blocks and deadlocks'[Client application] ) || ISFILTERED ( 'Blocks and deadlocks'[Host name] )
			        || ISFILTERED ( 'Blocks and deadlocks'[Login name] )
			        || ISFILTERED ( 'Date'[Year] )
			        || ISFILTERED ( 'Date'[Month] )
			        || ISFILTERED ( 'Date'[Day] )
			        || ISFILTERED ( 'Date'[Day index] ),
			    1,
			    0
			)
		formatString: 0
		displayFolder: Blocks and deadlocks
		lineageTag: b5b66304-1783-48bb-8766-197b05f4949a

	measure 'Open filter button tooltip - Blocks and deadlocks' =
			
			IF (
			    [Is filters applied - Blocks and deadlocks] = 1,
			    [Filters are applied text],
			    [Filters are not applied]
			)
		displayFolder: Blocks and deadlocks
		lineageTag: a8ec7265-3df7-4a45-b8ed-d8bbb6c4a77f

	measure 'Copy only flag - Backup status' =
			
			SELECTEDVALUE ( 'Backup status'[Copy only] ) + 0
		formatString: 0
		displayFolder: Backup\Backup status
		lineageTag: 8f4f8334-7d32-4bb5-b722-18e8715da163

	measure 'Damaged flag - Backup status' =
			
			SELECTEDVALUE ( 'Backup status'[Damaged] ) + 0
		formatString: 0
		displayFolder: Backup\Backup status
		lineageTag: acc2b693-117a-4604-9016-21cc73ec3c97

	measure 'Backups # - Backup status' =
			
			COUNTROWS ( 'Backup status' ) + 0
		formatString: #,0
		displayFolder: Backup\Backup status
		lineageTag: 0dc0de14-2756-4397-8469-6de5ab6c0129

	measure 'Copy only backups # - Backup status' =
			
			CALCULATE (
			    [Backups # - Backup status],
			    'Backup status'[Copy only]
			)
		formatString: #,0
		displayFolder: Backup\Backup status
		lineageTag: 13588d13-f0c0-45f7-8c3c-df5491d80995

	measure 'Damaged backups # - Backup status' =
			
			CALCULATE (
			    [Backups # - Backup status],
			    'Backup status'[Damaged]
			)
		formatString: #,0
		displayFolder: Backup\Backup status
		lineageTag: 0a15e2ef-72f7-4673-83ee-a8397e23050d

	measure 'Data set - Blocks details' =
			
			"Data set is " & FORMAT ( MAX ( 'Blocked process'[Data set] ), "#,0" )
		displayFolder: Blocks and deadlocks\Block details
		lineageTag: 7e58c956-7044-4638-8f4b-f2e64e539ca1

	measure 'Data set info - Blocks details' =
			
			"Execute query to get details like XML data:"
			    & " SELECT * FROM"
			    & " [" & MAX ( 'Database name'[Database name] ) & "]" & ".dbo.fhsmInfoBlocks"
			    & " WHERE Id = " & MAX ( 'Blocked process'[Data set] ) & ";"
		displayFolder: Blocks and deadlocks\Block details
		lineageTag: 5df9469b-7c6a-4841-967a-31d6b9ec9732

	measure 'Title Blocks - Blocks and deadlocks' =
			
			"Blocks " & [Drill-through symbol]
		displayFolder: Blocks and deadlocks
		lineageTag: 3b69bcc6-54de-4939-ac10-d63ab6b6a4f1

	measure 'Data set - Deadlock details' =
			
			"Data set is " & FORMAT ( MAX ( Deadlock[Data set] ), "#,0" )
		displayFolder: Blocks and deadlocks\Deadlock details
		lineageTag: 82fd8b8f-3c70-4a07-a80a-a967fe4a690e

	measure 'Data set info - Deadlock details' =
			
			"Execute query to get details like XML and XDL (Deadlock graph) data:"
			    & " SELECT * FROM"
			    & " [" & MAX ( 'Database name'[Database name] ) & "]" & ".dbo.fhsmInfoDeadlocks"
			    & " WHERE Id = " & MAX ( Deadlock[Data set] ) & ";"
		displayFolder: Blocks and deadlocks\Deadlock details
		lineageTag: 5e38634c-4d48-489e-b468-1e6061973717

	measure 'Title Deadlocks - Blocks and deadlocks' =
			
			"Deadlocks " & [Drill-through symbol]
		displayFolder: Blocks and deadlocks
		lineageTag: 52a7b3d4-1dcc-4ceb-9428-9cb4495aae3a

	partition _Measures = m
		mode: import
		queryGroup: Aux
		source = ```
				let
				  Source = Table.FromRows(
				    Json.Document(
				      Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)
				    ), 
				    let
				      _t = ((type nullable text) meta [Serialized.Text = true])
				    in
				      type table [Column1 = _t]
				  ), 
				  ChangedType = Table.TransformColumnTypes(Source, {{"Column1", type text}}), 
				  RemoveColumns = Table.RemoveColumns(ChangedType, {"Column1"})
				in
				  RemoveColumns
				```

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

