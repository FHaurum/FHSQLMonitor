table 'Log shipping primary databases'
	lineageTag: 9c4c9e58-ea79-4a49-b178-958eeec2d9fe

	column 'Time since previous backup'
		dataType: int64
		formatString: #,0
		lineageTag: affe2385-b64b-40dd-a9c9-4e0cceb71aad
		summarizeBy: none
		sourceColumn: Time since previous backup

		annotation SummarizationSetBy = User

	column Date
		dataType: dateTime
		isHidden
		formatString: Long Date
		lineageTag: d084c143-adce-46c0-bf0d-bb56d31034bb
		summarizeBy: none
		sourceColumn: Date

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column TimeKey
		dataType: int64
		isHidden
		formatString: 0
		lineageTag: b310fc08-900e-4e81-a50c-3a2b5b52e3e6
		summarizeBy: none
		sourceColumn: TimeKey

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column DatabaseKey
		dataType: int64
		isHidden
		formatString: 0
		lineageTag: 59478664-0dab-4a34-83f0-378051626060
		summarizeBy: none
		sourceColumn: DatabaseKey

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	partition 'Log shipping primary databases' = m
		mode: import
		queryGroup: Facts
		source = ```
				let
				  loadConfig = Record.Field(
				    Table.First(Table.SelectRows(#"Data load", each [Service] = "Log shipping")), 
				    "DataLoad"
				  ), 
				  dbList = Sql.Databases(#"Server name"), 
				  db     = dbList{[Name = #"Database name"]}[Data], 
				  table  = db{[Schema = #"Schema name", Item = "Log shipping primary databases"]}[Data], 
				  emptyDataset = Table.FirstN(table, 0), 
				  datasetToUse = if (loadConfig = "Yes") then table else emptyDataset, 
				  selectColumns = Table.SelectColumns(
				    datasetToUse, 
				    {
				      "TimeSincePreviousBackup", 
				      "Date", 
				      "TimeKey", 
				      "DatabaseKey"
				    }
				  ), 
				  renameColumns = Table.RenameColumns(
				    selectColumns, 
				    {
				      {"TimeSincePreviousBackup", "Time since previous backup"}
				    }
				  )
				in
				  renameColumns
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

