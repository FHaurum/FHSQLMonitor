table 'Log shipping secondary databases'
	lineageTag: 740d9ae6-e163-42e2-9ed3-8da0d308058d

	column 'Time since previous restore'
		dataType: int64
		formatString: #,0
		lineageTag: 626befa3-6451-4f91-ab0c-02a53ff98245
		summarizeBy: none
		sourceColumn: Time since previous restore

		annotation SummarizationSetBy = User

	column Date
		dataType: dateTime
		isHidden
		formatString: Long Date
		lineageTag: fa07cb5a-c19a-4b45-ad82-3d67bd8a23b9
		summarizeBy: none
		sourceColumn: Date

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column TimeKey
		dataType: int64
		isHidden
		formatString: 0
		lineageTag: 54428aec-3c06-4e10-b489-1b7365f485cc
		summarizeBy: none
		sourceColumn: TimeKey

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column DatabaseKey
		dataType: int64
		isHidden
		formatString: 0
		lineageTag: ded09fea-1eeb-47e5-83ff-4b7594243c74
		summarizeBy: none
		sourceColumn: DatabaseKey

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	partition 'Log shipping secondary databases' = m
		mode: import
		queryGroup: Facts
		source = ```
				let
				  loadConfig = Record.Field(
				    Table.First(Table.SelectRows(#"Data load", each [Service] = "Log shipping")), 
				    "DataLoad"
				  ), 
				  dbList = Sql.Databases(#"Server name"), 
				  db     = dbList{[Name = #"Database name"]}[Data], 
				  table  = db{[Schema = #"Schema name", Item = "Log shipping secondary databases"]}[Data], 
				  emptyDataset = Table.FirstN(table, 0), 
				  datasetToUse = if (loadConfig = "Yes") then table else emptyDataset, 
				  selectColumns = Table.SelectColumns(
				    datasetToUse, 
				    {
				      "TimeSincePreviousRestore", 
				      "Date", 
				      "TimeKey", 
				      "DatabaseKey"
				    }
				  ), 
				  renameColumns = Table.RenameColumns(
				    selectColumns, 
				    {
				      {"TimeSincePreviousRestore", "Time since previous restore"}
				    }
				  )
				in
				  renameColumns
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

