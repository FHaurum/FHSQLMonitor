table 'Agent job'
	lineageTag: 86cd0341-3af0-49ac-a9e4-7c1729c9a04c

	column 'Job name'
		dataType: string
		lineageTag: f0e6555f-1aca-441d-83d9-501eacbbab82
		summarizeBy: none
		sourceColumn: Job name

		annotation SummarizationSetBy = Automatic

	column AgentJobKey
		dataType: int64
		isHidden
		formatString: 0
		lineageTag: 4d1b7c4e-1882-4aa7-a667-07016aea0f79
		summarizeBy: none
		sourceColumn: AgentJobKey

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	partition 'Agent job' = m
		mode: import
		queryGroup: Dimensions
		source = ```
				let
				  loadConfigFirstMatch = Table.First(
				    Table.SelectRows(
				      #"Data load", 
				      each List.Contains({"Agent jobs performance"}, [Service])
				        and List.Contains({"Yes"}, [DataLoad])
				    )
				  ), 
				  loadConfig = 
				    if (loadConfigFirstMatch = null) then
				      "No"
				    else
				      Record.Field(loadConfigFirstMatch, "DataLoad"), 
				  dbList = Sql.Databases(#"Server name"), 
				  db = dbList{[Name = #"Database name"]}[Data], 
				  table = db{[Schema = #"Schema name", Item = "Agent job"]}[Data], 
				  emptyDataset = Table.FirstN(table, 0), 
				  datasetToUse = if (loadConfig = "Yes") then table else emptyDataset
				in
				    datasetToUse
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

