table 'Resource governor resource pool affinity'
	lineageTag: 5e4fc5dd-1d15-447b-8289-98c2aaf42f80

	column PoolName
		dataType: string
		lineageTag: b653025c-e2e0-40de-9fb6-d77b43969bc3
		summarizeBy: none
		sourceColumn: PoolName

		annotation SummarizationSetBy = Automatic

	column ProcessorGroup
		dataType: string
		lineageTag: b4ff6a6a-d1bb-431e-a966-057693de3db8
		summarizeBy: none
		sourceColumn: ProcessorGroup

		annotation SummarizationSetBy = Automatic

	column SchedulerMask
		dataType: string
		lineageTag: 46e98f8c-8d48-417f-acd7-17c619687f33
		summarizeBy: none
		sourceColumn: SchedulerMask

		annotation SummarizationSetBy = Automatic

	column Timestamp
		dataType: dateTime
		formatString: dd-mmm-yyyy hh:nn:ss
		lineageTag: f0d1a92e-b597-486a-b010-6d5c2a397731
		summarizeBy: none
		sourceColumn: Timestamp

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isCustom":true}

	partition 'Resource governor resource pool affinity' = m
		mode: import
		queryGroup: Facts
		source = ```
				let
				  loadConfig = Record.Field(
				    Table.First(Table.SelectRows(#"Data load", each [Service] = "Resource Governor configuration")), 
				    "DataLoad"
				  ), 
				  dbList = Sql.Databases(#"Server name"), 
				  db     = dbList{[Name = #"Database name"]}[Data], 
				  table  = db{[Schema = #"Schema name", Item = "Resource governor resource pool affinity"]}[Data], 
				  emptyDataset = Table.FirstN(table, 0), 
				  datasetToUse = if (loadConfig = "Yes") then table else emptyDataset
				in
				  datasetToUse
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

